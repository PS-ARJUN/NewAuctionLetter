//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewAuctionLetter.GL_AUCTION {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GL_AUCTION.Auction_serviceSoap")]
    public interface Auction_serviceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Voucher_gen", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Voucher_gen(int Branch, int TransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Voucher_gen", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Voucher_genAsync(int Branch, int TransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Voucher_transdata", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Voucher_transdata(int Branch, int TransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Voucher_transdata", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Voucher_transdataAsync(int Branch, int TransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_auctiondt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int check_auctiondt(int Branch, int LotID, string Aucdt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_auctiondt", ReplyAction="*")]
        System.Threading.Tasks.Task<int> check_auctiondtAsync(int Branch, int LotID, string Aucdt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_lot_pledges", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_lot_pledges(int BranchID, int LotGoldType, string LettStatus, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_lot_pledges", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_lot_pledgesAsync(int BranchID, int LotGoldType, string LettStatus, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadDocument_branch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UploadDocument_branch(string PledgeNo, int UserId, int Doctsts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadDocument_branch", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UploadDocument_branchAsync(string PledgeNo, int UserId, int Doctsts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_Combo_DocStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Branch_Combo_DocStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_Combo_DocStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Branch_Combo_DocStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_branch_tare_wt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_branch_tare_wt(string Plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_branch_tare_wt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_branch_tare_wtAsync(string Plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_ReleaseGold", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Branch_ReleaseGold(int LotID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_ReleaseGold", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Branch_ReleaseGoldAsync(int LotID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Load_item_dtls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Load_item_dtls(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Load_item_dtls", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Load_item_dtlsAsync(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_menu_status", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int get_menu_status(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_menu_status", ReplyAction="*")]
        System.Threading.Tasks.Task<int> get_menu_statusAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendor_balance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_vendor_balance(int VendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendor_balance", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_vendor_balanceAsync(int VendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_new_auction_status", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int get_new_auction_status(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_new_auction_status", ReplyAction="*")]
        System.Threading.Tasks.Task<int> get_new_auction_statusAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_payid_details", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_payid_details(int payid, int flg, int branchid, int usrid, string pldtls);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_payid_details", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_payid_detailsAsync(int payid, int flg, int branchid, int usrid, string pldtls);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_zero_balace_pledge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int check_zero_balace_pledge(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_zero_balace_pledge", ReplyAction="*")]
        System.Threading.Tasks.Task<int> check_zero_balace_pledgeAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAucCalRepId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetAucCalRepId(int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAucCalRepId", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetAucCalRepIdAsync(int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetpostId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetpostId(int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetpostId", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetpostIdAsync(int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAucCalendarAHRpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAucCalendarAHRpt(string usr, int repid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAucCalendarAHRpt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAucCalendarAHRptAsync(string usr, int repid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBrName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBrName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBrName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBrNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAucInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAucInfo(string brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAucInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAucInfoAsync(string brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAucHrTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAucHrTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAucHrTime", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAucHrTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAucMinTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAucMinTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAucMinTime", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAucMinTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAucCalendar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateAucCalendar(string usr, string brid, System.DateTime prvaucdt, System.DateTime newdt, string prevauctime, string newtime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAucCalendar", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateAucCalendarAsync(string usr, string brid, System.DateTime prvaucdt, System.DateTime newdt, string prevauctime, string newtime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MTD_date", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MTD_date();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MTD_date", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MTD_dateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMTDCatgry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMTDCatgry();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMTDCatgry", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMTDCatgryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Surplus_pend_rpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Surplus_pend_rpt(int BranchId, string ReceiveFrom, string ReceiveTo, int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Surplus_pend_rpt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Surplus_pend_rptAsync(int BranchId, string ReceiveFrom, string ReceiveTo, int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Surplus_pend_rpt_new", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Surplus_pend_rpt_new(int BranchId, string ReceiveFrom, string ReceiveTo, int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Surplus_pend_rpt_new", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Surplus_pend_rpt_newAsync(int BranchId, string ReceiveFrom, string ReceiveTo, int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_area_region", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_area_region(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_area_region", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_area_regionAsync(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAucCalendarRpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAucCalendarRpt(string usr, int repid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAucCalendarRpt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAucCalendarRptAsync(string usr, int repid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_branch_reassess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_branch_reassess(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_branch_reassess", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_branch_reassessAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_purity_reassess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_purity_reassess(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_purity_reassess", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_purity_reassessAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_normalize_reassess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_normalize_reassess(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_normalize_reassess", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_normalize_reassessAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auction_letter_reassess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_auction_letter_reassess(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auction_letter_reassess", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_auction_letter_reassessAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_stdwt_reassess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_stdwt_reassess(string plno, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_stdwt_reassess", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_stdwt_reassessAsync(string plno, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_confirm_reassess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int get_confirm_reassess(string plno, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_confirm_reassess", ReplyAction="*")]
        System.Threading.Tasks.Task<int> get_confirm_reassessAsync(string plno, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendor_category", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_vendor_category();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendor_category", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_vendor_categoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendor_state", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_vendor_state();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendor_state", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_vendor_stateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendor_district", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_vendor_district(int state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendor_district", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_vendor_districtAsync(int state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendor_post", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_vendor_post(int district);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendor_post", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_vendor_postAsync(int district);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_kyc_type", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_kyc_type(int type_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_kyc_type", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_kyc_typeAsync(int type_id);
        
        // CODEGEN: Parameter 'Doc' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Add_New_Vendor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.Add_New_VendorResponse Add_New_Vendor(NewAuctionLetter.GL_AUCTION.Add_New_VendorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Add_New_Vendor", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Add_New_VendorResponse> Add_New_VendorAsync(NewAuctionLetter.GL_AUCTION.Add_New_VendorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_gst_state_dtls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_gst_state_dtls(int type_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_gst_state_dtls", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_gst_state_dtlsAsync(int type_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAccountType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountType", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAccountTypeAsync();
        
        // CODEGEN: Parameter 'Doc' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Surplus_Neft_Confirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmResponse Surplus_Neft_Confirm(NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Surplus_Neft_Confirm", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmResponse> Surplus_Neft_ConfirmAsync(NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_NeftStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Get_NeftStatus(int Pay_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_NeftStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Get_NeftStatusAsync(int Pay_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LegalLetter_type", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LegalLetter_type();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LegalLetter_type", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LegalLetter_typeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LegalLetterDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LegalLetterDate(int let_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LegalLetterDate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LegalLetterDateAsync(int let_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LegalLetter_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LegalLetter_count(int let_type, string upload_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LegalLetter_count", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LegalLetter_countAsync(int let_type, string upload_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LegalLetter_Print_data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LegalLetter_Print_data(int lt_type, string upload_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LegalLetter_Print_data", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LegalLetter_Print_dataAsync(int lt_type, string upload_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LegalLetter_Confirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int LegalLetter_Confirm(int lt_type, string upload_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LegalLetter_Confirm", ReplyAction="*")]
        System.Threading.Tasks.Task<int> LegalLetter_ConfirmAsync(int lt_type, string upload_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int check_count(string pledge_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_count", ReplyAction="*")]
        System.Threading.Tasks.Task<int> check_countAsync(string pledge_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendor_selection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet vendor_selection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendor_selection", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> vendor_selectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendor_details", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet vendor_details(string vendorid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendor_details", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> vendor_detailsAsync(string vendorid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendor_details_new", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet vendor_details_new(string id_num, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendor_details_new", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> vendor_details_newAsync(string id_num, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/emd_collection_entry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string emd_collection_entry(string output, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/emd_collection_entry", ReplyAction="*")]
        System.Threading.Tasks.Task<string> emd_collection_entryAsync(string output, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendordt_check", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet vendordt_check(string vendorid, string auc_dt, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendordt_check", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> vendordt_checkAsync(string vendorid, string auc_dt, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/firmid_selection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet firmid_selection(int BranchID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/firmid_selection", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> firmid_selectionAsync(int BranchID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/voucher_details", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet voucher_details(int Transid, int BranchID, int Firmid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/voucher_details", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> voucher_detailsAsync(int Transid, int BranchID, int Firmid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendorid_selection_return", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet vendorid_selection_return(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendorid_selection_return", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> vendorid_selection_returnAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/auctiondt_selection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet auctiondt_selection(string vendorid, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/auctiondt_selection", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> auctiondt_selectionAsync(string vendorid, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/amount_details_penalty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet amount_details_penalty(string vendorid, string auction_date, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/amount_details_penalty", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> amount_details_penaltyAsync(string vendorid, string auction_date, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendor_check", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet vendor_check(string vendorid, string auction_date, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendor_check", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> vendor_checkAsync(string vendorid, string auction_date, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendor_bid_check", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet vendor_bid_check(string vendorid, string auction_date, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendor_bid_check", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> vendor_bid_checkAsync(string vendorid, string auction_date, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/amount_details", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet amount_details(string vendorid, string auction_date, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/amount_details", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> amount_detailsAsync(string vendorid, string auction_date, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/emd_return_entry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string emd_return_entry(string output);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/emd_return_entry", ReplyAction="*")]
        System.Threading.Tasks.Task<string> emd_return_entryAsync(string output);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendor_check_success", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet vendor_check_success(string vendorid, string auction_date, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vendor_check_success", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> vendor_check_successAsync(string vendorid, string auction_date, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/hoaud_select", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet hoaud_select(string optFlag, string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/hoaud_select", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> hoaud_selectAsync(string optFlag, string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/hoaud_insupd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string hoaud_insupd(string optFlag, string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/hoaud_insupd", ReplyAction="*")]
        System.Threading.Tasks.Task<string> hoaud_insupdAsync(string optFlag, string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Auction_procedure_select", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Auction_procedure_select(string indata, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Auction_procedure_select", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Auction_procedure_selectAsync(string indata, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Auction_procedure_confirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Auction_procedure_confirm(string indata, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Auction_procedure_confirm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Auction_procedure_confirmAsync(string indata, int flag);
        
        // CODEGEN: Parameter 'dat' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/common_file_upload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.common_file_uploadResponse common_file_upload(NewAuctionLetter.GL_AUCTION.common_file_uploadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/common_file_upload", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.common_file_uploadResponse> common_file_uploadAsync(NewAuctionLetter.GL_AUCTION.common_file_uploadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/common_file_upd_qry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string common_file_upd_qry(string p_flag, string Data1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/common_file_upd_qry", ReplyAction="*")]
        System.Threading.Tasks.Task<string> common_file_upd_qryAsync(string p_flag, string Data1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DocClassification_btnConfirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DocClassification_btnConfirm(int ClassID, string PledgeNo, int UserID, string slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DocClassification_btnConfirm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DocClassification_btnConfirmAsync(int ClassID, string PledgeNo, int UserID, string slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeClassification_btnConfirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ChangeClassification_btnConfirm(int ClassID, string PledgeNo, int UserID, string slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeClassification_btnConfirm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ChangeClassification_btnConfirmAsync(int ClassID, string PledgeNo, int UserID, string slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeClassification_cmbBranch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ChangeClassification_cmbBranch(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeClassification_cmbBranch", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ChangeClassification_cmbBranchAsync(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/surplus_cash_rpt1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet surplus_cash_rpt1(int BranchId, string ReceiveFrom, string ReceiveTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/surplus_cash_rpt1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> surplus_cash_rpt1Async(int BranchId, string ReceiveFrom, string ReceiveTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Transfer_Pledges1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Transfer_Pledges1(int BranchId, string AucDate, string PledgeList, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Transfer_Pledges1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Transfer_Pledges1Async(int BranchId, string AucDate, string PledgeList, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Transfer_Cancel_Approve1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Transfer_Cancel_Approve1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Transfer_Cancel_Approve1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Transfer_Cancel_Approve1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Transfer_Cancel_Request", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Transfer_Cancel_Request(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Transfer_Cancel_Request", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Transfer_Cancel_RequestAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Transfer_Cancel_Request1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Transfer_Cancel_Request1(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Transfer_Cancel_Request1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Transfer_Cancel_Request1Async(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Transfer_Cancel_Request2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Transfer_Cancel_Request2(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Transfer_Cancel_Request2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Transfer_Cancel_Request2Async(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Defer_Request_BR_live1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Defer_Request_BR_live1(string date1, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Defer_Request_BR_live1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Defer_Request_BR_live1Async(string date1, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Defer_Request_BR1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Defer_Request_BR1(string date1, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Defer_Request_BR1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Defer_Request_BR1Async(string date1, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Defer_Approve_RH1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Defer_Approve_RH1(string date1, string cmbdtl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Defer_Approve_RH1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Defer_Approve_RH1Async(string date1, string cmbdtl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Defer_Approve_RH2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Defer_Approve_RH2(string cmbdtl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Defer_Approve_RH2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Defer_Approve_RH2Async(string cmbdtl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAuc_vendor_stmt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAuc_vendor_stmt(int ven_id, string frdt, string todt, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAuc_vendor_stmt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAuc_vendor_stmtAsync(int ven_id, string frdt, string todt, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_vendor_dtls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Get_vendor_dtls(int vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_vendor_dtls", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Get_vendor_dtlsAsync(int vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check_punching", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Check_punching(string auc_id, int brid, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check_punching", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Check_punchingAsync(string auc_id, int brid, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendorname", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_vendorname();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendorname", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_vendornameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SurplusOtp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SurplusOtp(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SurplusOtp", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SurplusOtpAsync(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Post_Letter_type", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Post_Letter_type();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Post_Letter_type", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Post_Letter_typeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Post_Letter_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Post_Letter_count(int tp, int lt_val, string language, string gen_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Post_Letter_count", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Post_Letter_countAsync(int tp, int lt_val, string language, string gen_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Post_Auction_Letter_language", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Post_Auction_Letter_language(int let_type, string gen_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Post_Auction_Letter_language", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Post_Auction_Letter_languageAsync(int let_type, string gen_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Post_Change_Letter_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long Post_Change_Letter_count(int tp, int lt_val, string language, int frm, int to_tp, string gen_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Post_Change_Letter_count", ReplyAction="*")]
        System.Threading.Tasks.Task<long> Post_Change_Letter_countAsync(int tp, int lt_val, string language, int frm, int to_tp, string gen_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/post_auctionLetter_his_rpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet post_auctionLetter_his_rpt(string fromdt, string todt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/post_auctionLetter_his_rpt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> post_auctionLetter_his_rptAsync(string fromdt, string todt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Post_Letter_Print_data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Post_Letter_Print_data(string language, int lt_type, int min_val, int max_val, string gendt, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Post_Letter_Print_data", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Post_Letter_Print_dataAsync(string language, int lt_type, int min_val, int max_val, string gendt, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_surplus_adcard_rpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_surplus_adcard_rpt(string lang, string gen_dt, int lt_type, int from_num, int to_num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_surplus_adcard_rpt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_surplus_adcard_rptAsync(string lang, string gen_dt, int lt_type, int from_num, int to_num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostActionCommonReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PostActionCommonReport(int lt_type, string fromdate, string todate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostActionCommonReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> PostActionCommonReportAsync(int lt_type, string fromdate, string todate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/post_letter_report", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet post_letter_report(string pr_dt1, string pr_dt2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/post_letter_report", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> post_letter_reportAsync(string pr_dt1, string pr_dt2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_unsuccessful_aucCenter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_unsuccessful_aucCenter();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_unsuccessful_aucCenter", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_unsuccessful_aucCenterAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_unsuccessful_schedule_branches", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_unsuccessful_schedule_branches(int BranchID, int schedule_id, string audate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_unsuccessful_schedule_branches", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_unsuccessful_schedule_branchesAsync(int BranchID, int schedule_id, string audate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_unsuccessful_change_emp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_unsuccessful_change_emp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_unsuccessful_change_emp", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_unsuccessful_change_empAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_oldcarrier_emp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_oldcarrier_emp(int schedule_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_oldcarrier_emp", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_oldcarrier_empAsync(int schedule_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_unsuccessful_carrier_emp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_unsuccessful_carrier_emp(int BranchID, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_unsuccessful_carrier_emp", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_unsuccessful_carrier_empAsync(int BranchID, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/emp_change_confirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string emp_change_confirm(int AucCenter, int BranchID, string carrier, int schedule, string carr_bh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/emp_change_confirm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> emp_change_confirmAsync(int AucCenter, int BranchID, string carrier, int schedule, string carr_bh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_robot_emp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int get_robot_emp(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_robot_emp", ReplyAction="*")]
        System.Threading.Tasks.Task<int> get_robot_empAsync(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendor_name", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_vendor_name();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_vendor_name", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_vendor_nameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/display_vendor_info", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet display_vendor_info(int vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/display_vendor_info", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> display_vendor_infoAsync(int vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auction_center_name", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_auction_center_name();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auction_center_name", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_auction_center_nameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Confirm_auc_bidder_dtls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Confirm_auc_bidder_dtls(int vendid, int brid, int auc_cent_id, System.DateTime auc_dt, int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Confirm_auc_bidder_dtls", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Confirm_auc_bidder_dtlsAsync(int vendid, int brid, int auc_cent_id, System.DateTime auc_dt, int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_state", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_state();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_state", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_stateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_approval_state", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_approval_state();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_approval_state", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_approval_stateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/market_rate_updation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string market_rate_updation(int stateid, string market_dt, double mktrate_22ct, double mktrate_24ct, int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/market_rate_updation", ReplyAction="*")]
        System.Threading.Tasks.Task<string> market_rate_updationAsync(int stateid, string market_dt, double mktrate_22ct, double mktrate_24ct, int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_effective_date", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_effective_date(int state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_effective_date", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_effective_dateAsync(int state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/upload_market_rate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet upload_market_rate(int State, string Mdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/upload_market_rate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> upload_market_rateAsync(int State, string Mdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/market_rate_approval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string market_rate_approval(int stateid, string market_dt, int approved_user, string rej_reason, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/market_rate_approval", ReplyAction="*")]
        System.Threading.Tasks.Task<string> market_rate_approvalAsync(int stateid, string market_dt, int approved_user, string rej_reason, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_salerate_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_salerate_count(int Auc_center, string Mdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_salerate_count", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_salerate_countAsync(int Auc_center, string Mdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/view_approved_rate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet view_approved_rate(int Auc_center, string Mdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/view_approved_rate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> view_approved_rateAsync(int Auc_center, string Mdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/department_check", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int department_check(int usrid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/department_check", ReplyAction="*")]
        System.Threading.Tasks.Task<int> department_checkAsync(int usrid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_mkt_rate_info", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_mkt_rate_info(int lot_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_mkt_rate_info", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_mkt_rate_infoAsync(int lot_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/gold_rate_rh_confirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string gold_rate_rh_confirm(int user_id, int lot_id, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/gold_rate_rh_confirm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> gold_rate_rh_confirmAsync(int user_id, int lot_id, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_bid_amnt_info", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_bid_amnt_info(double lot_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_bid_amnt_info", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_bid_amnt_infoAsync(double lot_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auctioneer_name", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_auctioneer_name(string auc_date, int auc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auctioneer_name", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_auctioneer_nameAsync(string auc_date, int auc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/market_rate_lot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet market_rate_lot(string auc_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/market_rate_lot", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> market_rate_lotAsync(string auc_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_market_gold", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_market_gold(int auc_center, string AuctionDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_market_gold", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_market_goldAsync(int auc_center, string AuctionDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_lot_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_lot_count(int lot_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_lot_count", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_lot_countAsync(int lot_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/gold_rate_bid_confirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int gold_rate_bid_confirm(int auc_id, int Lotno, int mkt_rt, double amt, string auc_dt, double stand_wt, int enter_userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/gold_rate_bid_confirm", ReplyAction="*")]
        System.Threading.Tasks.Task<int> gold_rate_bid_confirmAsync(int auc_id, int Lotno, int mkt_rt, double amt, string auc_dt, double stand_wt, int enter_userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_mktrate_auccenter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_mktrate_auccenter();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_mktrate_auccenter", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_mktrate_auccenterAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_mktrate_lot_id", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_mktrate_lot_id(int auc_center);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_mktrate_lot_id", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_mktrate_lot_idAsync(int auc_center);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_Surprise_Verify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_Surprise_Verify(int branch, string str, int ch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_Surprise_Verify", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_Surprise_VerifyAsync(int branch, string str, int ch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_Surprise_Entry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string get_Surprise_Entry(string data1, int ch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_Surprise_Entry", ReplyAction="*")]
        System.Threading.Tasks.Task<string> get_Surprise_EntryAsync(string data1, int ch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pass_chek_joint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int pass_chek_joint(int userid, string passwd, int brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pass_chek_joint", ReplyAction="*")]
        System.Threading.Tasks.Task<int> pass_chek_jointAsync(int userid, string passwd, int brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApproveIrregularity21", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ApproveIrregularity21(int sl_no, int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApproveIrregularity21", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ApproveIrregularity21Async(int sl_no, int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_auth_user_cnt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Get_auth_user_cnt(int usr, int Br_id, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_auth_user_cnt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Get_auth_user_cntAsync(int usr, int Br_id, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Cashlimit_check", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Cashlimit_check(double cashlimit, int vendorid, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Cashlimit_check", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Cashlimit_checkAsync(double cashlimit, int vendorid, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_auction_eligible", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet check_auction_eligible(int brid, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_auction_eligible", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> check_auction_eligibleAsync(int brid, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Transfer_pledge_details", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Transfer_pledge_details(int brid, string aucdt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Transfer_pledge_details", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Transfer_pledge_detailsAsync(int brid, string aucdt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Display_Auction_dt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Display_Auction_dt(int brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Display_Auction_dt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Display_Auction_dtAsync(int brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_transfer_process", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Branch_transfer_process(int BranchId, System.DateTime Hotlistdt, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_transfer_process", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Branch_transfer_processAsync(int BranchId, System.DateTime Hotlistdt, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization_Branch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Normalization_Branch(int BranchID, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization_Branch", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Normalization_BranchAsync(int BranchID, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization_Branch1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Normalization_Branch1(int brid, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization_Branch1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Normalization_Branch1Async(int brid, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_Normalize", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Branch_Normalize(string PledgeNo, int Brid, string Data, double GrossWt, double WtDiff, double StandardWeight, int UserID, double RcvdTareWeight, int PacketStatus, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_Normalize", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Branch_NormalizeAsync(string PledgeNo, int Brid, string Data, double GrossWt, double WtDiff, double StandardWeight, int UserID, double RcvdTareWeight, int PacketStatus, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Class_check", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Class_check(string Pledgeno, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Class_check", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Class_checkAsync(string Pledgeno, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/normalize_delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int normalize_delete(string Pledgeno, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/normalize_delete", ReplyAction="*")]
        System.Threading.Tasks.Task<int> normalize_deleteAsync(string Pledgeno, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auction_vendors", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_auction_vendors(int BranchID, string aucdt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auction_vendors", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_auction_vendorsAsync(int BranchID, string aucdt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelAuctionProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CancelAuctionProcess(string PledgeNo, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelAuctionProcess", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CancelAuctionProcessAsync(string PledgeNo, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_lot_details", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_lot_details(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_lot_details", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_lot_detailsAsync(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateLot_branch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateLot_branch(int AuctionCentre, string Data, int UserID, double Agrosswt, int Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateLot_branch", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateLot_branchAsync(int AuctionCentre, string Data, int UserID, double Agrosswt, int Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_cosent_lett_id", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_cosent_lett_id(int Lotid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_cosent_lett_id", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_cosent_lett_idAsync(int Lotid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/margin_limit_confirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int margin_limit_confirm(int brid, int Lotno, double mrgn_lt, double margin, double stdwt, string auc_dt, int enter_userid, double amt, int mkt_val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/margin_limit_confirm", ReplyAction="*")]
        System.Threading.Tasks.Task<int> margin_limit_confirmAsync(int brid, int Lotno, double mrgn_lt, double margin, double stdwt, string auc_dt, int enter_userid, double amt, int mkt_val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_margin_app_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int get_margin_app_count(int LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_margin_app_count", ReplyAction="*")]
        System.Threading.Tasks.Task<int> get_margin_app_countAsync(int LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_BidConfirmation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Branch_BidConfirmation(int LotId, string AuctioneerID, int VendorID, int TeamHead, int Auditor, double Amount, int stateid, string aucdt, int branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_BidConfirmation", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Branch_BidConfirmationAsync(int LotId, string AuctioneerID, int VendorID, int TeamHead, int Auditor, double Amount, int stateid, string aucdt, int branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/branch_vendor_coll_lot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet branch_vendor_coll_lot(int venid, int branchid, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/branch_vendor_coll_lot", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> branch_vendor_coll_lotAsync(int venid, int branchid, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/margin_approve", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string margin_approve(int LotId, int empid, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/margin_approve", ReplyAction="*")]
        System.Threading.Tasks.Task<string> margin_approveAsync(int LotId, int empid, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/doc_uploadplno", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet doc_uploadplno(string AucDate, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/doc_uploadplno", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> doc_uploadplnoAsync(string AucDate, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/doc_upload_branch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet doc_upload_branch(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/doc_upload_branch", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> doc_upload_branchAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Bidder_punch_check", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Bidder_punch_check(int BranchID, int vendid, string aucdt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Bidder_punch_check", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Bidder_punch_checkAsync(int BranchID, int vendid, string aucdt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pledgecurrentstatus01", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet pledgecurrentstatus01(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pledgecurrentstatus01", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> pledgecurrentstatus01Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pledgecurrentstatus02", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet pledgecurrentstatus02(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pledgecurrentstatus02", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> pledgecurrentstatus02Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sale_Rate_Approve_cmbAuctCentre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Sale_Rate_Approve_cmbAuctCentre(int AuctCentre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sale_Rate_Approve_cmbAuctCentre", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Sale_Rate_Approve_cmbAuctCentreAsync(int AuctCentre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sale_Rate_Request", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Sale_Rate_Request();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sale_Rate_Request", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Sale_Rate_RequestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Approve_Irregularity_cmbSelPledge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Approve_Irregularity_cmbSelPledge(string Pledgeno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Approve_Irregularity_cmbSelPledge", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Approve_Irregularity_cmbSelPledgeAsync(string Pledgeno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update_Irregularity_cmbPledge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Update_Irregularity_cmbPledge(string Pledgeno, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update_Irregularity_cmbPledge", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Update_Irregularity_cmbPledgeAsync(string Pledgeno, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnTo_Branch1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReturnTo_Branch1(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnTo_Branch1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReturnTo_Branch1Async(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnTo_Branch_cmbBranch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReturnTo_Branch_cmbBranch(int BranchId, int RetBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnTo_Branch_cmbBranch", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReturnTo_Branch_cmbBranchAsync(int BranchId, int RetBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnTo_Branch_cmbPledge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReturnTo_Branch_cmbPledge(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnTo_Branch_cmbPledge", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReturnTo_Branch_cmbPledgeAsync(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receive_ReturnedPledge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Receive_ReturnedPledge(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receive_ReturnedPledge", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Receive_ReturnedPledgeAsync(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receive_ReturnedPledge_cmbPledge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Receive_ReturnedPledge_cmbPledge(int BranchId, int ReturnId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receive_ReturnedPledge_cmbPledge", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Receive_ReturnedPledge_cmbPledgeAsync(int BranchId, int ReturnId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Returned_To_Branch_Report", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Returned_To_Branch_Report(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Returned_To_Branch_Report", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Returned_To_Branch_ReportAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Returned_To_Branch_Report_CrystalReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Returned_To_Branch_Report_CrystalReport(int BranchID, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Returned_To_Branch_Report_CrystalReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Returned_To_Branch_Report_CrystalReportAsync(int BranchID, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Approve_Auction_Schedule_cmbAucDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Approve_Auction_Schedule_cmbAucDate(int BranchId, string AucDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Approve_Auction_Schedule_cmbAucDate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Approve_Auction_Schedule_cmbAucDateAsync(int BranchId, string AucDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Auctiontranspledge1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Auctiontranspledge1(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Auctiontranspledge1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Auctiontranspledge1Async(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ibgtvformreport1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ibgtvformreport1(int HandoverUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ibgtvformreport1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ibgtvformreport1Async(int HandoverUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ibgtvformreport2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ibgtvformreport2(int CarryUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ibgtvformreport2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ibgtvformreport2Async(int CarryUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ibgtvformreport3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ibgtvformreport3(int TransferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ibgtvformreport3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ibgtvformreport3Async(int TransferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ibgtvformreport4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ibgtvformreport4(int TransferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ibgtvformreport4", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ibgtvformreport4Async(int TransferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ibgtvformreport5", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ibgtvformreport5(int IBGTVNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ibgtvformreport5", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ibgtvformreport5Async(int IBGTVNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/teamuploaddoc", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet teamuploaddoc();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/teamuploaddoc", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> teamuploaddocAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucitonTfr_Schedule_Report", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucitonTfr_Schedule_Report(int LogBranchId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucitonTfr_Schedule_Report", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucitonTfr_Schedule_ReportAsync(int LogBranchId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucitonTfr_Schedule_Report_cmbAuctCentre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucitonTfr_Schedule_Report_cmbAuctCentre(int AuctCentre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucitonTfr_Schedule_Report_cmbAuctCentre", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucitonTfr_Schedule_Report_cmbAuctCentreAsync(int AuctCentre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucitonTfr_Schedule_Report_cmbTfrDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucitonTfr_Schedule_Report_cmbTfrDate(int auccenter, int LogBranchId, string tfr_date, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucitonTfr_Schedule_Report_cmbTfrDate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucitonTfr_Schedule_Report_cmbTfrDateAsync(int auccenter, int LogBranchId, string tfr_date, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucitonTfr_Schedule_Report_cmbBranch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucitonTfr_Schedule_Report_cmbBranch(int auccenter, int LogBranchId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucitonTfr_Schedule_Report_cmbBranch", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucitonTfr_Schedule_Report_cmbBranchAsync(int auccenter, int LogBranchId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Cancel_Schedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Cancel_Schedule();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Cancel_Schedule", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Cancel_ScheduleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Cancel_Schedule_cmbAuctCenter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Cancel_Schedule_cmbAuctCenter(int AuctionCtr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Cancel_Schedule_cmbAuctCenter", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Cancel_Schedule_cmbAuctCenterAsync(int AuctionCtr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Cancel_Schedule_cmbBranch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Cancel_Schedule_cmbBranch(int AuctionCtr, int Branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Cancel_Schedule_cmbBranch", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Cancel_Schedule_cmbBranchAsync(int AuctionCtr, int Branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Cancel_Schedule_cmbSchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Cancel_Schedule_cmbSchedule(int ScheduleId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Cancel_Schedule_cmbSchedule", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Cancel_Schedule_cmbScheduleAsync(int ScheduleId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Postpone_Schedule_Transfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Postpone_Schedule_Transfer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Postpone_Schedule_Transfer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Postpone_Schedule_TransferAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Postpone_Schedule_Transfer_cmbSchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Postpone_Schedule_Transfer_cmbSchedule(int ScheduleId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Postpone_Schedule_Transfer_cmbSchedule", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Postpone_Schedule_Transfer_cmbScheduleAsync(int ScheduleId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_Auction_Transfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Schedule_Auction_Transfer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_Auction_Transfer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Schedule_Auction_TransferAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_Auction_Transfer_cmbAuctCenter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Schedule_Auction_Transfer_cmbAuctCenter(int AuctionCtr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_Auction_Transfer_cmbAuctCenter", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Schedule_Auction_Transfer_cmbAuctCenterAsync(int AuctionCtr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_Auction_Transfer_cmbAuctCenter_cmbScheduleDt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Schedule_Auction_Transfer_cmbAuctCenter_cmbScheduleDt(int AuctCentre, int ScheduleBranch, string AucDate, int ScheduleId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_Auction_Transfer_cmbAuctCenter_cmbScheduleDt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Schedule_Auction_Transfer_cmbAuctCenter_cmbScheduleDtAsync(int AuctCentre, int ScheduleBranch, string AucDate, int ScheduleId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_Date_Confirmation_cmbAuctCenter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Schedule_Date_Confirmation_cmbAuctCenter(int AuctCenter, int Branch, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_Date_Confirmation_cmbAuctCenter", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Schedule_Date_Confirmation_cmbAuctCenterAsync(int AuctCenter, int Branch, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_Report", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Schedule_Report(int Branch, int Status, string TransferDate, int AuctionCenter, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_Report", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Schedule_ReportAsync(int Branch, int Status, string TransferDate, int AuctionCenter, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_Emp_Confirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Schedule_Emp_Confirm(int UserId, int BranchId, int AreaId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_Emp_Confirm", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Schedule_Emp_ConfirmAsync(int UserId, int BranchId, int AreaId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sur_branch1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet sur_branch1(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sur_branch1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> sur_branch1Async(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sur_branch2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet sur_branch2(int Payid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sur_branch2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> sur_branch2Async(int Payid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sur_branch3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet sur_branch3(string custid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sur_branch3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> sur_branch3Async(string custid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_AUC1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Upload_AUC1(string Plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_AUC1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Upload_AUC1Async(string Plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_AUC2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Upload_AUC2(string PledgeNo, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_AUC2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Upload_AUC2Async(string PledgeNo, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_AUC3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Upload_AUC3(string Plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_AUC3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Upload_AUC3Async(string Plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_AUC4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Upload_AUC4(string AucDate, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_AUC4", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Upload_AUC4Async(string AucDate, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_AUC5", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Upload_AUC5(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_AUC5", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Upload_AUC5Async(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Invoice_Print_Form", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Invoice_Print_Form(int BrId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Invoice_Print_Form", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Invoice_Print_FormAsync(int BrId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveAuctionCentre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveAuctionCentre(int RequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveAuctionCentre", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveAuctionCentreAsync(int RequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveAuctionCentre1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveAuctionCentre1(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveAuctionCentre1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveAuctionCentre1Async(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveLive(string sl_number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLiveAsync(string sl_number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveLive1(string pledgeno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive1Async(string pledgeno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveLive2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveLive3(int cmbdtl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive3Async(int cmbdtl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveLive4(string cmbdtl, string RequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive4", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive4Async(string cmbdtl, string RequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive5", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveLive5();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive5", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive5Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive6", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveLive6();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive6", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive6Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive7", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveLive7(string cmbdtl, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive7", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive7Async(string cmbdtl, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive8", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveLive8();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveLive8", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive8Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveRH", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveRH();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveRH", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveRHAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveRH1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveRH1(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveRH1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveRH1Async(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveRH7", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferApproveRH7();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApproveRH7", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveRH7Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBR", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferRequestBR(int BranchId, string PledgeNo, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBR", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBRAsync(int BranchId, string PledgeNo, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBR1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferRequestBR1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBR1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBR1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBR2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferRequestBR2(string plno, int status_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBR2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBR2Async(string plno, int status_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBR3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferRequestBR3(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBR3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBR3Async(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBR4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferRequestBR4(int fg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBR4", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBR4Async(int fg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBRLive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferRequestBRLive(int BranchId, string PledgeNo, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBRLive", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBRLiveAsync(int BranchId, string PledgeNo, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBRLive1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferRequestBRLive1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequestBRLive1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBRLive1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferReportView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferReportView(int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferReportView", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferReportViewAsync(int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferReportView1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferReportView1(int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferReportView1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferReportView1Async(int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferReportView2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferReportView2(int status, int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferReportView2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferReportView2Async(int status, int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferReportView3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeferReportView3(int status, int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferReportView3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DeferReportView3Async(int status, int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BidConfirmation_cmbLot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BidConfirmation_cmbLot(int LotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BidConfirmation_cmbLot", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BidConfirmation_cmbLotAsync(int LotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BidConfirmationLetter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BidConfirmationLetter(int LotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BidConfirmationLetter", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BidConfirmationLetterAsync(int LotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LotCreation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LotCreation(int BranchID, int LotGoldType, int AuctionCenter, int Docstatus, string LettStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LotCreation", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LotCreationAsync(int BranchID, int LotGoldType, int AuctionCenter, int Docstatus, string LettStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LotCreation_BranchID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LotCreation_BranchID(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LotCreation_BranchID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LotCreation_BranchIDAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Realization_DisplayValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Realization_DisplayValues(int Lot, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Realization_DisplayValues", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Realization_DisplayValuesAsync(int Lot, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/surplus_cash_rpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet surplus_cash_rpt(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/surplus_cash_rpt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> surplus_cash_rptAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/surplus_cus_cpy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet surplus_cus_cpy(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/surplus_cus_cpy", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> surplus_cus_cpyAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/surplus_cus_cpy1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet surplus_cus_cpy1(int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/surplus_cus_cpy1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> surplus_cus_cpy1Async(int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/voucher", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet voucher(int Branch, int TransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/voucher", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> voucherAsync(int Branch, int TransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/voucher1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet voucher1(int Branch, int TransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/voucher1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> voucher1Async(int Branch, int TransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LotLoad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LotLoad(int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LotLoad", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LotLoadAsync(int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BidCViewer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BidCViewer(int LotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BidCViewer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BidCViewerAsync(int LotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DocClassification_cmbPledge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DocClassification_cmbPledge(int BranchId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DocClassification_cmbPledge", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DocClassification_cmbPledgeAsync(int BranchId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_letter_upload_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int check_letter_upload_count(string gendt, string plno, int lett_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_letter_upload_count", ReplyAction="*")]
        System.Threading.Tasks.Task<int> check_letter_upload_countAsync(string gendt, string plno, int lett_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_auc_letter_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int check_auc_letter_count(string plno, int lett_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_auc_letter_count", ReplyAction="*")]
        System.Threading.Tasks.Task<int> check_auc_letter_countAsync(string plno, int lett_tp);
        
        // CODEGEN: Parameter 'Doc' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_auc_letter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.Upload_auc_letterResponse Upload_auc_letter(NewAuctionLetter.GL_AUCTION.Upload_auc_letterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_auc_letter", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Upload_auc_letterResponse> Upload_auc_letterAsync(NewAuctionLetter.GL_AUCTION.Upload_auc_letterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_letter_gen_date", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_letter_gen_date(string plno, int lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_letter_gen_date", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_letter_gen_dateAsync(string plno, int lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_letstatus_rlno", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_letstatus_rlno(string plno, string gendt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_letstatus_rlno", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_letstatus_rlnoAsync(string plno, string gendt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_let_ad_image", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_let_ad_image(string plno, string gendt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_let_ad_image", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_let_ad_imageAsync(string plno, string gendt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_slno", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_slno(string plno, string gendt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_slno", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_slnoAsync(string plno, string gendt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_old_letter_senddt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_old_letter_senddt(string plno, int lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_old_letter_senddt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_old_letter_senddtAsync(string plno, int lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_old_letstatus_rlno", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_old_letstatus_rlno(string plno, string senddt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_old_letstatus_rlno", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_old_letstatus_rlnoAsync(string plno, string senddt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_bulk_lett_status", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_bulk_lett_status(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_bulk_lett_status", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_bulk_lett_statusAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_bulk_image", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_bulk_image(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_bulk_image", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_bulk_imageAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_pledge_data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_pledge_data(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_pledge_data", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_pledge_dataAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_generated_data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Letter_generated_data(string language, int lt_type, string plno, string gendt, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_generated_data", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Letter_generated_dataAsync(string language, int lt_type, string plno, string gendt, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_post_letter_gen_dt_lang", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_post_letter_gen_dt_lang(string plno, int flg, string gendt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_post_letter_gen_dt_lang", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_post_letter_gen_dt_langAsync(string plno, int flg, string gendt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_sale_report", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_sale_report(string fdt, string tdt, int mflag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_sale_report", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_sale_reportAsync(string fdt, string tdt, int mflag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_sale_pledge_report", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_sale_pledge_report(int LOTID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_sale_pledge_report", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_sale_pledge_reportAsync(int LOTID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_rlno", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_spur_letter_rlno(string plno, string lett_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_rlno", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_rlnoAsync(string plno, string lett_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_pledge_data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_spur_letter_pledge_data(string lang, string plno, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_pledge_data", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_pledge_dataAsync(string lang, string plno, string lt_tp);
        
        // CODEGEN: Parameter 'Doc' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_spurious_letter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.Upload_spurious_letterResponse Upload_spurious_letter(NewAuctionLetter.GL_AUCTION.Upload_spurious_letterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_spurious_letter", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Upload_spurious_letterResponse> Upload_spurious_letterAsync(NewAuctionLetter.GL_AUCTION.Upload_spurious_letterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_type", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_spur_letter_type();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_type", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_typeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_date", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_spur_letter_date(string plno, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_date", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_dateAsync(string plno, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_upload_cnt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_upload_cnt(string plno, string lt_tp, string gener_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_upload_cnt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_upload_cntAsync(string plno, string lt_tp, string gener_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_letter_images", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_letter_images(string lng, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_letter_images", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_letter_imagesAsync(string lng, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Confirm_spuriousLetter_print", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Confirm_spuriousLetter_print(string Letter_type, string language, string generate_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Confirm_spuriousLetter_print", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Confirm_spuriousLetter_printAsync(string Letter_type, string language, string generate_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_languages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_spur_letter_languages(string generate_dt, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_languages", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_languagesAsync(string generate_dt, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_spur_letter_count(string generate_dt, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_count", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_countAsync(string generate_dt, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_status", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_spur_letter_status();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_status", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_statusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_languages_rpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_spur_letter_languages_rpt(string generate_dt, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_languages_rpt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_languages_rptAsync(string generate_dt, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_count_rpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_spur_letter_count_rpt(string lang, string generate_dt, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_count_rpt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_count_rptAsync(string lang, string generate_dt, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_spur_letter_data(string lang, string generate_dt, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_data", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_dataAsync(string lang, string generate_dt, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_rpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_spur_letter_rpt(string lang, string generate_dt, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_spur_letter_rpt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_rptAsync(string lang, string generate_dt, string lt_tp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_adcard_rpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_adcard_rpt(string lang, string gen_dt, string lett_tp, int from_num, int to_num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_adcard_rpt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_adcard_rptAsync(string lang, string gen_dt, string lett_tp, int from_num, int to_num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_default", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_default();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_default", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_defaultAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/login_check_VAPT", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string login_check_VAPT(int userid, string passwd, int brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/login_check_VAPT", ReplyAction="*")]
        System.Threading.Tasks.Task<string> login_check_VAPTAsync(int userid, string passwd, int brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertionToDb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertionToDb(string Plno, string let_status, string file_no, int emp_id, string box_no, string pldt, string extn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertionToDb", ReplyAction="*")]
        System.Threading.Tasks.Task<int> InsertionToDbAsync(string Plno, string let_status, string file_no, int emp_id, string box_no, string pldt, string extn);
        
        // CODEGEN: Parameter 'file' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateletter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.UpdateletterResponse Updateletter(NewAuctionLetter.GL_AUCTION.UpdateletterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateletter", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UpdateletterResponse> UpdateletterAsync(NewAuctionLetter.GL_AUCTION.UpdateletterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insert_aucadv_image", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string insert_aucadv_image(string paperid, string paper_dt, string edtn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insert_aucadv_image", ReplyAction="*")]
        System.Threading.Tasks.Task<string> insert_aucadv_imageAsync(string paperid, string paper_dt, string edtn);
        
        // CODEGEN: Parameter 'file' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/update_aucadv_image", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.update_aucadv_imageResponse update_aucadv_image(NewAuctionLetter.GL_AUCTION.update_aucadv_imageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/update_aucadv_image", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.update_aucadv_imageResponse> update_aucadv_imageAsync(NewAuctionLetter.GL_AUCTION.update_aucadv_imageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Post_InsertionToDb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Post_InsertionToDb(string cust_id, string let_status, string file_no, int emp_id, string box_no, string pldt, string extn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Post_InsertionToDb", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Post_InsertionToDbAsync(string cust_id, string let_status, string file_no, int emp_id, string box_no, string pldt, string extn);
        
        // CODEGEN: Parameter 'file' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateletter_postAuction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionResponse Updateletter_postAuction(NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateletter_postAuction", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionResponse> Updateletter_postAuctionAsync(NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_vendor_bal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int check_vendor_bal(string pledgedtls, int RowCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_vendor_bal", ReplyAction="*")]
        System.Threading.Tasks.Task<int> check_vendor_balAsync(string pledgedtls, int RowCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_branch_name", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string get_branch_name(int branch_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_branch_name", ReplyAction="*")]
        System.Threading.Tasks.Task<string> get_branch_nameAsync(int branch_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_bidder_name", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string get_bidder_name(int bidder_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_bidder_name", ReplyAction="*")]
        System.Threading.Tasks.Task<string> get_bidder_nameAsync(int bidder_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Vendor_bal_check_confirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Vendor_bal_check_confirm(int Branch_id, string Dtls, int BidID, double BidAmt, double Vendor_bal, string Auc_date, int rowcnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Vendor_bal_check_confirm", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Vendor_bal_check_confirmAsync(int Branch_id, string Dtls, int BidID, double BidAmt, double Vendor_bal, string Auc_date, int rowcnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_adv_publish_data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_adv_publish_data(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_adv_publish_data", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_adv_publish_dataAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_adv_publish_edition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_adv_publish_edition(string plno, string publishdt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_adv_publish_edition", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_adv_publish_editionAsync(string plno, string publishdt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_hotlist_dt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_hotlist_dt(int Branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_hotlist_dt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_hotlist_dtAsync(int Branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_ToBranches", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_ToBranches(int Branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_ToBranches", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_ToBranchesAsync(int Branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_check_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int get_check_count(int Branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_check_count", ReplyAction="*")]
        System.Threading.Tasks.Task<int> get_check_countAsync(int Branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_pledggedtls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_pledggedtls(int Branchid, string aucdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_pledggedtls", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_pledggedtlsAsync(int Branchid, string aucdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Auc_stock_Transfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Auc_stock_Transfer(string Aucdate, int branchid, int tobranch, int rmo, int rha, string Data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Auc_stock_Transfer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Auc_stock_TransferAsync(string Aucdate, int branchid, int tobranch, int rmo, int rha, string Data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/menupage1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet menupage1(int brid, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/menupage1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> menupage1Async(int brid, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/menupage2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet menupage2(string UserID, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/menupage2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> menupage2Async(string UserID, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/verify_document1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet verify_document1(int BranchID, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/verify_document1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> verify_document1Async(int BranchID, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/verify_document2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet verify_document2(string pledge_no, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/verify_document2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> verify_document2Async(string pledge_no, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatetareweight1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet updatetareweight1(string Barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatetareweight1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> updatetareweight1Async(string Barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatetareweight2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet updatetareweight2(string pledgeno, int ibgtn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatetareweight2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> updatetareweight2Async(string pledgeno, int ibgtn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/classifypledge1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet classifypledge1(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/classifypledge1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> classifypledge1Async(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/classifypledge2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet classifypledge2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/classifypledge2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> classifypledge2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/classifypledge3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet classifypledge3(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/classifypledge3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> classifypledge3Async(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/normalization01", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet normalization01(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/normalization01", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> normalization01Async(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/normalization15", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet normalization15();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/normalization15", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> normalization15Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receive5", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Receive5(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receive5", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Receive5Async(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receive6", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Receive6(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receive6", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Receive6Async(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ibgtnPrint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ibgtnPrint(string IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ibgtnPrint", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ibgtnPrintAsync(string IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pledgeclassification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet pledgeclassification(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pledgeclassification", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> pledgeclassificationAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receivalform1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Receivalform1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receivalform1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Receivalform1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receivalform2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Receivalform2(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receivalform2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Receivalform2Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receivalform3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Receivalform3(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Receivalform3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Receivalform3Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cancelgrossweight1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet cancelgrossweight1(int AuctionCntr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cancelgrossweight1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> cancelgrossweight1Async(int AuctionCntr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cancelnormalization1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet cancelnormalization1(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cancelnormalization1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> cancelnormalization1Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cancelnormalization2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet cancelnormalization2(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cancelnormalization2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> cancelnormalization2Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addvendor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet addvendor(int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addvendor", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> addvendorAsync(int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/state", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet state(int Id, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/state", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> stateAsync(int Id, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cancelnormalizationnew1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet cancelnormalizationnew1(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cancelnormalizationnew1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> cancelnormalizationnew1Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cancelnormalizationnew2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet cancelnormalizationnew2(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cancelnormalizationnew2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> cancelnormalizationnew2Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/collection_auctionamt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet collection_auctionamt(int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/collection_auctionamt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> collection_auctionamtAsync(int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/collection_auction_cmbVendor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet collection_auction_cmbVendor(int VendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/collection_auction_cmbVendor", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> collection_auction_cmbVendorAsync(int VendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/collection_auction_cmbPayMode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet collection_auction_cmbPayMode(int PayMode, int VendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/collection_auction_cmbPayMode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> collection_auction_cmbPayModeAsync(int PayMode, int VendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucdateselectionRpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucdateselectionRpt();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucdateselectionRpt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucdateselectionRptAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/dailymeasuredlist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet dailymeasuredlist();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/dailymeasuredlist", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> dailymeasuredlistAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pledgecurrentstatus1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet pledgecurrentstatus1(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pledgecurrentstatus1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> pledgecurrentstatus1Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pledgecurrentstatus2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet pledgecurrentstatus2(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pledgecurrentstatus2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> pledgecurrentstatus2Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateIrregular3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateIrregular3(int sl_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateIrregular3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> UpdateIrregular3Async(int sl_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateIrregular4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateIrregular4(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateIrregular4", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> UpdateIrregular4Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApproveIrregularity2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ApproveIrregularity2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApproveIrregularity2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ApproveIrregularity2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApproveIrregularity3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ApproveIrregularity3(string irr_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApproveIrregularity3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ApproveIrregularity3Async(string irr_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check_negligeble", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Check_negligeble(string irr_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check_negligeble", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Check_negligebleAsync(string irr_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Normalization1(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Normalization1Async(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Normalization2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Normalization2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Normalization3();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Normalization3Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Normalization4(int brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization4", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Normalization4Async(int brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization5", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Normalization5(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization5", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Normalization5Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization6", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Normalization6(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization6", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Normalization6Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization7", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Normalization7();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization7", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Normalization7Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization8", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Normalization8(int TypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization8", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Normalization8Async(int TypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SplitNormalization1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SplitNormalization1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SplitNormalization1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SplitNormalization1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyPacket1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet VerifyPacket1(string Barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyPacket1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> VerifyPacket1Async(string Barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReprintIBGTN1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReprintIBGTN1(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReprintIBGTN1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReprintIBGTN1Async(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReprintIBGTN2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReprintIBGTN2(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReprintIBGTN2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReprintIBGTN2Async(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReprintIBGTN3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReprintIBGTN3(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReprintIBGTN3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReprintIBGTN3Async(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReprintIBGTN4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReprintIBGTN4(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReprintIBGTN4", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReprintIBGTN4Async(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PurityUpdation1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PurityUpdation1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PurityUpdation1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> PurityUpdation1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PurityUpdation2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PurityUpdation2(int AuctionCentre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PurityUpdation2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> PurityUpdation2Async(int AuctionCentre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PurityUpdation3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PurityUpdation3(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PurityUpdation3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> PurityUpdation3Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PuritySanction1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PuritySanction1(int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PuritySanction1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> PuritySanction1Async(int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PuritySanction2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PuritySanction2(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PuritySanction2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> PuritySanction2Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PuritySanction3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PuritySanction3(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PuritySanction3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> PuritySanction3Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PuritySanction4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PuritySanction4(int DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PuritySanction4", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> PuritySanction4Async(int DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferRequest1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucTransferRequest1(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferRequest1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucTransferRequest1Async(int BranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferRequest2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucTransferRequest2(int BranchId, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferRequest2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucTransferRequest2Async(int BranchId, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferRequest3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucTransferRequest3(int BranchId, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferRequest3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucTransferRequest3Async(int BranchId, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferRequest4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucTransferRequest4(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferRequest4", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucTransferRequest4Async(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferRequest5", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucTransferRequest5(int BranchId, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferRequest5", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucTransferRequest5Async(int BranchId, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferRequest6", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucTransferRequest6(int Userid, int Branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferRequest6", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucTransferRequest6Async(int Userid, int Branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferReceive1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucTransferReceive1(int Branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferReceive1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucTransferReceive1Async(int Branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferReceive2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucTransferReceive2(int Branchid, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferReceive2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucTransferReceive2Async(int Branchid, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferReceive3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AucTransferReceive3(int Branchid, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucTransferReceive3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AucTransferReceive3Async(int Branchid, string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetQueryups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetQueryups(string plno, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetQueryups", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetQueryupsAsync(string plno, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc1(string PledgeNo, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc1Async(string PledgeNo, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc2(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc2Async(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc3(string AucDate, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc3Async(string AucDate, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc4(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc4", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc4Async(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc5", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc5(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc5", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc5Async(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc6", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc6(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc6", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc6Async(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc7", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc7(int sch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc7", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc7Async(int sch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc8", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc8(int sch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc8", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc8Async(int sch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc9", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc9(int BranchID, string AucDate, string PledgeList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc9", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc9Async(int BranchID, string AucDate, string PledgeList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc10", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc10(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc10", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc10Async(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc11", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc11(string IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc11", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc11Async(string IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc12", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc12(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc12", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc12Async(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc13", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc13(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc13", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc13Async(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc14", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc14(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc14", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc14Async(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc15", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc15(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc15", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc15Async(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc16", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc16(int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc16", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc16Async(int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc17", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc17();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc17", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc17Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc18", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc18(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc18", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc18Async(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc19", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc19();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc19", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc19Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc20", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc20(int BranchID, int LotGoldType, int AuctionCenter, int Docstatus, string LettStatus, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc20", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc20Async(int BranchID, int LotGoldType, int AuctionCenter, int Docstatus, string LettStatus, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc21", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc21(int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc21", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc21Async(int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc22", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc22(int BranchID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc22", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc22Async(int BranchID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc23", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc23(int LotID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc23", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc23Async(int LotID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc24", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc24(int Stateid, int Venid, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc24", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc24Async(int Stateid, int Venid, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc25", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchAuc25(int emp, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc25", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc25Async(int emp, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc26", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBranchAuc26(int LotID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc26", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBranchAuc26Async(int LotID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc27", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBranchAuc27(int ClassID, string PledgeNo, int UserID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAuc27", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBranchAuc27Async(int ClassID, string PledgeNo, int UserID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CollectionConfirm1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CollectionConfirm1(int BranchId, string CollectionData, int BankAccount, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CollectionConfirm1", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CollectionConfirm1Async(int BranchId, string CollectionData, int BankAccount, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CollectionDisplay1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CollectionDisplay1(int VendorId, int PayMode, int LotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CollectionDisplay1", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CollectionDisplay1Async(int VendorId, int PayMode, int LotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/access_form", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet access_form(int f_id, int emp_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/access_form", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> access_formAsync(int f_id, int emp_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check_brauction_branch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Check_brauction_branch(int v_ibgtn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check_brauction_branch", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Check_brauction_branchAsync(int v_ibgtn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/display_months", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet display_months();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/display_months", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> display_monthsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_real_perc_exist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet check_real_perc_exist(int mon_val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_real_perc_exist", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> check_real_perc_existAsync(int mon_val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/confirm_realization_perc", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string confirm_realization_perc(int mon_val, double real_per, int Branchid, int usrid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/confirm_realization_perc", ReplyAction="*")]
        System.Threading.Tasks.Task<string> confirm_realization_percAsync(int mon_val, double real_per, int Branchid, int usrid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_real_perc_update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet check_real_perc_update(string pledgeno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_real_perc_update", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> check_real_perc_updateAsync(string pledgeno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_type", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Letter_type();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_type", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Letter_typeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ADcard_Letter_type", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ADcard_Letter_type();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ADcard_Letter_type", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ADcard_Letter_typeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_language", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Letter_language(int let_type, string gen_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_language", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Letter_languageAsync(int let_type, string gen_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_Print_data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Letter_Print_data(string language, int lt_type, int min_val, int max_val, string gendt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_Print_data", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Letter_Print_dataAsync(string language, int lt_type, int min_val, int max_val, string gendt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Letter_count(int tp, int lt_val, string language, string gen_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_count", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Letter_countAsync(int tp, int lt_val, string language, string gen_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Change_Letter_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long Change_Letter_count(int tp, int lt_val, string language, int frm, int to_tp, string gen_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Change_Letter_count", ReplyAction="*")]
        System.Threading.Tasks.Task<long> Change_Letter_countAsync(int tp, int lt_val, string language, int frm, int to_tp, string gen_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_Summary_data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Letter_Summary_data(string fromdt, string todt, int lt_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_Summary_data", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Letter_Summary_dataAsync(string fromdt, string todt, int lt_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_returned_data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Letter_returned_data(string fromdt, string todt, int lt_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Letter_returned_data", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Letter_returned_dataAsync(string fromdt, string todt, int lt_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Spl_letter_report", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Spl_letter_report(string frdt, string todt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Spl_letter_report", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Spl_letter_reportAsync(string frdt, string todt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AD_card_insert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AD_card_insert(int fid, int toid, int opt, int st);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AD_card_insert", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AD_card_insertAsync(int fid, int toid, int opt, int st);
        
        // CODEGEN: Parameter 'Doc' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadLetter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.UploadLetterResponse UploadLetter(NewAuctionLetter.GL_AUCTION.UploadLetterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadLetter", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadLetterResponse> UploadLetterAsync(NewAuctionLetter.GL_AUCTION.UploadLetterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLetteroutput", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getLetteroutput(string gendt, int typ, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLetteroutput", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getLetteroutputAsync(string gendt, int typ, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_upload_count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int check_upload_count(string gendt, int fr_slno, int t_slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_upload_count", ReplyAction="*")]
        System.Threading.Tasks.Task<int> check_upload_countAsync(string gendt, int fr_slno, int t_slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateReturnReason", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateReturnReason(string gendt, string barcode, string rsn, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateReturnReason", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateReturnReasonAsync(string gendt, string barcode, string rsn, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BidConfirmation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BidConfirmation(int LotId, string AuctioneerID, int VendorID, int TeamHead, int Auditor, double Amount, int stateid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BidConfirmation", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BidConfirmationAsync(int LotId, string AuctioneerID, int VendorID, int TeamHead, int Auditor, double Amount, int stateid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Lot_Groswt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Lot_Groswt(int Lotid1, double Agrwt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Lot_Groswt", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Lot_GroswtAsync(int Lotid1, double Agrwt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Auc_QuerySelect", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Auc_QuerySelect(string Flag1, int bracnchID, string pledgeNo, System.DateTime frmdate, System.DateTime todate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Auc_QuerySelect", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Auc_QuerySelectAsync(string Flag1, int bracnchID, string pledgeNo, System.DateTime frmdate, System.DateTime todate);
        
        // CODEGEN: Parameter 'Doc' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReUploadDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.ReUploadDocumentResponse ReUploadDocument(NewAuctionLetter.GL_AUCTION.ReUploadDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReUploadDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.ReUploadDocumentResponse> ReUploadDocumentAsync(NewAuctionLetter.GL_AUCTION.ReUploadDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostPoneTransfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PostPoneTransfer(int TransferId, System.DateTime PostPoneDt, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostPoneTransfer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PostPoneTransferAsync(int TransferId, System.DateTime PostPoneDt, int UserId);
        
        // CODEGEN: Parameter 'Doc' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PurityUpdation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.PurityUpdationResponse PurityUpdation(NewAuctionLetter.GL_AUCTION.PurityUpdationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PurityUpdation", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.PurityUpdationResponse> PurityUpdationAsync(NewAuctionLetter.GL_AUCTION.PurityUpdationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApprovePurityUpdation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ApprovePurityUpdation(string PledgeNo, int Status, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApprovePurityUpdation", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ApprovePurityUpdationAsync(string PledgeNo, int Status, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferCancelRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferCancelRequest(int Ibgtn, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferCancelRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferCancelRequestAsync(int Ibgtn, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferCancelApprove", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferCancelApprove(int RequestId, int Ibgtn, int UserId, int ConfStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferCancelApprove", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferCancelApproveAsync(int RequestId, int Ibgtn, int UserId, int ConfStatus);
        
        // CODEGEN: Parameter 'Dat' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadDefferDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.UploadDefferDocumentResponse UploadDefferDocument(NewAuctionLetter.GL_AUCTION.UploadDefferDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadDefferDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadDefferDocumentResponse> UploadDefferDocumentAsync(NewAuctionLetter.GL_AUCTION.UploadDefferDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelNormalization", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CancelNormalization(string PledgeNo, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelNormalization", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CancelNormalizationAsync(string PledgeNo, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PledgeReturnToBranch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PledgeReturnToBranch(int AucBranch, int BranchId, string TfrPledge, int Carrier, int HandOver);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PledgeReturnToBranch", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PledgeReturnToBranchAsync(int AucBranch, int BranchId, string TfrPledge, int Carrier, int HandOver);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveReturnedPledge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReceiveReturnedPledge(int ReturnId, string PledgeNo, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveReturnedPledge", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ReceiveReturnedPledgeAsync(int ReturnId, string PledgeNo, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelSchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CancelSchedule(int AucCentre, int BranchId, int ScheduleId, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelSchedule", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CancelScheduleAsync(int AucCentre, int BranchId, int ScheduleId, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelAdjGrossWt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CancelAdjGrossWt(int LotID, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelAdjGrossWt", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CancelAdjGrossWtAsync(int LotID, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequest_live", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeferRequest_live(string PledgeNo, int ReasonId, System.DateTime DeferDate, int BranchId, int UserId, string phno, int mode, string Email, string Other, string Reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequest_live", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeferRequest_liveAsync(string PledgeNo, int ReasonId, System.DateTime DeferDate, int BranchId, int UserId, string phno, int mode, string Email, string Other, string Reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Individual_normalize_cancel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Individual_normalize_cancel(string PledgeNo, int UserId, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Individual_normalize_cancel", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Individual_normalize_cancelAsync(string PledgeNo, int UserId, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SettleConfirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SettleConfirm(int BranchId, string PledgeData, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SettleConfirm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SettleConfirmAsync(int BranchId, string PledgeData, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/New_Normalize_Purity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string New_Normalize_Purity(string PledgeNo, string Data, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/New_Normalize_Purity", ReplyAction="*")]
        System.Threading.Tasks.Task<string> New_Normalize_PurityAsync(string PledgeNo, string Data, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_gstnumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string get_gstnumber(int br_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_gstnumber", ReplyAction="*")]
        System.Threading.Tasks.Task<string> get_gstnumberAsync(int br_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check_Rm_empcode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Check_Rm_empcode(int emp_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check_Rm_empcode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Check_Rm_empcodeAsync(int emp_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucLiveRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AucLiveRequest(string plno, int BranchId, int amount, int UserId, int CarryUser, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AucLiveRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AucLiveRequestAsync(string plno, int BranchId, int amount, int UserId, int CarryUser, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/login_check_live", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int login_check_live(int userid, string passwd, int brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/login_check_live", ReplyAction="*")]
        System.Threading.Tasks.Task<int> login_check_liveAsync(int userid, string passwd, int brid);
        
        // CODEGEN: Parameter 'Jewphoto' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/photo_upload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.photo_uploadResponse photo_upload(NewAuctionLetter.GL_AUCTION.photo_uploadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/photo_upload", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.photo_uploadResponse> photo_uploadAsync(NewAuctionLetter.GL_AUCTION.photo_uploadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SurplusRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SurplusRequest(int BranchId, int slno, string custid, int UserId, int amount, int payid, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SurplusRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SurplusRequestAsync(int BranchId, int slno, string custid, int UserId, int amount, int payid, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSurplus_15days_Report", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSurplus_15days_Report(int Branchid, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSurplus_15days_Report", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSurplus_15days_ReportAsync(int Branchid, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSurplusPayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSurplusPayment(int Branchid, string PledgeNo, int UserID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSurplusPayment", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSurplusPaymentAsync(int Branchid, string PledgeNo, int UserID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_empname", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_empname(int usr_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_empname", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_empnameAsync(int usr_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/emp_branch_dtls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet emp_branch_dtls(int emp_id, int branch_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/emp_branch_dtls", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> emp_branch_dtlsAsync(int emp_id, int branch_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check_user_dept", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Check_user_dept(int emp_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check_user_dept", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Check_user_deptAsync(int emp_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_post", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_post(int emp_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_post", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_postAsync(int emp_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_newnormalize_branch_check", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_newnormalize_branch_check(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_newnormalize_branch_check", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_newnormalize_branch_checkAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_auccenter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_schedule_auccenter();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_auccenter", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_auccenterAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/br_auctionpledge_dates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet br_auctionpledge_dates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/br_auctionpledge_dates", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> br_auctionpledge_datesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_branches", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_schedule_branches(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_branches", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_branchesAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_br_auction_dates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_br_auction_dates(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_br_auction_dates", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_br_auction_datesAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_FixScheduleDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Branch_FixScheduleDate(string TfrData, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_FixScheduleDate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Branch_FixScheduleDateAsync(string TfrData, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/schedule_approve_display", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet schedule_approve_display();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/schedule_approve_display", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> schedule_approve_displayAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/schedule_approve_disp_details", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet schedule_approve_disp_details(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/schedule_approve_disp_details", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> schedule_approve_disp_detailsAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_tfr_dtls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_schedule_tfr_dtls(int BranchID, string auc_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_tfr_dtls", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_tfr_dtlsAsync(int BranchID, string auc_dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_area_id", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_area_id(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_area_id", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_area_idAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_dtls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_schedule_dtls(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_dtls", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_dtlsAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_schedule_data(int TransferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_data", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_dataAsync(int TransferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_dates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_schedule_dates(int TransferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_dates", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_datesAsync(int TransferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/schedule_details_rpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet schedule_details_rpt();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/schedule_details_rpt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> schedule_details_rptAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_schedule_exist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet check_schedule_exist(int LogBranchId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/check_schedule_exist", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> check_schedule_existAsync(int LogBranchId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_values", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_schedule_values(int LogBranchId, int auccenter, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_values", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_valuesAsync(int LogBranchId, int auccenter, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_report_values", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_schedule_report_values(int LogBranchId, int auccenter, string tfr_date, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_schedule_report_values", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_report_valuesAsync(int LogBranchId, int auccenter, string tfr_date, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_ApproveSchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Branch_ApproveSchedule(int AuctionCenter, int UserId, string Schedule_data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_ApproveSchedule", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Branch_ApproveScheduleAsync(int AuctionCenter, int UserId, string Schedule_data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_account_number", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_account_number(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_account_number", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_account_numberAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_tot_amt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_tot_amt(int BranchID, int AccountNO, string FromDt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_tot_amt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_tot_amtAsync(int BranchID, int AccountNO, string FromDt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_stmt_details", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_stmt_details(int BranchID, int AccountNO, string FromDt, string ToDt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_stmt_details", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_stmt_detailsAsync(int BranchID, int AccountNO, string FromDt, string ToDt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auction_center", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_auction_center(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auction_center", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_auction_centerAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_daily_receival", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_daily_receival(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_daily_receival", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_daily_receivalAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auction_pledge_sts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string get_auction_pledge_sts(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auction_pledge_sts", ReplyAction="*")]
        System.Threading.Tasks.Task<string> get_auction_pledge_stsAsync(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_TransferConfirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Branch_TransferConfirm(int TransferId, int BranchId, string DataStr, int UserId, int TransferBranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Branch_TransferConfirm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Branch_TransferConfirmAsync(int TransferId, int BranchId, string DataStr, int UserId, int TransferBranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_Schedule_sts_report", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_Schedule_sts_report(int BranchID, int AuctionCenter, int status, string TransferDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_Schedule_sts_report", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_Schedule_sts_reportAsync(int BranchID, int AuctionCenter, int status, string TransferDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_ibgtno_reprint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_ibgtno_reprint(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_ibgtno_reprint", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_ibgtno_reprintAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_tfr_details", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_tfr_details(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_tfr_details", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_tfr_detailsAsync(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auction_live_details", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_auction_live_details(string Pledge, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auction_live_details", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_auction_live_detailsAsync(string Pledge, int flg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_payment_type", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_payment_type(int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_payment_type", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_payment_typeAsync(int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_realize_auction_center", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_realize_auction_center(int BranchID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_realize_auction_center", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_realize_auction_centerAsync(int BranchID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_lot_state", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_lot_state(int LotID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_lot_state", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_lot_stateAsync(int LotID, int slno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_gold_rate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_gold_rate(int auc_center, string AuctionDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_gold_rate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_gold_rateAsync(int auc_center, string AuctionDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auctioneer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_auctioneer(int LotID, int BranchID, string AuctionDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_auctioneer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_auctioneerAsync(int LotID, int BranchID, string AuctionDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_param_value", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_param_value(int pmtr_id, int fm_id, int mod_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_param_value", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_param_valueAsync(int pmtr_id, int fm_id, int mod_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ReceiveIBGTN1(int IBGTN, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN1", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ReceiveIBGTN1Async(int IBGTN, int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReceiveIBGTN2(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN2Async(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReceiveIBGTN3(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN3Async(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReceiveIBGTN4();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN4", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN4Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN5", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReceiveIBGTN5(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN5", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN5Async(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN6", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReceiveIBGTN6(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN6", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN6Async(int IBGTN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN7", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReceiveIBGTN7(int Empcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN7", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN7Async(int Empcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN8", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReceiveIBGTN8(int Empcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN8", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN8Async(int Empcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check_ah", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Check_ah(int Empcode, int branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check_ah", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Check_ahAsync(int Empcode, int branchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Combo_DocStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Combo_DocStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Combo_DocStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Combo_DocStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Combo_FillBranch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Combo_FillBranch(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Combo_FillBranch", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Combo_FillBranchAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Combo_fillIBGTN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Combo_fillIBGTN(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Combo_fillIBGTN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Combo_fillIBGTNAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Select_RlNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Select_RlNo(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Select_RlNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Select_RlNoAsync(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Confirm_document_upload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Confirm_document_upload(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Confirm_document_upload", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Confirm_document_uploadAsync(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Combo_PledgeNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Combo_PledgeNo(string ibgtn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Combo_PledgeNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Combo_PledgeNoAsync(string ibgtn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_attached_document", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_attached_document(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_attached_document", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_attached_documentAsync(string PledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_uploaded_documents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_uploaded_documents(string PledgeNo, int docstatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_uploaded_documents", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_uploaded_documentsAsync(string PledgeNo, int docstatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateIrregular", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateIrregular(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateIrregular", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> UpdateIrregularAsync(int BranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_logout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void get_logout(int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_logout", ReplyAction="*")]
        System.Threading.Tasks.Task get_logoutAsync(int usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/login_check", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int login_check(int userid, string passwd, int brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/login_check", ReplyAction="*")]
        System.Threading.Tasks.Task<int> login_checkAsync(int userid, string passwd, int brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyDocument(string PledgeNo, int DocumentStatus, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VerifyDocumentAsync(string PledgeNo, int DocumentStatus, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyPacket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyPacket(string PledgeNo, int PacketStatus, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyPacket", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VerifyPacketAsync(string PledgeNo, int PacketStatus, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTareWeight", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateTareWeight(string PledgeNo, double RcvdTareWeight, double DifferenceWt, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTareWeight", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateTareWeightAsync(string PledgeNo, double RcvdTareWeight, double DifferenceWt, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClassifyPledge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ClassifyPledge(string PledgeNo, int Classification, int BranchID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClassifyPledge", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ClassifyPledgeAsync(string PledgeNo, int Classification, int BranchID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Normalization(string PledgeNo, string Data, double GrossWt, double WtDiff, double StandardWeight, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalization", ReplyAction="*")]
        System.Threading.Tasks.Task<string> NormalizationAsync(string PledgeNo, string Data, double GrossWt, double WtDiff, double StandardWeight, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalize", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Normalize(string PledgeNo, int Brid, string Data, double GrossWt, double WtDiff, double StandardWeight, int UserID, double RcvdTareWeight, int PacketStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Normalize", ReplyAction="*")]
        System.Threading.Tasks.Task<string> NormalizeAsync(string PledgeNo, int Brid, string Data, double GrossWt, double WtDiff, double StandardWeight, int UserID, double RcvdTareWeight, int PacketStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReceiveIBGTN(int IBGTN_NO, int AuditedBy, int BranchID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveIBGTN", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ReceiveIBGTNAsync(int IBGTN_NO, int AuditedBy, int BranchID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateLot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateLot(int AuctionCentre, string Data, int UserID, double Agrosswt, int Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateLot", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateLotAsync(int AuctionCentre, string Data, int UserID, double Agrosswt, int Type);
        
        // CODEGEN: Parameter 'KycDoc' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadMeltingApproval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalResponse UploadMeltingApproval(NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadMeltingApproval", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalResponse> UploadMeltingApprovalAsync(NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveMeltedLot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReceiveMeltedLot(int LotID, double ReceivedWeight, double MeltedPurity, double MeltedPureWt, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveMeltedLot", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ReceiveMeltedLotAsync(int LotID, double ReceivedWeight, double MeltedPurity, double MeltedPureWt, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Realization", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Realization(int BranchID, int LotID, double MarketRate, double MeltMarketRate, double NormalMargin, double BankMargin, double SalesRate, double IndValue, double RealValue, System.DateTime AuctionDate, int PayMode, int VendorID, int UserID, string Aucid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Realization", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RealizationAsync(int BranchID, int LotID, double MarketRate, double MeltMarketRate, double NormalMargin, double BankMargin, double SalesRate, double IndValue, double RealValue, System.DateTime AuctionDate, int PayMode, int VendorID, int UserID, string Aucid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReleaseGold", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReleaseGold(int LotID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReleaseGold", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ReleaseGoldAsync(int LotID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_invoice_dtls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable get_invoice_dtls(int LotID, int from_loc_id, int to_loc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_invoice_dtls", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> get_invoice_dtlsAsync(int LotID, int from_loc_id, int to_loc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConfirmInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ConfirmInvoice(int LotID, int BranchID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConfirmInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ConfirmInvoiceAsync(int LotID, int BranchID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMarketValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMarketValue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMarketValue", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMarketValueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FixScheduleDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string FixScheduleDate(string TfrData, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FixScheduleDate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> FixScheduleDateAsync(string TfrData, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddSchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddSchedule(string TfrData, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddSchedule", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AddScheduleAsync(string TfrData, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApproveSchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ApproveSchedule(int AuctionCenter, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApproveSchedule", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ApproveScheduleAsync(int AuctionCenter, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConfirmSchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ConfirmSchedule(int TransferId, int CarryEmp, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConfirmSchedule", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ConfirmScheduleAsync(int TransferId, int CarryEmp, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddNewVendor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddNewVendor(string VName, string HouseName, string Locality, int StateId, int DistrictId, int PinSl, string LandPhone, string MobileNo, string PanNo, string TinNo, string CstNo, int TypeID, int KycID, string KycNo, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddNewVendor", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AddNewVendorAsync(string VName, string HouseName, string Locality, int StateId, int DistrictId, int PinSl, string LandPhone, string MobileNo, string PanNo, string TinNo, string CstNo, int TypeID, int KycID, string KycNo, int UserId);
        
        // CODEGEN: Parameter 'KycDoc' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadKYC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.UploadKYCResponse UploadKYC(NewAuctionLetter.GL_AUCTION.UploadKYCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadKYC", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadKYCResponse> UploadKYCAsync(NewAuctionLetter.GL_AUCTION.UploadKYCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RequestMarketRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RequestMarketRate(int AuctionCenter, double Carat22, double Carat24, System.DateTime EffectiveDt, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RequestMarketRate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RequestMarketRateAsync(int AuctionCenter, double Carat22, double Carat24, System.DateTime EffectiveDt, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApproveMarketRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ApproveMarketRate(int AuctionCenter, int AppStatus, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApproveMarketRate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ApproveMarketRateAsync(int AuctionCenter, int AppStatus, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CollectionDisplay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CollectionDisplay(int VendorId, int PayMode, int LotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CollectionDisplay", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CollectionDisplayAsync(int VendorId, int PayMode, int LotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CollectionConfirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CollectionConfirm(int BranchId, string CollectionData, int BankAccount, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CollectionConfirm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CollectionConfirmAsync(int BranchId, string CollectionData, int BankAccount, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UploadDocument(string PledgeNo, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UploadDocumentAsync(string PledgeNo, int UserId);
        
        // CODEGEN: Parameter 'Doc' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TempUploadDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.TempUploadDocumentResponse TempUploadDocument(NewAuctionLetter.GL_AUCTION.TempUploadDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TempUploadDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.TempUploadDocumentResponse> TempUploadDocumentAsync(NewAuctionLetter.GL_AUCTION.TempUploadDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelUploadDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CancelUploadDocument(string PledgeNo, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelUploadDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CancelUploadDocumentAsync(string PledgeNo, int UserId);
        
        // CODEGEN: Parameter 'Doc' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadDocumentNew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.UploadDocumentNewResponse UploadDocumentNew(NewAuctionLetter.GL_AUCTION.UploadDocumentNewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadDocumentNew", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadDocumentNewResponse> UploadDocumentNewAsync(NewAuctionLetter.GL_AUCTION.UploadDocumentNewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_dtl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Schedule_dtl(int Brid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Schedule_dtl", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Schedule_dtlAsync(int Brid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Tare_Weight_Confirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Tare_Weight_Confirm(int branch_id, string inst_arr, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Tare_Weight_Confirm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Tare_Weight_ConfirmAsync(int branch_id, string inst_arr, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/hot_list", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet hot_list(int brid, string pledge_no, string hiden);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/hot_list", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> hot_listAsync(int brid, string pledge_no, string hiden);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pledge_classification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet pledge_classification();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pledge_classification", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> pledge_classificationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sticker_info", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet sticker_info(string stick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sticker_info", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> sticker_infoAsync(string stick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/auc_receive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string auc_receive(string dtl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/auc_receive", ReplyAction="*")]
        System.Threading.Tasks.Task<string> auc_receiveAsync(string dtl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/photo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet photo(string pledgeno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/photo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> photoAsync(string pledgeno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ver_reason", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ver_reason();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ver_reason", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ver_reasonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Pledge_dtls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Pledge_dtls(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Pledge_dtls", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Pledge_dtlsAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Pledge_info", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Pledge_info(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Pledge_info", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Pledge_infoAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/item_display", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet item_display(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/item_display", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> item_displayAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/item_dtls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet item_dtls(string plno, short item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/item_dtls", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> item_dtlsAsync(string plno, short item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GoldType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GoldType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GoldType", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GoldTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/purity_display", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet purity_display(int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/purity_display", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> purity_displayAsync(int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/purity_val", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet purity_val(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/purity_val", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> purity_valAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/auc_purity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string auc_purity(string dtl, string useid, string Brid1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/auc_purity", ReplyAction="*")]
        System.Threading.Tasks.Task<string> auc_purityAsync(string dtl, string useid, string Brid1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/packet_var", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet packet_var();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/packet_var", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> packet_varAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TareWtVer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TareWtVer(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TareWtVer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TareWtVerAsync(string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/intbr_request", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string intbr_request(string cus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/intbr_request", ReplyAction="*")]
        System.Threading.Tasks.Task<string> intbr_requestAsync(string cus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/aucbr_fill_par", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet aucbr_fill_par(short brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/aucbr_fill_par", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> aucbr_fill_parAsync(short brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/inerreq_fill", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet inerreq_fill(short bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/inerreq_fill", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> inerreq_fillAsync(short bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/inerreq_fill_tar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet inerreq_fill_tar(short bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/inerreq_fill_tar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> inerreq_fill_tarAsync(short bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/aucbr_fill", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet aucbr_fill();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/aucbr_fill", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> aucbr_fillAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/br_fill", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet br_fill();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/br_fill", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> br_fillAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/reconf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet reconf(short bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/reconf", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> reconfAsync(short bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckUser(int UserId, string PassWd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUser", ReplyAction="*")]
        System.Threading.Tasks.Task<int> CheckUserAsync(int UserId, string PassWd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferConfirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferConfirm(int TransferId, int BranchId, string DataStr, int UserId, int CarryUser, int TransferBranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferConfirm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferConfirmAsync(int TransferId, int BranchId, string DataStr, int UserId, int CarryUser, int TransferBranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferSticker", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TransferSticker(string stick, short brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferSticker", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TransferStickerAsync(string stick, short brid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Pledge_Class", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Pledge_Class(string stick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Pledge_Class", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Pledge_ClassAsync(string stick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/type", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet type();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/type", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> typeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReciveGold", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReciveGold(string StickNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReciveGold", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ReciveGoldAsync(string StickNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItemDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ItemDetails(string StickNum, short bid, string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItemDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ItemDetailsAsync(string StickNum, short bid, string plno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AuctionGold_Rcvd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuctionGold_Rcvd(int Bid, string Pno, string usid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AuctionGold_Rcvd", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AuctionGold_RcvdAsync(int Bid, string Pno, string usid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/auctionpledge_dates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet auctionpledge_dates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/auctionpledge_dates", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> auctionpledge_datesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TareWt_Ver", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TareWt_Ver(string stick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TareWt_Ver", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TareWt_VerAsync(string stick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Packet_Ver", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Packet_Ver(string stick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Packet_Ver", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Packet_VerAsync(string stick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWeighingBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetWeighingBalance();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWeighingBalance", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWeighingBalanceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWeighingBalanceWeight", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetWeighingBalanceWeight();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWeighingBalanceWeight", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWeighingBalanceWeightAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Wbalance_status_Upd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Wbalance_status_Upd(int brid, int Stat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Wbalance_status_Upd", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Wbalance_status_UpdAsync(int brid, int Stat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeferRequest(string PledgeNo, int ReasonId, System.DateTime DeferDate, int BranchId, int UserId, string phno, int mode, string Email, string Other);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeferRequestAsync(string PledgeNo, int ReasonId, System.DateTime DeferDate, int BranchId, int UserId, string phno, int mode, string Email, string Other);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApprove", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeferApprove(string RequestId, string pledgeno, string deferdate, int UserId, int ConfStatus, string remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferApprove", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeferApproveAsync(string RequestId, string pledgeno, string deferdate, int UserId, int ConfStatus, string remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferAuctionApprove", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeferAuctionApprove(int RequestId, int UserId, int ConfStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeferAuctionApprove", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeferAuctionApproveAsync(int RequestId, int UserId, int ConfStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetState(int br);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetState", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetStateAsync(int br);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FillStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> FillStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FillItems(string pledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillItems", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> FillItemsAsync(string pledgeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Irregularity_Updation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Irregularity_Updation(int BranchId, string PledgeNo, string UserId, int IrregId, int Flag, string Rems, string DataStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Irregularity_Updation", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Irregularity_UpdationAsync(int BranchId, string PledgeNo, string UserId, int IrregId, int Flag, string Rems, string DataStr);
        
        // CODEGEN: Parameter 'Dat' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PathUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.PathUpdateResponse PathUpdate(NewAuctionLetter.GL_AUCTION.PathUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PathUpdate", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.PathUpdateResponse> PathUpdateAsync(NewAuctionLetter.GL_AUCTION.PathUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetItems(string IrregId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetItems", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetItemsAsync(string IrregId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Approve_Irregularity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Approve_Irregularity(string datastr, int Choice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Approve_Irregularity", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Approve_IrregularityAsync(string datastr, int Choice);
        
        // CODEGEN: Parameter 'Doc' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Bidder_Punching", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.Bidder_PunchingResponse Bidder_Punching(NewAuctionLetter.GL_AUCTION.Bidder_PunchingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Bidder_Punching", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Bidder_PunchingResponse> Bidder_PunchingAsync(NewAuctionLetter.GL_AUCTION.Bidder_PunchingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vend_auth_add", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string vend_auth_add(int bid, string nm, string pno, int uid, string add);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/vend_auth_add", ReplyAction="*")]
        System.Threading.Tasks.Task<string> vend_auth_addAsync(int bid, string nm, string pno, int uid, string add);
        
        // CODEGEN: Parameter 'Doc' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/bid_auth_punching", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewAuctionLetter.GL_AUCTION.bid_auth_punchingResponse bid_auth_punching(NewAuctionLetter.GL_AUCTION.bid_auth_punchingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/bid_auth_punching", ReplyAction="*")]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.bid_auth_punchingResponse> bid_auth_punchingAsync(NewAuctionLetter.GL_AUCTION.bid_auth_punchingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FixScheduleDatenew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string FixScheduleDatenew(string dtls, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FixScheduleDatenew", ReplyAction="*")]
        System.Threading.Tasks.Task<string> FixScheduleDatenewAsync(string dtls, int UserId);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Add_New_Vendor", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Add_New_VendorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string TransferData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Doc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int BranchId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int UserId;
        
        public Add_New_VendorRequest() {
        }
        
        public Add_New_VendorRequest(string TransferData, byte[] Doc, int BranchId, int UserId) {
            this.TransferData = TransferData;
            this.Doc = Doc;
            this.BranchId = BranchId;
            this.UserId = UserId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Add_New_VendorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Add_New_VendorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Add_New_VendorResult;
        
        public Add_New_VendorResponse() {
        }
        
        public Add_New_VendorResponse(string Add_New_VendorResult) {
            this.Add_New_VendorResult = Add_New_VendorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Surplus_Neft_Confirm", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Surplus_Neft_ConfirmRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int BranchId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Acc_No;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string ifsc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int acc_type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int Pay_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Doc;
        
        public Surplus_Neft_ConfirmRequest() {
        }
        
        public Surplus_Neft_ConfirmRequest(string UserId, int BranchId, string Acc_No, string ifsc, int acc_type, int Pay_ID, byte[] Doc) {
            this.UserId = UserId;
            this.BranchId = BranchId;
            this.Acc_No = Acc_No;
            this.ifsc = ifsc;
            this.acc_type = acc_type;
            this.Pay_ID = Pay_ID;
            this.Doc = Doc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Surplus_Neft_ConfirmResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Surplus_Neft_ConfirmResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Surplus_Neft_ConfirmResult;
        
        public Surplus_Neft_ConfirmResponse() {
        }
        
        public Surplus_Neft_ConfirmResponse(string Surplus_Neft_ConfirmResult) {
            this.Surplus_Neft_ConfirmResult = Surplus_Neft_ConfirmResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="common_file_upload", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class common_file_uploadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string param_val;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] dat;
        
        public common_file_uploadRequest() {
        }
        
        public common_file_uploadRequest(string param_val, byte[] dat) {
            this.param_val = param_val;
            this.dat = dat;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="common_file_uploadResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class common_file_uploadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string common_file_uploadResult;
        
        public common_file_uploadResponse() {
        }
        
        public common_file_uploadResponse(string common_file_uploadResult) {
            this.common_file_uploadResult = common_file_uploadResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Upload_auc_letter", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Upload_auc_letterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string plno;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string gener_dt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Doc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int lett_tp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int sts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string resn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string flno;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string bxno;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public string extn;
        
        public Upload_auc_letterRequest() {
        }
        
        public Upload_auc_letterRequest(string plno, string gener_dt, byte[] Doc, int UserId, int lett_tp, int sts, string resn, string flno, string bxno, string extn) {
            this.plno = plno;
            this.gener_dt = gener_dt;
            this.Doc = Doc;
            this.UserId = UserId;
            this.lett_tp = lett_tp;
            this.sts = sts;
            this.resn = resn;
            this.flno = flno;
            this.bxno = bxno;
            this.extn = extn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Upload_auc_letterResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Upload_auc_letterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Upload_auc_letterResult;
        
        public Upload_auc_letterResponse() {
        }
        
        public Upload_auc_letterResponse(string Upload_auc_letterResult) {
            this.Upload_auc_letterResult = Upload_auc_letterResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Upload_spurious_letter", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Upload_spurious_letterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string plno;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string gener_dt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Doc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string lett_tp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int sts;
        
        public Upload_spurious_letterRequest() {
        }
        
        public Upload_spurious_letterRequest(string plno, string gener_dt, byte[] Doc, int UserId, string lett_tp, int sts) {
            this.plno = plno;
            this.gener_dt = gener_dt;
            this.Doc = Doc;
            this.UserId = UserId;
            this.lett_tp = lett_tp;
            this.sts = sts;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Upload_spurious_letterResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Upload_spurious_letterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Upload_spurious_letterResult;
        
        public Upload_spurious_letterResponse() {
        }
        
        public Upload_spurious_letterResponse(string Upload_spurious_letterResult) {
            this.Upload_spurious_letterResult = Upload_spurious_letterResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Updateletter", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateletterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string plnoC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] file;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string pldt;
        
        public UpdateletterRequest() {
        }
        
        public UpdateletterRequest(string plnoC, byte[] file, string pldt) {
            this.plnoC = plnoC;
            this.file = file;
            this.pldt = pldt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateletterResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateletterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateletterResult;
        
        public UpdateletterResponse() {
        }
        
        public UpdateletterResponse(string UpdateletterResult) {
            this.UpdateletterResult = UpdateletterResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="update_aucadv_image", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class update_aucadv_imageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string paperid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string paper_dt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string edtn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] file;
        
        public update_aucadv_imageRequest() {
        }
        
        public update_aucadv_imageRequest(string paperid, string paper_dt, string edtn, byte[] file) {
            this.paperid = paperid;
            this.paper_dt = paper_dt;
            this.edtn = edtn;
            this.file = file;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="update_aucadv_imageResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class update_aucadv_imageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string update_aucadv_imageResult;
        
        public update_aucadv_imageResponse() {
        }
        
        public update_aucadv_imageResponse(string update_aucadv_imageResult) {
            this.update_aucadv_imageResult = update_aucadv_imageResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Updateletter_postAuction", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Updateletter_postAuctionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string cust_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] file;
        
        public Updateletter_postAuctionRequest() {
        }
        
        public Updateletter_postAuctionRequest(string cust_id, byte[] file) {
            this.cust_id = cust_id;
            this.file = file;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Updateletter_postAuctionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Updateletter_postAuctionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Updateletter_postAuctionResult;
        
        public Updateletter_postAuctionResponse() {
        }
        
        public Updateletter_postAuctionResponse(string Updateletter_postAuctionResult) {
            this.Updateletter_postAuctionResult = Updateletter_postAuctionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadLetter", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadLetterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string gendt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int From;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int Toslno;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Doc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int UserId;
        
        public UploadLetterRequest() {
        }
        
        public UploadLetterRequest(string gendt, int From, int Toslno, byte[] Doc, int UserId) {
            this.gendt = gendt;
            this.From = From;
            this.Toslno = Toslno;
            this.Doc = Doc;
            this.UserId = UserId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadLetterResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadLetterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadLetterResult;
        
        public UploadLetterResponse() {
        }
        
        public UploadLetterResponse(string UploadLetterResult) {
            this.UploadLetterResult = UploadLetterResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReUploadDocument", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ReUploadDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PledgeNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Doc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int UserId;
        
        public ReUploadDocumentRequest() {
        }
        
        public ReUploadDocumentRequest(string PledgeNo, int Id, byte[] Doc, int UserId) {
            this.PledgeNo = PledgeNo;
            this.Id = Id;
            this.Doc = Doc;
            this.UserId = UserId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReUploadDocumentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ReUploadDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ReUploadDocumentResult;
        
        public ReUploadDocumentResponse() {
        }
        
        public ReUploadDocumentResponse(string ReUploadDocumentResult) {
            this.ReUploadDocumentResult = ReUploadDocumentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PurityUpdation", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PurityUpdationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string TransferData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Doc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int BranchId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int UserId;
        
        public PurityUpdationRequest() {
        }
        
        public PurityUpdationRequest(string TransferData, byte[] Doc, int BranchId, int UserId) {
            this.TransferData = TransferData;
            this.Doc = Doc;
            this.BranchId = BranchId;
            this.UserId = UserId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PurityUpdationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PurityUpdationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PurityUpdationResult;
        
        public PurityUpdationResponse() {
        }
        
        public PurityUpdationResponse(string PurityUpdationResult) {
            this.PurityUpdationResult = PurityUpdationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDefferDocument", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadDefferDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string complid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Dat;
        
        public UploadDefferDocumentRequest() {
        }
        
        public UploadDefferDocumentRequest(string complid, byte[] Dat) {
            this.complid = complid;
            this.Dat = Dat;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDefferDocumentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadDefferDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int UploadDefferDocumentResult;
        
        public UploadDefferDocumentResponse() {
        }
        
        public UploadDefferDocumentResponse(int UploadDefferDocumentResult) {
            this.UploadDefferDocumentResult = UploadDefferDocumentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="photo_upload", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class photo_uploadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string custid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Jewphoto;
        
        public photo_uploadRequest() {
        }
        
        public photo_uploadRequest(string custid, byte[] Jewphoto) {
            this.custid = custid;
            this.Jewphoto = Jewphoto;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="photo_uploadResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class photo_uploadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int photo_uploadResult;
        
        public photo_uploadResponse() {
        }
        
        public photo_uploadResponse(int photo_uploadResult) {
            this.photo_uploadResult = photo_uploadResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadMeltingApproval", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadMeltingApprovalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int LotId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public double TfrWeight;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] KycDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int smith_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int AuctionCentre;
        
        public UploadMeltingApprovalRequest() {
        }
        
        public UploadMeltingApprovalRequest(int LotId, double TfrWeight, byte[] KycDoc, int UserId, int smith_code, int AuctionCentre) {
            this.LotId = LotId;
            this.TfrWeight = TfrWeight;
            this.KycDoc = KycDoc;
            this.UserId = UserId;
            this.smith_code = smith_code;
            this.AuctionCentre = AuctionCentre;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadMeltingApprovalResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadMeltingApprovalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadMeltingApprovalResult;
        
        public UploadMeltingApprovalResponse() {
        }
        
        public UploadMeltingApprovalResponse(string UploadMeltingApprovalResult) {
            this.UploadMeltingApprovalResult = UploadMeltingApprovalResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadKYC", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadKYCRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int VendorId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] KycDoc;
        
        public UploadKYCRequest() {
        }
        
        public UploadKYCRequest(int VendorId, byte[] KycDoc) {
            this.VendorId = VendorId;
            this.KycDoc = KycDoc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadKYCResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadKYCResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int UploadKYCResult;
        
        public UploadKYCResponse() {
        }
        
        public UploadKYCResponse(int UploadKYCResult) {
            this.UploadKYCResult = UploadKYCResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TempUploadDocument", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TempUploadDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PledgeNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Doc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int UserId;
        
        public TempUploadDocumentRequest() {
        }
        
        public TempUploadDocumentRequest(string PledgeNo, byte[] Doc, int UserId) {
            this.PledgeNo = PledgeNo;
            this.Doc = Doc;
            this.UserId = UserId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TempUploadDocumentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TempUploadDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string TempUploadDocumentResult;
        
        public TempUploadDocumentResponse() {
        }
        
        public TempUploadDocumentResponse(string TempUploadDocumentResult) {
            this.TempUploadDocumentResult = TempUploadDocumentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDocumentNew", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadDocumentNewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PledgeNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int DocId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Doc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int UserId;
        
        public UploadDocumentNewRequest() {
        }
        
        public UploadDocumentNewRequest(string PledgeNo, int DocId, byte[] Doc, int UserId) {
            this.PledgeNo = PledgeNo;
            this.DocId = DocId;
            this.Doc = Doc;
            this.UserId = UserId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDocumentNewResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadDocumentNewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadDocumentNewResult;
        
        public UploadDocumentNewResponse() {
        }
        
        public UploadDocumentNewResponse(string UploadDocumentNewResult) {
            this.UploadDocumentNewResult = UploadDocumentNewResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PathUpdate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PathUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string IrregId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string FirNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Dat;
        
        public PathUpdateRequest() {
        }
        
        public PathUpdateRequest(string IrregId, string FirNo, byte[] Dat) {
            this.IrregId = IrregId;
            this.FirNo = FirNo;
            this.Dat = Dat;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PathUpdateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PathUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int PathUpdateResult;
        
        public PathUpdateResponse() {
        }
        
        public PathUpdateResponse(int PathUpdateResult) {
            this.PathUpdateResult = PathUpdateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Bidder_Punching", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Bidder_PunchingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int aid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Doc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int Branchid;
        
        public Bidder_PunchingRequest() {
        }
        
        public Bidder_PunchingRequest(int aid, byte[] Doc, int UserId, int Branchid) {
            this.aid = aid;
            this.Doc = Doc;
            this.UserId = UserId;
            this.Branchid = Branchid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Bidder_PunchingResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Bidder_PunchingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Bidder_PunchingResult;
        
        public Bidder_PunchingResponse() {
        }
        
        public Bidder_PunchingResponse(string Bidder_PunchingResult) {
            this.Bidder_PunchingResult = Bidder_PunchingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="bid_auth_punching", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class bid_auth_punchingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int bdid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int auid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Doc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int uid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int brid;
        
        public bid_auth_punchingRequest() {
        }
        
        public bid_auth_punchingRequest(int bdid, int auid, byte[] Doc, int uid, int brid) {
            this.bdid = bdid;
            this.auid = auid;
            this.Doc = Doc;
            this.uid = uid;
            this.brid = brid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="bid_auth_punchingResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class bid_auth_punchingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string bid_auth_punchingResult;
        
        public bid_auth_punchingResponse() {
        }
        
        public bid_auth_punchingResponse(string bid_auth_punchingResult) {
            this.bid_auth_punchingResult = bid_auth_punchingResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Auction_serviceSoapChannel : NewAuctionLetter.GL_AUCTION.Auction_serviceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Auction_serviceSoapClient : System.ServiceModel.ClientBase<NewAuctionLetter.GL_AUCTION.Auction_serviceSoap>, NewAuctionLetter.GL_AUCTION.Auction_serviceSoap {
        
        public Auction_serviceSoapClient() {
        }
        
        public Auction_serviceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Auction_serviceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Auction_serviceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Auction_serviceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet Voucher_gen(int Branch, int TransId) {
            return base.Channel.Voucher_gen(Branch, TransId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Voucher_genAsync(int Branch, int TransId) {
            return base.Channel.Voucher_genAsync(Branch, TransId);
        }
        
        public System.Data.DataSet Voucher_transdata(int Branch, int TransId) {
            return base.Channel.Voucher_transdata(Branch, TransId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Voucher_transdataAsync(int Branch, int TransId) {
            return base.Channel.Voucher_transdataAsync(Branch, TransId);
        }
        
        public int check_auctiondt(int Branch, int LotID, string Aucdt) {
            return base.Channel.check_auctiondt(Branch, LotID, Aucdt);
        }
        
        public System.Threading.Tasks.Task<int> check_auctiondtAsync(int Branch, int LotID, string Aucdt) {
            return base.Channel.check_auctiondtAsync(Branch, LotID, Aucdt);
        }
        
        public System.Data.DataSet get_lot_pledges(int BranchID, int LotGoldType, string LettStatus, int slno) {
            return base.Channel.get_lot_pledges(BranchID, LotGoldType, LettStatus, slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_lot_pledgesAsync(int BranchID, int LotGoldType, string LettStatus, int slno) {
            return base.Channel.get_lot_pledgesAsync(BranchID, LotGoldType, LettStatus, slno);
        }
        
        public string UploadDocument_branch(string PledgeNo, int UserId, int Doctsts) {
            return base.Channel.UploadDocument_branch(PledgeNo, UserId, Doctsts);
        }
        
        public System.Threading.Tasks.Task<string> UploadDocument_branchAsync(string PledgeNo, int UserId, int Doctsts) {
            return base.Channel.UploadDocument_branchAsync(PledgeNo, UserId, Doctsts);
        }
        
        public System.Data.DataSet Branch_Combo_DocStatus() {
            return base.Channel.Branch_Combo_DocStatus();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Branch_Combo_DocStatusAsync() {
            return base.Channel.Branch_Combo_DocStatusAsync();
        }
        
        public System.Data.DataSet get_branch_tare_wt(string Plno) {
            return base.Channel.get_branch_tare_wt(Plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_branch_tare_wtAsync(string Plno) {
            return base.Channel.get_branch_tare_wtAsync(Plno);
        }
        
        public string Branch_ReleaseGold(int LotID, int UserID) {
            return base.Channel.Branch_ReleaseGold(LotID, UserID);
        }
        
        public System.Threading.Tasks.Task<string> Branch_ReleaseGoldAsync(int LotID, int UserID) {
            return base.Channel.Branch_ReleaseGoldAsync(LotID, UserID);
        }
        
        public System.Data.DataSet Load_item_dtls(string PledgeNo) {
            return base.Channel.Load_item_dtls(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Load_item_dtlsAsync(string PledgeNo) {
            return base.Channel.Load_item_dtlsAsync(PledgeNo);
        }
        
        public int get_menu_status(int BranchID) {
            return base.Channel.get_menu_status(BranchID);
        }
        
        public System.Threading.Tasks.Task<int> get_menu_statusAsync(int BranchID) {
            return base.Channel.get_menu_statusAsync(BranchID);
        }
        
        public System.Data.DataSet get_vendor_balance(int VendorID) {
            return base.Channel.get_vendor_balance(VendorID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_vendor_balanceAsync(int VendorID) {
            return base.Channel.get_vendor_balanceAsync(VendorID);
        }
        
        public int get_new_auction_status(int BranchID) {
            return base.Channel.get_new_auction_status(BranchID);
        }
        
        public System.Threading.Tasks.Task<int> get_new_auction_statusAsync(int BranchID) {
            return base.Channel.get_new_auction_statusAsync(BranchID);
        }
        
        public System.Data.DataSet get_payid_details(int payid, int flg, int branchid, int usrid, string pldtls) {
            return base.Channel.get_payid_details(payid, flg, branchid, usrid, pldtls);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_payid_detailsAsync(int payid, int flg, int branchid, int usrid, string pldtls) {
            return base.Channel.get_payid_detailsAsync(payid, flg, branchid, usrid, pldtls);
        }
        
        public int check_zero_balace_pledge(string plno) {
            return base.Channel.check_zero_balace_pledge(plno);
        }
        
        public System.Threading.Tasks.Task<int> check_zero_balace_pledgeAsync(string plno) {
            return base.Channel.check_zero_balace_pledgeAsync(plno);
        }
        
        public int GetAucCalRepId(int usr) {
            return base.Channel.GetAucCalRepId(usr);
        }
        
        public System.Threading.Tasks.Task<int> GetAucCalRepIdAsync(int usr) {
            return base.Channel.GetAucCalRepIdAsync(usr);
        }
        
        public int GetpostId(int usr) {
            return base.Channel.GetpostId(usr);
        }
        
        public System.Threading.Tasks.Task<int> GetpostIdAsync(int usr) {
            return base.Channel.GetpostIdAsync(usr);
        }
        
        public System.Data.DataSet GetAucCalendarAHRpt(string usr, int repid) {
            return base.Channel.GetAucCalendarAHRpt(usr, repid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAucCalendarAHRptAsync(string usr, int repid) {
            return base.Channel.GetAucCalendarAHRptAsync(usr, repid);
        }
        
        public System.Data.DataSet GetBrName() {
            return base.Channel.GetBrName();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBrNameAsync() {
            return base.Channel.GetBrNameAsync();
        }
        
        public System.Data.DataSet GetAucInfo(string brid) {
            return base.Channel.GetAucInfo(brid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAucInfoAsync(string brid) {
            return base.Channel.GetAucInfoAsync(brid);
        }
        
        public System.Data.DataSet GetAucHrTime() {
            return base.Channel.GetAucHrTime();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAucHrTimeAsync() {
            return base.Channel.GetAucHrTimeAsync();
        }
        
        public System.Data.DataSet GetAucMinTime() {
            return base.Channel.GetAucMinTime();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAucMinTimeAsync() {
            return base.Channel.GetAucMinTimeAsync();
        }
        
        public string UpdateAucCalendar(string usr, string brid, System.DateTime prvaucdt, System.DateTime newdt, string prevauctime, string newtime) {
            return base.Channel.UpdateAucCalendar(usr, brid, prvaucdt, newdt, prevauctime, newtime);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAucCalendarAsync(string usr, string brid, System.DateTime prvaucdt, System.DateTime newdt, string prevauctime, string newtime) {
            return base.Channel.UpdateAucCalendarAsync(usr, brid, prvaucdt, newdt, prevauctime, newtime);
        }
        
        public System.Data.DataSet MTD_date() {
            return base.Channel.MTD_date();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MTD_dateAsync() {
            return base.Channel.MTD_dateAsync();
        }
        
        public System.Data.DataSet GetMTDCatgry() {
            return base.Channel.GetMTDCatgry();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMTDCatgryAsync() {
            return base.Channel.GetMTDCatgryAsync();
        }
        
        public System.Data.DataSet Surplus_pend_rpt(int BranchId, string ReceiveFrom, string ReceiveTo, int usr) {
            return base.Channel.Surplus_pend_rpt(BranchId, ReceiveFrom, ReceiveTo, usr);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Surplus_pend_rptAsync(int BranchId, string ReceiveFrom, string ReceiveTo, int usr) {
            return base.Channel.Surplus_pend_rptAsync(BranchId, ReceiveFrom, ReceiveTo, usr);
        }
        
        public System.Data.DataSet Surplus_pend_rpt_new(int BranchId, string ReceiveFrom, string ReceiveTo, int usr) {
            return base.Channel.Surplus_pend_rpt_new(BranchId, ReceiveFrom, ReceiveTo, usr);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Surplus_pend_rpt_newAsync(int BranchId, string ReceiveFrom, string ReceiveTo, int usr) {
            return base.Channel.Surplus_pend_rpt_newAsync(BranchId, ReceiveFrom, ReceiveTo, usr);
        }
        
        public System.Data.DataSet get_area_region(int BranchId) {
            return base.Channel.get_area_region(BranchId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_area_regionAsync(int BranchId) {
            return base.Channel.get_area_regionAsync(BranchId);
        }
        
        public System.Data.DataSet GetAucCalendarRpt(string usr, int repid) {
            return base.Channel.GetAucCalendarRpt(usr, repid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAucCalendarRptAsync(string usr, int repid) {
            return base.Channel.GetAucCalendarRptAsync(usr, repid);
        }
        
        public System.Data.DataSet get_branch_reassess(string plno) {
            return base.Channel.get_branch_reassess(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_branch_reassessAsync(string plno) {
            return base.Channel.get_branch_reassessAsync(plno);
        }
        
        public System.Data.DataSet get_purity_reassess(string plno) {
            return base.Channel.get_purity_reassess(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_purity_reassessAsync(string plno) {
            return base.Channel.get_purity_reassessAsync(plno);
        }
        
        public System.Data.DataSet get_normalize_reassess(string plno) {
            return base.Channel.get_normalize_reassess(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_normalize_reassessAsync(string plno) {
            return base.Channel.get_normalize_reassessAsync(plno);
        }
        
        public System.Data.DataSet get_auction_letter_reassess(string plno) {
            return base.Channel.get_auction_letter_reassess(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_auction_letter_reassessAsync(string plno) {
            return base.Channel.get_auction_letter_reassessAsync(plno);
        }
        
        public System.Data.DataSet get_stdwt_reassess(string plno, int flg) {
            return base.Channel.get_stdwt_reassess(plno, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_stdwt_reassessAsync(string plno, int flg) {
            return base.Channel.get_stdwt_reassessAsync(plno, flg);
        }
        
        public int get_confirm_reassess(string plno, int userid) {
            return base.Channel.get_confirm_reassess(plno, userid);
        }
        
        public System.Threading.Tasks.Task<int> get_confirm_reassessAsync(string plno, int userid) {
            return base.Channel.get_confirm_reassessAsync(plno, userid);
        }
        
        public System.Data.DataSet get_vendor_category() {
            return base.Channel.get_vendor_category();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_vendor_categoryAsync() {
            return base.Channel.get_vendor_categoryAsync();
        }
        
        public System.Data.DataSet get_vendor_state() {
            return base.Channel.get_vendor_state();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_vendor_stateAsync() {
            return base.Channel.get_vendor_stateAsync();
        }
        
        public System.Data.DataSet get_vendor_district(int state) {
            return base.Channel.get_vendor_district(state);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_vendor_districtAsync(int state) {
            return base.Channel.get_vendor_districtAsync(state);
        }
        
        public System.Data.DataSet get_vendor_post(int district) {
            return base.Channel.get_vendor_post(district);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_vendor_postAsync(int district) {
            return base.Channel.get_vendor_postAsync(district);
        }
        
        public System.Data.DataSet get_kyc_type(int type_id) {
            return base.Channel.get_kyc_type(type_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_kyc_typeAsync(int type_id) {
            return base.Channel.get_kyc_typeAsync(type_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.Add_New_VendorResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.Add_New_Vendor(NewAuctionLetter.GL_AUCTION.Add_New_VendorRequest request) {
            return base.Channel.Add_New_Vendor(request);
        }
        
        public string Add_New_Vendor(string TransferData, byte[] Doc, int BranchId, int UserId) {
            NewAuctionLetter.GL_AUCTION.Add_New_VendorRequest inValue = new NewAuctionLetter.GL_AUCTION.Add_New_VendorRequest();
            inValue.TransferData = TransferData;
            inValue.Doc = Doc;
            inValue.BranchId = BranchId;
            inValue.UserId = UserId;
            NewAuctionLetter.GL_AUCTION.Add_New_VendorResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).Add_New_Vendor(inValue);
            return retVal.Add_New_VendorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Add_New_VendorResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.Add_New_VendorAsync(NewAuctionLetter.GL_AUCTION.Add_New_VendorRequest request) {
            return base.Channel.Add_New_VendorAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Add_New_VendorResponse> Add_New_VendorAsync(string TransferData, byte[] Doc, int BranchId, int UserId) {
            NewAuctionLetter.GL_AUCTION.Add_New_VendorRequest inValue = new NewAuctionLetter.GL_AUCTION.Add_New_VendorRequest();
            inValue.TransferData = TransferData;
            inValue.Doc = Doc;
            inValue.BranchId = BranchId;
            inValue.UserId = UserId;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).Add_New_VendorAsync(inValue);
        }
        
        public System.Data.DataSet get_gst_state_dtls(int type_id) {
            return base.Channel.get_gst_state_dtls(type_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_gst_state_dtlsAsync(int type_id) {
            return base.Channel.get_gst_state_dtlsAsync(type_id);
        }
        
        public System.Data.DataSet GetAccountType() {
            return base.Channel.GetAccountType();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAccountTypeAsync() {
            return base.Channel.GetAccountTypeAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.Surplus_Neft_Confirm(NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmRequest request) {
            return base.Channel.Surplus_Neft_Confirm(request);
        }
        
        public string Surplus_Neft_Confirm(string UserId, int BranchId, string Acc_No, string ifsc, int acc_type, int Pay_ID, byte[] Doc) {
            NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmRequest inValue = new NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmRequest();
            inValue.UserId = UserId;
            inValue.BranchId = BranchId;
            inValue.Acc_No = Acc_No;
            inValue.ifsc = ifsc;
            inValue.acc_type = acc_type;
            inValue.Pay_ID = Pay_ID;
            inValue.Doc = Doc;
            NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).Surplus_Neft_Confirm(inValue);
            return retVal.Surplus_Neft_ConfirmResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.Surplus_Neft_ConfirmAsync(NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmRequest request) {
            return base.Channel.Surplus_Neft_ConfirmAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmResponse> Surplus_Neft_ConfirmAsync(string UserId, int BranchId, string Acc_No, string ifsc, int acc_type, int Pay_ID, byte[] Doc) {
            NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmRequest inValue = new NewAuctionLetter.GL_AUCTION.Surplus_Neft_ConfirmRequest();
            inValue.UserId = UserId;
            inValue.BranchId = BranchId;
            inValue.Acc_No = Acc_No;
            inValue.ifsc = ifsc;
            inValue.acc_type = acc_type;
            inValue.Pay_ID = Pay_ID;
            inValue.Doc = Doc;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).Surplus_Neft_ConfirmAsync(inValue);
        }
        
        public string Get_NeftStatus(int Pay_ID) {
            return base.Channel.Get_NeftStatus(Pay_ID);
        }
        
        public System.Threading.Tasks.Task<string> Get_NeftStatusAsync(int Pay_ID) {
            return base.Channel.Get_NeftStatusAsync(Pay_ID);
        }
        
        public System.Data.DataSet LegalLetter_type() {
            return base.Channel.LegalLetter_type();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LegalLetter_typeAsync() {
            return base.Channel.LegalLetter_typeAsync();
        }
        
        public System.Data.DataSet LegalLetterDate(int let_type) {
            return base.Channel.LegalLetterDate(let_type);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LegalLetterDateAsync(int let_type) {
            return base.Channel.LegalLetterDateAsync(let_type);
        }
        
        public System.Data.DataSet LegalLetter_count(int let_type, string upload_dt) {
            return base.Channel.LegalLetter_count(let_type, upload_dt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LegalLetter_countAsync(int let_type, string upload_dt) {
            return base.Channel.LegalLetter_countAsync(let_type, upload_dt);
        }
        
        public System.Data.DataSet LegalLetter_Print_data(int lt_type, string upload_dt) {
            return base.Channel.LegalLetter_Print_data(lt_type, upload_dt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LegalLetter_Print_dataAsync(int lt_type, string upload_dt) {
            return base.Channel.LegalLetter_Print_dataAsync(lt_type, upload_dt);
        }
        
        public int LegalLetter_Confirm(int lt_type, string upload_dt) {
            return base.Channel.LegalLetter_Confirm(lt_type, upload_dt);
        }
        
        public System.Threading.Tasks.Task<int> LegalLetter_ConfirmAsync(int lt_type, string upload_dt) {
            return base.Channel.LegalLetter_ConfirmAsync(lt_type, upload_dt);
        }
        
        public int check_count(string pledge_no) {
            return base.Channel.check_count(pledge_no);
        }
        
        public System.Threading.Tasks.Task<int> check_countAsync(string pledge_no) {
            return base.Channel.check_countAsync(pledge_no);
        }
        
        public System.Data.DataSet vendor_selection() {
            return base.Channel.vendor_selection();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> vendor_selectionAsync() {
            return base.Channel.vendor_selectionAsync();
        }
        
        public System.Data.DataSet vendor_details(string vendorid) {
            return base.Channel.vendor_details(vendorid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> vendor_detailsAsync(string vendorid) {
            return base.Channel.vendor_detailsAsync(vendorid);
        }
        
        public System.Data.DataSet vendor_details_new(string id_num, int flg) {
            return base.Channel.vendor_details_new(id_num, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> vendor_details_newAsync(string id_num, int flg) {
            return base.Channel.vendor_details_newAsync(id_num, flg);
        }
        
        public string emd_collection_entry(string output, int flag) {
            return base.Channel.emd_collection_entry(output, flag);
        }
        
        public System.Threading.Tasks.Task<string> emd_collection_entryAsync(string output, int flag) {
            return base.Channel.emd_collection_entryAsync(output, flag);
        }
        
        public System.Data.DataSet vendordt_check(string vendorid, string auc_dt, int BranchID) {
            return base.Channel.vendordt_check(vendorid, auc_dt, BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> vendordt_checkAsync(string vendorid, string auc_dt, int BranchID) {
            return base.Channel.vendordt_checkAsync(vendorid, auc_dt, BranchID);
        }
        
        public System.Data.DataSet firmid_selection(int BranchID, int UserID) {
            return base.Channel.firmid_selection(BranchID, UserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> firmid_selectionAsync(int BranchID, int UserID) {
            return base.Channel.firmid_selectionAsync(BranchID, UserID);
        }
        
        public System.Data.DataSet voucher_details(int Transid, int BranchID, int Firmid) {
            return base.Channel.voucher_details(Transid, BranchID, Firmid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> voucher_detailsAsync(int Transid, int BranchID, int Firmid) {
            return base.Channel.voucher_detailsAsync(Transid, BranchID, Firmid);
        }
        
        public System.Data.DataSet vendorid_selection_return(int BranchID) {
            return base.Channel.vendorid_selection_return(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> vendorid_selection_returnAsync(int BranchID) {
            return base.Channel.vendorid_selection_returnAsync(BranchID);
        }
        
        public System.Data.DataSet auctiondt_selection(string vendorid, int BranchID) {
            return base.Channel.auctiondt_selection(vendorid, BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> auctiondt_selectionAsync(string vendorid, int BranchID) {
            return base.Channel.auctiondt_selectionAsync(vendorid, BranchID);
        }
        
        public System.Data.DataSet amount_details_penalty(string vendorid, string auction_date, int BranchID) {
            return base.Channel.amount_details_penalty(vendorid, auction_date, BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> amount_details_penaltyAsync(string vendorid, string auction_date, int BranchID) {
            return base.Channel.amount_details_penaltyAsync(vendorid, auction_date, BranchID);
        }
        
        public System.Data.DataSet vendor_check(string vendorid, string auction_date, int BranchID) {
            return base.Channel.vendor_check(vendorid, auction_date, BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> vendor_checkAsync(string vendorid, string auction_date, int BranchID) {
            return base.Channel.vendor_checkAsync(vendorid, auction_date, BranchID);
        }
        
        public System.Data.DataSet vendor_bid_check(string vendorid, string auction_date, int BranchID) {
            return base.Channel.vendor_bid_check(vendorid, auction_date, BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> vendor_bid_checkAsync(string vendorid, string auction_date, int BranchID) {
            return base.Channel.vendor_bid_checkAsync(vendorid, auction_date, BranchID);
        }
        
        public System.Data.DataSet amount_details(string vendorid, string auction_date, int BranchID) {
            return base.Channel.amount_details(vendorid, auction_date, BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> amount_detailsAsync(string vendorid, string auction_date, int BranchID) {
            return base.Channel.amount_detailsAsync(vendorid, auction_date, BranchID);
        }
        
        public string emd_return_entry(string output) {
            return base.Channel.emd_return_entry(output);
        }
        
        public System.Threading.Tasks.Task<string> emd_return_entryAsync(string output) {
            return base.Channel.emd_return_entryAsync(output);
        }
        
        public System.Data.DataSet vendor_check_success(string vendorid, string auction_date, int BranchID) {
            return base.Channel.vendor_check_success(vendorid, auction_date, BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> vendor_check_successAsync(string vendorid, string auction_date, int BranchID) {
            return base.Channel.vendor_check_successAsync(vendorid, auction_date, BranchID);
        }
        
        public System.Data.DataSet hoaud_select(string optFlag, string param) {
            return base.Channel.hoaud_select(optFlag, param);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> hoaud_selectAsync(string optFlag, string param) {
            return base.Channel.hoaud_selectAsync(optFlag, param);
        }
        
        public string hoaud_insupd(string optFlag, string param) {
            return base.Channel.hoaud_insupd(optFlag, param);
        }
        
        public System.Threading.Tasks.Task<string> hoaud_insupdAsync(string optFlag, string param) {
            return base.Channel.hoaud_insupdAsync(optFlag, param);
        }
        
        public System.Data.DataSet Auction_procedure_select(string indata, int flag) {
            return base.Channel.Auction_procedure_select(indata, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Auction_procedure_selectAsync(string indata, int flag) {
            return base.Channel.Auction_procedure_selectAsync(indata, flag);
        }
        
        public string Auction_procedure_confirm(string indata, int flag) {
            return base.Channel.Auction_procedure_confirm(indata, flag);
        }
        
        public System.Threading.Tasks.Task<string> Auction_procedure_confirmAsync(string indata, int flag) {
            return base.Channel.Auction_procedure_confirmAsync(indata, flag);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.common_file_uploadResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.common_file_upload(NewAuctionLetter.GL_AUCTION.common_file_uploadRequest request) {
            return base.Channel.common_file_upload(request);
        }
        
        public string common_file_upload(string param_val, byte[] dat) {
            NewAuctionLetter.GL_AUCTION.common_file_uploadRequest inValue = new NewAuctionLetter.GL_AUCTION.common_file_uploadRequest();
            inValue.param_val = param_val;
            inValue.dat = dat;
            NewAuctionLetter.GL_AUCTION.common_file_uploadResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).common_file_upload(inValue);
            return retVal.common_file_uploadResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.common_file_uploadResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.common_file_uploadAsync(NewAuctionLetter.GL_AUCTION.common_file_uploadRequest request) {
            return base.Channel.common_file_uploadAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.common_file_uploadResponse> common_file_uploadAsync(string param_val, byte[] dat) {
            NewAuctionLetter.GL_AUCTION.common_file_uploadRequest inValue = new NewAuctionLetter.GL_AUCTION.common_file_uploadRequest();
            inValue.param_val = param_val;
            inValue.dat = dat;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).common_file_uploadAsync(inValue);
        }
        
        public string common_file_upd_qry(string p_flag, string Data1) {
            return base.Channel.common_file_upd_qry(p_flag, Data1);
        }
        
        public System.Threading.Tasks.Task<string> common_file_upd_qryAsync(string p_flag, string Data1) {
            return base.Channel.common_file_upd_qryAsync(p_flag, Data1);
        }
        
        public string DocClassification_btnConfirm(int ClassID, string PledgeNo, int UserID, string slno) {
            return base.Channel.DocClassification_btnConfirm(ClassID, PledgeNo, UserID, slno);
        }
        
        public System.Threading.Tasks.Task<string> DocClassification_btnConfirmAsync(int ClassID, string PledgeNo, int UserID, string slno) {
            return base.Channel.DocClassification_btnConfirmAsync(ClassID, PledgeNo, UserID, slno);
        }
        
        public string ChangeClassification_btnConfirm(int ClassID, string PledgeNo, int UserID, string slno) {
            return base.Channel.ChangeClassification_btnConfirm(ClassID, PledgeNo, UserID, slno);
        }
        
        public System.Threading.Tasks.Task<string> ChangeClassification_btnConfirmAsync(int ClassID, string PledgeNo, int UserID, string slno) {
            return base.Channel.ChangeClassification_btnConfirmAsync(ClassID, PledgeNo, UserID, slno);
        }
        
        public System.Data.DataSet ChangeClassification_cmbBranch(int BranchId) {
            return base.Channel.ChangeClassification_cmbBranch(BranchId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ChangeClassification_cmbBranchAsync(int BranchId) {
            return base.Channel.ChangeClassification_cmbBranchAsync(BranchId);
        }
        
        public System.Data.DataSet surplus_cash_rpt1(int BranchId, string ReceiveFrom, string ReceiveTo) {
            return base.Channel.surplus_cash_rpt1(BranchId, ReceiveFrom, ReceiveTo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> surplus_cash_rpt1Async(int BranchId, string ReceiveFrom, string ReceiveTo) {
            return base.Channel.surplus_cash_rpt1Async(BranchId, ReceiveFrom, ReceiveTo);
        }
        
        public System.Data.DataSet Transfer_Pledges1(int BranchId, string AucDate, string PledgeList, int flag) {
            return base.Channel.Transfer_Pledges1(BranchId, AucDate, PledgeList, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Transfer_Pledges1Async(int BranchId, string AucDate, string PledgeList, int flag) {
            return base.Channel.Transfer_Pledges1Async(BranchId, AucDate, PledgeList, flag);
        }
        
        public System.Data.DataSet Transfer_Cancel_Approve1() {
            return base.Channel.Transfer_Cancel_Approve1();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Transfer_Cancel_Approve1Async() {
            return base.Channel.Transfer_Cancel_Approve1Async();
        }
        
        public System.Data.DataSet Transfer_Cancel_Request(int BranchID) {
            return base.Channel.Transfer_Cancel_Request(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Transfer_Cancel_RequestAsync(int BranchID) {
            return base.Channel.Transfer_Cancel_RequestAsync(BranchID);
        }
        
        public System.Data.DataSet Transfer_Cancel_Request1(int IBGTN) {
            return base.Channel.Transfer_Cancel_Request1(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Transfer_Cancel_Request1Async(int IBGTN) {
            return base.Channel.Transfer_Cancel_Request1Async(IBGTN);
        }
        
        public System.Data.DataSet Transfer_Cancel_Request2(int IBGTN) {
            return base.Channel.Transfer_Cancel_Request2(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Transfer_Cancel_Request2Async(int IBGTN) {
            return base.Channel.Transfer_Cancel_Request2Async(IBGTN);
        }
        
        public System.Data.DataSet Defer_Request_BR_live1(string date1, string PledgeNo) {
            return base.Channel.Defer_Request_BR_live1(date1, PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Defer_Request_BR_live1Async(string date1, string PledgeNo) {
            return base.Channel.Defer_Request_BR_live1Async(date1, PledgeNo);
        }
        
        public System.Data.DataSet Defer_Request_BR1(string date1, string PledgeNo) {
            return base.Channel.Defer_Request_BR1(date1, PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Defer_Request_BR1Async(string date1, string PledgeNo) {
            return base.Channel.Defer_Request_BR1Async(date1, PledgeNo);
        }
        
        public System.Data.DataSet Defer_Approve_RH1(string date1, string cmbdtl) {
            return base.Channel.Defer_Approve_RH1(date1, cmbdtl);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Defer_Approve_RH1Async(string date1, string cmbdtl) {
            return base.Channel.Defer_Approve_RH1Async(date1, cmbdtl);
        }
        
        public System.Data.DataSet Defer_Approve_RH2(string cmbdtl) {
            return base.Channel.Defer_Approve_RH2(cmbdtl);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Defer_Approve_RH2Async(string cmbdtl) {
            return base.Channel.Defer_Approve_RH2Async(cmbdtl);
        }
        
        public System.Data.DataSet GetAuc_vendor_stmt(int ven_id, string frdt, string todt, int flg) {
            return base.Channel.GetAuc_vendor_stmt(ven_id, frdt, todt, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAuc_vendor_stmtAsync(int ven_id, string frdt, string todt, int flg) {
            return base.Channel.GetAuc_vendor_stmtAsync(ven_id, frdt, todt, flg);
        }
        
        public System.Data.DataSet Get_vendor_dtls(int vendor) {
            return base.Channel.Get_vendor_dtls(vendor);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Get_vendor_dtlsAsync(int vendor) {
            return base.Channel.Get_vendor_dtlsAsync(vendor);
        }
        
        public System.Data.DataSet Check_punching(string auc_id, int brid, int flg) {
            return base.Channel.Check_punching(auc_id, brid, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Check_punchingAsync(string auc_id, int brid, int flg) {
            return base.Channel.Check_punchingAsync(auc_id, brid, flg);
        }
        
        public System.Data.DataSet get_vendorname() {
            return base.Channel.get_vendorname();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_vendornameAsync() {
            return base.Channel.get_vendornameAsync();
        }
        
        public string SurplusOtp(string phone) {
            return base.Channel.SurplusOtp(phone);
        }
        
        public System.Threading.Tasks.Task<string> SurplusOtpAsync(string phone) {
            return base.Channel.SurplusOtpAsync(phone);
        }
        
        public System.Data.DataSet Post_Letter_type() {
            return base.Channel.Post_Letter_type();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Post_Letter_typeAsync() {
            return base.Channel.Post_Letter_typeAsync();
        }
        
        public System.Data.DataSet Post_Letter_count(int tp, int lt_val, string language, string gen_dt) {
            return base.Channel.Post_Letter_count(tp, lt_val, language, gen_dt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Post_Letter_countAsync(int tp, int lt_val, string language, string gen_dt) {
            return base.Channel.Post_Letter_countAsync(tp, lt_val, language, gen_dt);
        }
        
        public System.Data.DataSet Post_Auction_Letter_language(int let_type, string gen_dt) {
            return base.Channel.Post_Auction_Letter_language(let_type, gen_dt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Post_Auction_Letter_languageAsync(int let_type, string gen_dt) {
            return base.Channel.Post_Auction_Letter_languageAsync(let_type, gen_dt);
        }
        
        public long Post_Change_Letter_count(int tp, int lt_val, string language, int frm, int to_tp, string gen_dt) {
            return base.Channel.Post_Change_Letter_count(tp, lt_val, language, frm, to_tp, gen_dt);
        }
        
        public System.Threading.Tasks.Task<long> Post_Change_Letter_countAsync(int tp, int lt_val, string language, int frm, int to_tp, string gen_dt) {
            return base.Channel.Post_Change_Letter_countAsync(tp, lt_val, language, frm, to_tp, gen_dt);
        }
        
        public System.Data.DataSet post_auctionLetter_his_rpt(string fromdt, string todt) {
            return base.Channel.post_auctionLetter_his_rpt(fromdt, todt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> post_auctionLetter_his_rptAsync(string fromdt, string todt) {
            return base.Channel.post_auctionLetter_his_rptAsync(fromdt, todt);
        }
        
        public System.Data.DataSet Post_Letter_Print_data(string language, int lt_type, int min_val, int max_val, string gendt, int flag) {
            return base.Channel.Post_Letter_Print_data(language, lt_type, min_val, max_val, gendt, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Post_Letter_Print_dataAsync(string language, int lt_type, int min_val, int max_val, string gendt, int flag) {
            return base.Channel.Post_Letter_Print_dataAsync(language, lt_type, min_val, max_val, gendt, flag);
        }
        
        public System.Data.DataSet get_surplus_adcard_rpt(string lang, string gen_dt, int lt_type, int from_num, int to_num) {
            return base.Channel.get_surplus_adcard_rpt(lang, gen_dt, lt_type, from_num, to_num);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_surplus_adcard_rptAsync(string lang, string gen_dt, int lt_type, int from_num, int to_num) {
            return base.Channel.get_surplus_adcard_rptAsync(lang, gen_dt, lt_type, from_num, to_num);
        }
        
        public System.Data.DataSet PostActionCommonReport(int lt_type, string fromdate, string todate) {
            return base.Channel.PostActionCommonReport(lt_type, fromdate, todate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> PostActionCommonReportAsync(int lt_type, string fromdate, string todate) {
            return base.Channel.PostActionCommonReportAsync(lt_type, fromdate, todate);
        }
        
        public System.Data.DataSet post_letter_report(string pr_dt1, string pr_dt2) {
            return base.Channel.post_letter_report(pr_dt1, pr_dt2);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> post_letter_reportAsync(string pr_dt1, string pr_dt2) {
            return base.Channel.post_letter_reportAsync(pr_dt1, pr_dt2);
        }
        
        public System.Data.DataSet get_unsuccessful_aucCenter() {
            return base.Channel.get_unsuccessful_aucCenter();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_unsuccessful_aucCenterAsync() {
            return base.Channel.get_unsuccessful_aucCenterAsync();
        }
        
        public System.Data.DataSet get_unsuccessful_schedule_branches(int BranchID, int schedule_id, string audate) {
            return base.Channel.get_unsuccessful_schedule_branches(BranchID, schedule_id, audate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_unsuccessful_schedule_branchesAsync(int BranchID, int schedule_id, string audate) {
            return base.Channel.get_unsuccessful_schedule_branchesAsync(BranchID, schedule_id, audate);
        }
        
        public System.Data.DataSet get_unsuccessful_change_emp() {
            return base.Channel.get_unsuccessful_change_emp();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_unsuccessful_change_empAsync() {
            return base.Channel.get_unsuccessful_change_empAsync();
        }
        
        public System.Data.DataSet get_oldcarrier_emp(int schedule_id) {
            return base.Channel.get_oldcarrier_emp(schedule_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_oldcarrier_empAsync(int schedule_id) {
            return base.Channel.get_oldcarrier_empAsync(schedule_id);
        }
        
        public System.Data.DataSet get_unsuccessful_carrier_emp(int BranchID, int flag) {
            return base.Channel.get_unsuccessful_carrier_emp(BranchID, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_unsuccessful_carrier_empAsync(int BranchID, int flag) {
            return base.Channel.get_unsuccessful_carrier_empAsync(BranchID, flag);
        }
        
        public string emp_change_confirm(int AucCenter, int BranchID, string carrier, int schedule, string carr_bh) {
            return base.Channel.emp_change_confirm(AucCenter, BranchID, carrier, schedule, carr_bh);
        }
        
        public System.Threading.Tasks.Task<string> emp_change_confirmAsync(int AucCenter, int BranchID, string carrier, int schedule, string carr_bh) {
            return base.Channel.emp_change_confirmAsync(AucCenter, BranchID, carrier, schedule, carr_bh);
        }
        
        public int get_robot_emp(int UserID) {
            return base.Channel.get_robot_emp(UserID);
        }
        
        public System.Threading.Tasks.Task<int> get_robot_empAsync(int UserID) {
            return base.Channel.get_robot_empAsync(UserID);
        }
        
        public System.Data.DataSet get_vendor_name() {
            return base.Channel.get_vendor_name();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_vendor_nameAsync() {
            return base.Channel.get_vendor_nameAsync();
        }
        
        public System.Data.DataSet display_vendor_info(int vendor) {
            return base.Channel.display_vendor_info(vendor);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> display_vendor_infoAsync(int vendor) {
            return base.Channel.display_vendor_infoAsync(vendor);
        }
        
        public System.Data.DataSet get_auction_center_name() {
            return base.Channel.get_auction_center_name();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_auction_center_nameAsync() {
            return base.Channel.get_auction_center_nameAsync();
        }
        
        public string Confirm_auc_bidder_dtls(int vendid, int brid, int auc_cent_id, System.DateTime auc_dt, int uid) {
            return base.Channel.Confirm_auc_bidder_dtls(vendid, brid, auc_cent_id, auc_dt, uid);
        }
        
        public System.Threading.Tasks.Task<string> Confirm_auc_bidder_dtlsAsync(int vendid, int brid, int auc_cent_id, System.DateTime auc_dt, int uid) {
            return base.Channel.Confirm_auc_bidder_dtlsAsync(vendid, brid, auc_cent_id, auc_dt, uid);
        }
        
        public System.Data.DataSet get_state() {
            return base.Channel.get_state();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_stateAsync() {
            return base.Channel.get_stateAsync();
        }
        
        public System.Data.DataSet get_approval_state() {
            return base.Channel.get_approval_state();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_approval_stateAsync() {
            return base.Channel.get_approval_stateAsync();
        }
        
        public string market_rate_updation(int stateid, string market_dt, double mktrate_22ct, double mktrate_24ct, int uid) {
            return base.Channel.market_rate_updation(stateid, market_dt, mktrate_22ct, mktrate_24ct, uid);
        }
        
        public System.Threading.Tasks.Task<string> market_rate_updationAsync(int stateid, string market_dt, double mktrate_22ct, double mktrate_24ct, int uid) {
            return base.Channel.market_rate_updationAsync(stateid, market_dt, mktrate_22ct, mktrate_24ct, uid);
        }
        
        public System.Data.DataSet get_effective_date(int state) {
            return base.Channel.get_effective_date(state);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_effective_dateAsync(int state) {
            return base.Channel.get_effective_dateAsync(state);
        }
        
        public System.Data.DataSet upload_market_rate(int State, string Mdate) {
            return base.Channel.upload_market_rate(State, Mdate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> upload_market_rateAsync(int State, string Mdate) {
            return base.Channel.upload_market_rateAsync(State, Mdate);
        }
        
        public string market_rate_approval(int stateid, string market_dt, int approved_user, string rej_reason, int flag) {
            return base.Channel.market_rate_approval(stateid, market_dt, approved_user, rej_reason, flag);
        }
        
        public System.Threading.Tasks.Task<string> market_rate_approvalAsync(int stateid, string market_dt, int approved_user, string rej_reason, int flag) {
            return base.Channel.market_rate_approvalAsync(stateid, market_dt, approved_user, rej_reason, flag);
        }
        
        public System.Data.DataSet get_salerate_count(int Auc_center, string Mdate) {
            return base.Channel.get_salerate_count(Auc_center, Mdate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_salerate_countAsync(int Auc_center, string Mdate) {
            return base.Channel.get_salerate_countAsync(Auc_center, Mdate);
        }
        
        public System.Data.DataSet view_approved_rate(int Auc_center, string Mdate) {
            return base.Channel.view_approved_rate(Auc_center, Mdate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> view_approved_rateAsync(int Auc_center, string Mdate) {
            return base.Channel.view_approved_rateAsync(Auc_center, Mdate);
        }
        
        public int department_check(int usrid) {
            return base.Channel.department_check(usrid);
        }
        
        public System.Threading.Tasks.Task<int> department_checkAsync(int usrid) {
            return base.Channel.department_checkAsync(usrid);
        }
        
        public System.Data.DataSet get_mkt_rate_info(int lot_id) {
            return base.Channel.get_mkt_rate_info(lot_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_mkt_rate_infoAsync(int lot_id) {
            return base.Channel.get_mkt_rate_infoAsync(lot_id);
        }
        
        public string gold_rate_rh_confirm(int user_id, int lot_id, int flag) {
            return base.Channel.gold_rate_rh_confirm(user_id, lot_id, flag);
        }
        
        public System.Threading.Tasks.Task<string> gold_rate_rh_confirmAsync(int user_id, int lot_id, int flag) {
            return base.Channel.gold_rate_rh_confirmAsync(user_id, lot_id, flag);
        }
        
        public System.Data.DataSet get_bid_amnt_info(double lot_id) {
            return base.Channel.get_bid_amnt_info(lot_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_bid_amnt_infoAsync(double lot_id) {
            return base.Channel.get_bid_amnt_infoAsync(lot_id);
        }
        
        public System.Data.DataSet get_auctioneer_name(string auc_date, int auc_id) {
            return base.Channel.get_auctioneer_name(auc_date, auc_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_auctioneer_nameAsync(string auc_date, int auc_id) {
            return base.Channel.get_auctioneer_nameAsync(auc_date, auc_id);
        }
        
        public System.Data.DataSet market_rate_lot(string auc_date) {
            return base.Channel.market_rate_lot(auc_date);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> market_rate_lotAsync(string auc_date) {
            return base.Channel.market_rate_lotAsync(auc_date);
        }
        
        public System.Data.DataSet get_market_gold(int auc_center, string AuctionDate) {
            return base.Channel.get_market_gold(auc_center, AuctionDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_market_goldAsync(int auc_center, string AuctionDate) {
            return base.Channel.get_market_goldAsync(auc_center, AuctionDate);
        }
        
        public System.Data.DataSet get_lot_count(int lot_id) {
            return base.Channel.get_lot_count(lot_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_lot_countAsync(int lot_id) {
            return base.Channel.get_lot_countAsync(lot_id);
        }
        
        public int gold_rate_bid_confirm(int auc_id, int Lotno, int mkt_rt, double amt, string auc_dt, double stand_wt, int enter_userid) {
            return base.Channel.gold_rate_bid_confirm(auc_id, Lotno, mkt_rt, amt, auc_dt, stand_wt, enter_userid);
        }
        
        public System.Threading.Tasks.Task<int> gold_rate_bid_confirmAsync(int auc_id, int Lotno, int mkt_rt, double amt, string auc_dt, double stand_wt, int enter_userid) {
            return base.Channel.gold_rate_bid_confirmAsync(auc_id, Lotno, mkt_rt, amt, auc_dt, stand_wt, enter_userid);
        }
        
        public System.Data.DataSet get_mktrate_auccenter() {
            return base.Channel.get_mktrate_auccenter();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_mktrate_auccenterAsync() {
            return base.Channel.get_mktrate_auccenterAsync();
        }
        
        public System.Data.DataSet get_mktrate_lot_id(int auc_center) {
            return base.Channel.get_mktrate_lot_id(auc_center);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_mktrate_lot_idAsync(int auc_center) {
            return base.Channel.get_mktrate_lot_idAsync(auc_center);
        }
        
        public System.Data.DataSet get_Surprise_Verify(int branch, string str, int ch) {
            return base.Channel.get_Surprise_Verify(branch, str, ch);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_Surprise_VerifyAsync(int branch, string str, int ch) {
            return base.Channel.get_Surprise_VerifyAsync(branch, str, ch);
        }
        
        public string get_Surprise_Entry(string data1, int ch) {
            return base.Channel.get_Surprise_Entry(data1, ch);
        }
        
        public System.Threading.Tasks.Task<string> get_Surprise_EntryAsync(string data1, int ch) {
            return base.Channel.get_Surprise_EntryAsync(data1, ch);
        }
        
        public int pass_chek_joint(int userid, string passwd, int brid) {
            return base.Channel.pass_chek_joint(userid, passwd, brid);
        }
        
        public System.Threading.Tasks.Task<int> pass_chek_jointAsync(int userid, string passwd, int brid) {
            return base.Channel.pass_chek_jointAsync(userid, passwd, brid);
        }
        
        public System.Data.DataSet ApproveIrregularity21(int sl_no, int usr) {
            return base.Channel.ApproveIrregularity21(sl_no, usr);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ApproveIrregularity21Async(int sl_no, int usr) {
            return base.Channel.ApproveIrregularity21Async(sl_no, usr);
        }
        
        public System.Data.DataSet Get_auth_user_cnt(int usr, int Br_id, int flg) {
            return base.Channel.Get_auth_user_cnt(usr, Br_id, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Get_auth_user_cntAsync(int usr, int Br_id, int flg) {
            return base.Channel.Get_auth_user_cntAsync(usr, Br_id, flg);
        }
        
        public string Cashlimit_check(double cashlimit, int vendorid, double amount) {
            return base.Channel.Cashlimit_check(cashlimit, vendorid, amount);
        }
        
        public System.Threading.Tasks.Task<string> Cashlimit_checkAsync(double cashlimit, int vendorid, double amount) {
            return base.Channel.Cashlimit_checkAsync(cashlimit, vendorid, amount);
        }
        
        public System.Data.DataSet check_auction_eligible(int brid, int flg) {
            return base.Channel.check_auction_eligible(brid, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> check_auction_eligibleAsync(int brid, int flg) {
            return base.Channel.check_auction_eligibleAsync(brid, flg);
        }
        
        public System.Data.DataSet Transfer_pledge_details(int brid, string aucdt) {
            return base.Channel.Transfer_pledge_details(brid, aucdt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Transfer_pledge_detailsAsync(int brid, string aucdt) {
            return base.Channel.Transfer_pledge_detailsAsync(brid, aucdt);
        }
        
        public System.Data.DataSet Display_Auction_dt(int brid) {
            return base.Channel.Display_Auction_dt(brid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Display_Auction_dtAsync(int brid) {
            return base.Channel.Display_Auction_dtAsync(brid);
        }
        
        public string Branch_transfer_process(int BranchId, System.DateTime Hotlistdt, int UserId) {
            return base.Channel.Branch_transfer_process(BranchId, Hotlistdt, UserId);
        }
        
        public System.Threading.Tasks.Task<string> Branch_transfer_processAsync(int BranchId, System.DateTime Hotlistdt, int UserId) {
            return base.Channel.Branch_transfer_processAsync(BranchId, Hotlistdt, UserId);
        }
        
        public System.Data.DataSet Normalization_Branch(int BranchID, int flg) {
            return base.Channel.Normalization_Branch(BranchID, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Normalization_BranchAsync(int BranchID, int flg) {
            return base.Channel.Normalization_BranchAsync(BranchID, flg);
        }
        
        public System.Data.DataSet Normalization_Branch1(int brid, int flg) {
            return base.Channel.Normalization_Branch1(brid, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Normalization_Branch1Async(int brid, int flg) {
            return base.Channel.Normalization_Branch1Async(brid, flg);
        }
        
        public string Branch_Normalize(string PledgeNo, int Brid, string Data, double GrossWt, double WtDiff, double StandardWeight, int UserID, double RcvdTareWeight, int PacketStatus, int flg) {
            return base.Channel.Branch_Normalize(PledgeNo, Brid, Data, GrossWt, WtDiff, StandardWeight, UserID, RcvdTareWeight, PacketStatus, flg);
        }
        
        public System.Threading.Tasks.Task<string> Branch_NormalizeAsync(string PledgeNo, int Brid, string Data, double GrossWt, double WtDiff, double StandardWeight, int UserID, double RcvdTareWeight, int PacketStatus, int flg) {
            return base.Channel.Branch_NormalizeAsync(PledgeNo, Brid, Data, GrossWt, WtDiff, StandardWeight, UserID, RcvdTareWeight, PacketStatus, flg);
        }
        
        public int Class_check(string Pledgeno, int flg) {
            return base.Channel.Class_check(Pledgeno, flg);
        }
        
        public System.Threading.Tasks.Task<int> Class_checkAsync(string Pledgeno, int flg) {
            return base.Channel.Class_checkAsync(Pledgeno, flg);
        }
        
        public int normalize_delete(string Pledgeno, int flg) {
            return base.Channel.normalize_delete(Pledgeno, flg);
        }
        
        public System.Threading.Tasks.Task<int> normalize_deleteAsync(string Pledgeno, int flg) {
            return base.Channel.normalize_deleteAsync(Pledgeno, flg);
        }
        
        public System.Data.DataSet get_auction_vendors(int BranchID, string aucdt) {
            return base.Channel.get_auction_vendors(BranchID, aucdt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_auction_vendorsAsync(int BranchID, string aucdt) {
            return base.Channel.get_auction_vendorsAsync(BranchID, aucdt);
        }
        
        public string CancelAuctionProcess(string PledgeNo, int UserId) {
            return base.Channel.CancelAuctionProcess(PledgeNo, UserId);
        }
        
        public System.Threading.Tasks.Task<string> CancelAuctionProcessAsync(string PledgeNo, int UserId) {
            return base.Channel.CancelAuctionProcessAsync(PledgeNo, UserId);
        }
        
        public System.Data.DataSet get_lot_details(int BranchId) {
            return base.Channel.get_lot_details(BranchId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_lot_detailsAsync(int BranchId) {
            return base.Channel.get_lot_detailsAsync(BranchId);
        }
        
        public string CreateLot_branch(int AuctionCentre, string Data, int UserID, double Agrosswt, int Type) {
            return base.Channel.CreateLot_branch(AuctionCentre, Data, UserID, Agrosswt, Type);
        }
        
        public System.Threading.Tasks.Task<string> CreateLot_branchAsync(int AuctionCentre, string Data, int UserID, double Agrosswt, int Type) {
            return base.Channel.CreateLot_branchAsync(AuctionCentre, Data, UserID, Agrosswt, Type);
        }
        
        public System.Data.DataSet get_cosent_lett_id(int Lotid) {
            return base.Channel.get_cosent_lett_id(Lotid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_cosent_lett_idAsync(int Lotid) {
            return base.Channel.get_cosent_lett_idAsync(Lotid);
        }
        
        public int margin_limit_confirm(int brid, int Lotno, double mrgn_lt, double margin, double stdwt, string auc_dt, int enter_userid, double amt, int mkt_val) {
            return base.Channel.margin_limit_confirm(brid, Lotno, mrgn_lt, margin, stdwt, auc_dt, enter_userid, amt, mkt_val);
        }
        
        public System.Threading.Tasks.Task<int> margin_limit_confirmAsync(int brid, int Lotno, double mrgn_lt, double margin, double stdwt, string auc_dt, int enter_userid, double amt, int mkt_val) {
            return base.Channel.margin_limit_confirmAsync(brid, Lotno, mrgn_lt, margin, stdwt, auc_dt, enter_userid, amt, mkt_val);
        }
        
        public int get_margin_app_count(int LotID) {
            return base.Channel.get_margin_app_count(LotID);
        }
        
        public System.Threading.Tasks.Task<int> get_margin_app_countAsync(int LotID) {
            return base.Channel.get_margin_app_countAsync(LotID);
        }
        
        public string Branch_BidConfirmation(int LotId, string AuctioneerID, int VendorID, int TeamHead, int Auditor, double Amount, int stateid, string aucdt, int branchid) {
            return base.Channel.Branch_BidConfirmation(LotId, AuctioneerID, VendorID, TeamHead, Auditor, Amount, stateid, aucdt, branchid);
        }
        
        public System.Threading.Tasks.Task<string> Branch_BidConfirmationAsync(int LotId, string AuctioneerID, int VendorID, int TeamHead, int Auditor, double Amount, int stateid, string aucdt, int branchid) {
            return base.Channel.Branch_BidConfirmationAsync(LotId, AuctioneerID, VendorID, TeamHead, Auditor, Amount, stateid, aucdt, branchid);
        }
        
        public System.Data.DataSet branch_vendor_coll_lot(int venid, int branchid, int slno) {
            return base.Channel.branch_vendor_coll_lot(venid, branchid, slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> branch_vendor_coll_lotAsync(int venid, int branchid, int slno) {
            return base.Channel.branch_vendor_coll_lotAsync(venid, branchid, slno);
        }
        
        public string margin_approve(int LotId, int empid, int flg) {
            return base.Channel.margin_approve(LotId, empid, flg);
        }
        
        public System.Threading.Tasks.Task<string> margin_approveAsync(int LotId, int empid, int flg) {
            return base.Channel.margin_approveAsync(LotId, empid, flg);
        }
        
        public System.Data.DataSet doc_uploadplno(string AucDate, int BranchID) {
            return base.Channel.doc_uploadplno(AucDate, BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> doc_uploadplnoAsync(string AucDate, int BranchID) {
            return base.Channel.doc_uploadplnoAsync(AucDate, BranchID);
        }
        
        public System.Data.DataSet doc_upload_branch(int BranchID) {
            return base.Channel.doc_upload_branch(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> doc_upload_branchAsync(int BranchID) {
            return base.Channel.doc_upload_branchAsync(BranchID);
        }
        
        public int Bidder_punch_check(int BranchID, int vendid, string aucdt) {
            return base.Channel.Bidder_punch_check(BranchID, vendid, aucdt);
        }
        
        public System.Threading.Tasks.Task<int> Bidder_punch_checkAsync(int BranchID, int vendid, string aucdt) {
            return base.Channel.Bidder_punch_checkAsync(BranchID, vendid, aucdt);
        }
        
        public System.Data.DataSet pledgecurrentstatus01(string PledgeNo) {
            return base.Channel.pledgecurrentstatus01(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> pledgecurrentstatus01Async(string PledgeNo) {
            return base.Channel.pledgecurrentstatus01Async(PledgeNo);
        }
        
        public System.Data.DataSet pledgecurrentstatus02(string PledgeNo) {
            return base.Channel.pledgecurrentstatus02(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> pledgecurrentstatus02Async(string PledgeNo) {
            return base.Channel.pledgecurrentstatus02Async(PledgeNo);
        }
        
        public System.Data.DataSet Sale_Rate_Approve_cmbAuctCentre(int AuctCentre) {
            return base.Channel.Sale_Rate_Approve_cmbAuctCentre(AuctCentre);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Sale_Rate_Approve_cmbAuctCentreAsync(int AuctCentre) {
            return base.Channel.Sale_Rate_Approve_cmbAuctCentreAsync(AuctCentre);
        }
        
        public System.Data.DataSet Sale_Rate_Request() {
            return base.Channel.Sale_Rate_Request();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Sale_Rate_RequestAsync() {
            return base.Channel.Sale_Rate_RequestAsync();
        }
        
        public System.Data.DataSet Approve_Irregularity_cmbSelPledge(string Pledgeno) {
            return base.Channel.Approve_Irregularity_cmbSelPledge(Pledgeno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Approve_Irregularity_cmbSelPledgeAsync(string Pledgeno) {
            return base.Channel.Approve_Irregularity_cmbSelPledgeAsync(Pledgeno);
        }
        
        public System.Data.DataSet Update_Irregularity_cmbPledge(string Pledgeno, int flg) {
            return base.Channel.Update_Irregularity_cmbPledge(Pledgeno, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Update_Irregularity_cmbPledgeAsync(string Pledgeno, int flg) {
            return base.Channel.Update_Irregularity_cmbPledgeAsync(Pledgeno, flg);
        }
        
        public System.Data.DataSet ReturnTo_Branch1(int BranchId) {
            return base.Channel.ReturnTo_Branch1(BranchId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReturnTo_Branch1Async(int BranchId) {
            return base.Channel.ReturnTo_Branch1Async(BranchId);
        }
        
        public System.Data.DataSet ReturnTo_Branch_cmbBranch(int BranchId, int RetBranch) {
            return base.Channel.ReturnTo_Branch_cmbBranch(BranchId, RetBranch);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReturnTo_Branch_cmbBranchAsync(int BranchId, int RetBranch) {
            return base.Channel.ReturnTo_Branch_cmbBranchAsync(BranchId, RetBranch);
        }
        
        public System.Data.DataSet ReturnTo_Branch_cmbPledge(string PledgeNo) {
            return base.Channel.ReturnTo_Branch_cmbPledge(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReturnTo_Branch_cmbPledgeAsync(string PledgeNo) {
            return base.Channel.ReturnTo_Branch_cmbPledgeAsync(PledgeNo);
        }
        
        public System.Data.DataSet Receive_ReturnedPledge(int BranchId) {
            return base.Channel.Receive_ReturnedPledge(BranchId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Receive_ReturnedPledgeAsync(int BranchId) {
            return base.Channel.Receive_ReturnedPledgeAsync(BranchId);
        }
        
        public System.Data.DataSet Receive_ReturnedPledge_cmbPledge(int BranchId, int ReturnId) {
            return base.Channel.Receive_ReturnedPledge_cmbPledge(BranchId, ReturnId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Receive_ReturnedPledge_cmbPledgeAsync(int BranchId, int ReturnId) {
            return base.Channel.Receive_ReturnedPledge_cmbPledgeAsync(BranchId, ReturnId);
        }
        
        public System.Data.DataSet Returned_To_Branch_Report(int BranchID) {
            return base.Channel.Returned_To_Branch_Report(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Returned_To_Branch_ReportAsync(int BranchID) {
            return base.Channel.Returned_To_Branch_ReportAsync(BranchID);
        }
        
        public System.Data.DataSet Returned_To_Branch_Report_CrystalReport(int BranchID, int flg) {
            return base.Channel.Returned_To_Branch_Report_CrystalReport(BranchID, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Returned_To_Branch_Report_CrystalReportAsync(int BranchID, int flg) {
            return base.Channel.Returned_To_Branch_Report_CrystalReportAsync(BranchID, flg);
        }
        
        public System.Data.DataSet Approve_Auction_Schedule_cmbAucDate(int BranchId, string AucDate) {
            return base.Channel.Approve_Auction_Schedule_cmbAucDate(BranchId, AucDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Approve_Auction_Schedule_cmbAucDateAsync(int BranchId, string AucDate) {
            return base.Channel.Approve_Auction_Schedule_cmbAucDateAsync(BranchId, AucDate);
        }
        
        public System.Data.DataSet Auctiontranspledge1(int BranchId) {
            return base.Channel.Auctiontranspledge1(BranchId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Auctiontranspledge1Async(int BranchId) {
            return base.Channel.Auctiontranspledge1Async(BranchId);
        }
        
        public System.Data.DataSet ibgtvformreport1(int HandoverUser) {
            return base.Channel.ibgtvformreport1(HandoverUser);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ibgtvformreport1Async(int HandoverUser) {
            return base.Channel.ibgtvformreport1Async(HandoverUser);
        }
        
        public System.Data.DataSet ibgtvformreport2(int CarryUser) {
            return base.Channel.ibgtvformreport2(CarryUser);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ibgtvformreport2Async(int CarryUser) {
            return base.Channel.ibgtvformreport2Async(CarryUser);
        }
        
        public System.Data.DataSet ibgtvformreport3(int TransferId) {
            return base.Channel.ibgtvformreport3(TransferId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ibgtvformreport3Async(int TransferId) {
            return base.Channel.ibgtvformreport3Async(TransferId);
        }
        
        public System.Data.DataSet ibgtvformreport4(int TransferId) {
            return base.Channel.ibgtvformreport4(TransferId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ibgtvformreport4Async(int TransferId) {
            return base.Channel.ibgtvformreport4Async(TransferId);
        }
        
        public System.Data.DataSet ibgtvformreport5(int IBGTVNo) {
            return base.Channel.ibgtvformreport5(IBGTVNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ibgtvformreport5Async(int IBGTVNo) {
            return base.Channel.ibgtvformreport5Async(IBGTVNo);
        }
        
        public System.Data.DataSet teamuploaddoc() {
            return base.Channel.teamuploaddoc();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> teamuploaddocAsync() {
            return base.Channel.teamuploaddocAsync();
        }
        
        public System.Data.DataSet AucitonTfr_Schedule_Report(int LogBranchId, int flag) {
            return base.Channel.AucitonTfr_Schedule_Report(LogBranchId, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucitonTfr_Schedule_ReportAsync(int LogBranchId, int flag) {
            return base.Channel.AucitonTfr_Schedule_ReportAsync(LogBranchId, flag);
        }
        
        public System.Data.DataSet AucitonTfr_Schedule_Report_cmbAuctCentre(int AuctCentre) {
            return base.Channel.AucitonTfr_Schedule_Report_cmbAuctCentre(AuctCentre);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucitonTfr_Schedule_Report_cmbAuctCentreAsync(int AuctCentre) {
            return base.Channel.AucitonTfr_Schedule_Report_cmbAuctCentreAsync(AuctCentre);
        }
        
        public System.Data.DataSet AucitonTfr_Schedule_Report_cmbTfrDate(int auccenter, int LogBranchId, string tfr_date, int flag) {
            return base.Channel.AucitonTfr_Schedule_Report_cmbTfrDate(auccenter, LogBranchId, tfr_date, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucitonTfr_Schedule_Report_cmbTfrDateAsync(int auccenter, int LogBranchId, string tfr_date, int flag) {
            return base.Channel.AucitonTfr_Schedule_Report_cmbTfrDateAsync(auccenter, LogBranchId, tfr_date, flag);
        }
        
        public System.Data.DataSet AucitonTfr_Schedule_Report_cmbBranch(int auccenter, int LogBranchId, int flag) {
            return base.Channel.AucitonTfr_Schedule_Report_cmbBranch(auccenter, LogBranchId, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucitonTfr_Schedule_Report_cmbBranchAsync(int auccenter, int LogBranchId, int flag) {
            return base.Channel.AucitonTfr_Schedule_Report_cmbBranchAsync(auccenter, LogBranchId, flag);
        }
        
        public System.Data.DataSet Cancel_Schedule() {
            return base.Channel.Cancel_Schedule();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Cancel_ScheduleAsync() {
            return base.Channel.Cancel_ScheduleAsync();
        }
        
        public System.Data.DataSet Cancel_Schedule_cmbAuctCenter(int AuctionCtr) {
            return base.Channel.Cancel_Schedule_cmbAuctCenter(AuctionCtr);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Cancel_Schedule_cmbAuctCenterAsync(int AuctionCtr) {
            return base.Channel.Cancel_Schedule_cmbAuctCenterAsync(AuctionCtr);
        }
        
        public System.Data.DataSet Cancel_Schedule_cmbBranch(int AuctionCtr, int Branch) {
            return base.Channel.Cancel_Schedule_cmbBranch(AuctionCtr, Branch);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Cancel_Schedule_cmbBranchAsync(int AuctionCtr, int Branch) {
            return base.Channel.Cancel_Schedule_cmbBranchAsync(AuctionCtr, Branch);
        }
        
        public System.Data.DataSet Cancel_Schedule_cmbSchedule(int ScheduleId, int flag) {
            return base.Channel.Cancel_Schedule_cmbSchedule(ScheduleId, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Cancel_Schedule_cmbScheduleAsync(int ScheduleId, int flag) {
            return base.Channel.Cancel_Schedule_cmbScheduleAsync(ScheduleId, flag);
        }
        
        public System.Data.DataSet Postpone_Schedule_Transfer() {
            return base.Channel.Postpone_Schedule_Transfer();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Postpone_Schedule_TransferAsync() {
            return base.Channel.Postpone_Schedule_TransferAsync();
        }
        
        public System.Data.DataSet Postpone_Schedule_Transfer_cmbSchedule(int ScheduleId, int flag) {
            return base.Channel.Postpone_Schedule_Transfer_cmbSchedule(ScheduleId, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Postpone_Schedule_Transfer_cmbScheduleAsync(int ScheduleId, int flag) {
            return base.Channel.Postpone_Schedule_Transfer_cmbScheduleAsync(ScheduleId, flag);
        }
        
        public System.Data.DataSet Schedule_Auction_Transfer() {
            return base.Channel.Schedule_Auction_Transfer();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Schedule_Auction_TransferAsync() {
            return base.Channel.Schedule_Auction_TransferAsync();
        }
        
        public System.Data.DataSet Schedule_Auction_Transfer_cmbAuctCenter(int AuctionCtr) {
            return base.Channel.Schedule_Auction_Transfer_cmbAuctCenter(AuctionCtr);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Schedule_Auction_Transfer_cmbAuctCenterAsync(int AuctionCtr) {
            return base.Channel.Schedule_Auction_Transfer_cmbAuctCenterAsync(AuctionCtr);
        }
        
        public System.Data.DataSet Schedule_Auction_Transfer_cmbAuctCenter_cmbScheduleDt(int AuctCentre, int ScheduleBranch, string AucDate, int ScheduleId, int flag) {
            return base.Channel.Schedule_Auction_Transfer_cmbAuctCenter_cmbScheduleDt(AuctCentre, ScheduleBranch, AucDate, ScheduleId, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Schedule_Auction_Transfer_cmbAuctCenter_cmbScheduleDtAsync(int AuctCentre, int ScheduleBranch, string AucDate, int ScheduleId, int flag) {
            return base.Channel.Schedule_Auction_Transfer_cmbAuctCenter_cmbScheduleDtAsync(AuctCentre, ScheduleBranch, AucDate, ScheduleId, flag);
        }
        
        public System.Data.DataSet Schedule_Date_Confirmation_cmbAuctCenter(int AuctCenter, int Branch, int flag) {
            return base.Channel.Schedule_Date_Confirmation_cmbAuctCenter(AuctCenter, Branch, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Schedule_Date_Confirmation_cmbAuctCenterAsync(int AuctCenter, int Branch, int flag) {
            return base.Channel.Schedule_Date_Confirmation_cmbAuctCenterAsync(AuctCenter, Branch, flag);
        }
        
        public System.Data.DataSet Schedule_Report(int Branch, int Status, string TransferDate, int AuctionCenter, int flag) {
            return base.Channel.Schedule_Report(Branch, Status, TransferDate, AuctionCenter, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Schedule_ReportAsync(int Branch, int Status, string TransferDate, int AuctionCenter, int flag) {
            return base.Channel.Schedule_ReportAsync(Branch, Status, TransferDate, AuctionCenter, flag);
        }
        
        public System.Data.DataSet Schedule_Emp_Confirm(int UserId, int BranchId, int AreaId, int flag) {
            return base.Channel.Schedule_Emp_Confirm(UserId, BranchId, AreaId, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Schedule_Emp_ConfirmAsync(int UserId, int BranchId, int AreaId, int flag) {
            return base.Channel.Schedule_Emp_ConfirmAsync(UserId, BranchId, AreaId, flag);
        }
        
        public System.Data.DataSet sur_branch1(int BranchId) {
            return base.Channel.sur_branch1(BranchId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> sur_branch1Async(int BranchId) {
            return base.Channel.sur_branch1Async(BranchId);
        }
        
        public System.Data.DataSet sur_branch2(int Payid) {
            return base.Channel.sur_branch2(Payid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> sur_branch2Async(int Payid) {
            return base.Channel.sur_branch2Async(Payid);
        }
        
        public System.Data.DataSet sur_branch3(string custid) {
            return base.Channel.sur_branch3(custid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> sur_branch3Async(string custid) {
            return base.Channel.sur_branch3Async(custid);
        }
        
        public System.Data.DataSet Upload_AUC1(string Plno) {
            return base.Channel.Upload_AUC1(Plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Upload_AUC1Async(string Plno) {
            return base.Channel.Upload_AUC1Async(Plno);
        }
        
        public System.Data.DataSet Upload_AUC2(string PledgeNo, string UserId) {
            return base.Channel.Upload_AUC2(PledgeNo, UserId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Upload_AUC2Async(string PledgeNo, string UserId) {
            return base.Channel.Upload_AUC2Async(PledgeNo, UserId);
        }
        
        public System.Data.DataSet Upload_AUC3(string Plno) {
            return base.Channel.Upload_AUC3(Plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Upload_AUC3Async(string Plno) {
            return base.Channel.Upload_AUC3Async(Plno);
        }
        
        public System.Data.DataSet Upload_AUC4(string AucDate, int BranchID) {
            return base.Channel.Upload_AUC4(AucDate, BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Upload_AUC4Async(string AucDate, int BranchID) {
            return base.Channel.Upload_AUC4Async(AucDate, BranchID);
        }
        
        public System.Data.DataSet Upload_AUC5(int BranchID) {
            return base.Channel.Upload_AUC5(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Upload_AUC5Async(int BranchID) {
            return base.Channel.Upload_AUC5Async(BranchID);
        }
        
        public System.Data.DataSet Invoice_Print_Form(int BrId, int flag) {
            return base.Channel.Invoice_Print_Form(BrId, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Invoice_Print_FormAsync(int BrId, int flag) {
            return base.Channel.Invoice_Print_FormAsync(BrId, flag);
        }
        
        public System.Data.DataSet DeferApproveAuctionCentre(int RequestId) {
            return base.Channel.DeferApproveAuctionCentre(RequestId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveAuctionCentreAsync(int RequestId) {
            return base.Channel.DeferApproveAuctionCentreAsync(RequestId);
        }
        
        public System.Data.DataSet DeferApproveAuctionCentre1(int BranchId) {
            return base.Channel.DeferApproveAuctionCentre1(BranchId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveAuctionCentre1Async(int BranchId) {
            return base.Channel.DeferApproveAuctionCentre1Async(BranchId);
        }
        
        public System.Data.DataSet DeferApproveLive(string sl_number) {
            return base.Channel.DeferApproveLive(sl_number);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLiveAsync(string sl_number) {
            return base.Channel.DeferApproveLiveAsync(sl_number);
        }
        
        public System.Data.DataSet DeferApproveLive1(string pledgeno) {
            return base.Channel.DeferApproveLive1(pledgeno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive1Async(string pledgeno) {
            return base.Channel.DeferApproveLive1Async(pledgeno);
        }
        
        public System.Data.DataSet DeferApproveLive2() {
            return base.Channel.DeferApproveLive2();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive2Async() {
            return base.Channel.DeferApproveLive2Async();
        }
        
        public System.Data.DataSet DeferApproveLive3(int cmbdtl) {
            return base.Channel.DeferApproveLive3(cmbdtl);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive3Async(int cmbdtl) {
            return base.Channel.DeferApproveLive3Async(cmbdtl);
        }
        
        public System.Data.DataSet DeferApproveLive4(string cmbdtl, string RequestId) {
            return base.Channel.DeferApproveLive4(cmbdtl, RequestId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive4Async(string cmbdtl, string RequestId) {
            return base.Channel.DeferApproveLive4Async(cmbdtl, RequestId);
        }
        
        public System.Data.DataSet DeferApproveLive5() {
            return base.Channel.DeferApproveLive5();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive5Async() {
            return base.Channel.DeferApproveLive5Async();
        }
        
        public System.Data.DataSet DeferApproveLive6() {
            return base.Channel.DeferApproveLive6();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive6Async() {
            return base.Channel.DeferApproveLive6Async();
        }
        
        public System.Data.DataSet DeferApproveLive7(string cmbdtl, int flg) {
            return base.Channel.DeferApproveLive7(cmbdtl, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive7Async(string cmbdtl, int flg) {
            return base.Channel.DeferApproveLive7Async(cmbdtl, flg);
        }
        
        public System.Data.DataSet DeferApproveLive8() {
            return base.Channel.DeferApproveLive8();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveLive8Async() {
            return base.Channel.DeferApproveLive8Async();
        }
        
        public System.Data.DataSet DeferApproveRH() {
            return base.Channel.DeferApproveRH();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveRHAsync() {
            return base.Channel.DeferApproveRHAsync();
        }
        
        public System.Data.DataSet DeferApproveRH1(int BranchId) {
            return base.Channel.DeferApproveRH1(BranchId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveRH1Async(int BranchId) {
            return base.Channel.DeferApproveRH1Async(BranchId);
        }
        
        public System.Data.DataSet DeferApproveRH7() {
            return base.Channel.DeferApproveRH7();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferApproveRH7Async() {
            return base.Channel.DeferApproveRH7Async();
        }
        
        public System.Data.DataSet DeferRequestBR(int BranchId, string PledgeNo, int flg) {
            return base.Channel.DeferRequestBR(BranchId, PledgeNo, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBRAsync(int BranchId, string PledgeNo, int flg) {
            return base.Channel.DeferRequestBRAsync(BranchId, PledgeNo, flg);
        }
        
        public System.Data.DataSet DeferRequestBR1() {
            return base.Channel.DeferRequestBR1();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBR1Async() {
            return base.Channel.DeferRequestBR1Async();
        }
        
        public System.Data.DataSet DeferRequestBR2(string plno, int status_id) {
            return base.Channel.DeferRequestBR2(plno, status_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBR2Async(string plno, int status_id) {
            return base.Channel.DeferRequestBR2Async(plno, status_id);
        }
        
        public System.Data.DataSet DeferRequestBR3(string plno) {
            return base.Channel.DeferRequestBR3(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBR3Async(string plno) {
            return base.Channel.DeferRequestBR3Async(plno);
        }
        
        public System.Data.DataSet DeferRequestBR4(int fg) {
            return base.Channel.DeferRequestBR4(fg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBR4Async(int fg) {
            return base.Channel.DeferRequestBR4Async(fg);
        }
        
        public System.Data.DataSet DeferRequestBRLive(int BranchId, string PledgeNo, int flg) {
            return base.Channel.DeferRequestBRLive(BranchId, PledgeNo, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBRLiveAsync(int BranchId, string PledgeNo, int flg) {
            return base.Channel.DeferRequestBRLiveAsync(BranchId, PledgeNo, flg);
        }
        
        public System.Data.DataSet DeferRequestBRLive1() {
            return base.Channel.DeferRequestBRLive1();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferRequestBRLive1Async() {
            return base.Channel.DeferRequestBRLive1Async();
        }
        
        public System.Data.DataSet DeferReport() {
            return base.Channel.DeferReport();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferReportAsync() {
            return base.Channel.DeferReportAsync();
        }
        
        public System.Data.DataSet DeferReportView(int status) {
            return base.Channel.DeferReportView(status);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferReportViewAsync(int status) {
            return base.Channel.DeferReportViewAsync(status);
        }
        
        public System.Data.DataSet DeferReportView1(int status) {
            return base.Channel.DeferReportView1(status);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferReportView1Async(int status) {
            return base.Channel.DeferReportView1Async(status);
        }
        
        public System.Data.DataSet DeferReportView2(int status, int BranchId) {
            return base.Channel.DeferReportView2(status, BranchId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferReportView2Async(int status, int BranchId) {
            return base.Channel.DeferReportView2Async(status, BranchId);
        }
        
        public System.Data.DataSet DeferReportView3(int status, int BranchId) {
            return base.Channel.DeferReportView3(status, BranchId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeferReportView3Async(int status, int BranchId) {
            return base.Channel.DeferReportView3Async(status, BranchId);
        }
        
        public System.Data.DataSet BidConfirmation_cmbLot(int LotId) {
            return base.Channel.BidConfirmation_cmbLot(LotId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BidConfirmation_cmbLotAsync(int LotId) {
            return base.Channel.BidConfirmation_cmbLotAsync(LotId);
        }
        
        public System.Data.DataSet BidConfirmationLetter(int LotId) {
            return base.Channel.BidConfirmationLetter(LotId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BidConfirmationLetterAsync(int LotId) {
            return base.Channel.BidConfirmationLetterAsync(LotId);
        }
        
        public System.Data.DataSet LotCreation(int BranchID, int LotGoldType, int AuctionCenter, int Docstatus, string LettStatus) {
            return base.Channel.LotCreation(BranchID, LotGoldType, AuctionCenter, Docstatus, LettStatus);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LotCreationAsync(int BranchID, int LotGoldType, int AuctionCenter, int Docstatus, string LettStatus) {
            return base.Channel.LotCreationAsync(BranchID, LotGoldType, AuctionCenter, Docstatus, LettStatus);
        }
        
        public System.Data.DataSet LotCreation_BranchID(int BranchID) {
            return base.Channel.LotCreation_BranchID(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LotCreation_BranchIDAsync(int BranchID) {
            return base.Channel.LotCreation_BranchIDAsync(BranchID);
        }
        
        public System.Data.DataSet Realization_DisplayValues(int Lot, int flag) {
            return base.Channel.Realization_DisplayValues(Lot, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Realization_DisplayValuesAsync(int Lot, int flag) {
            return base.Channel.Realization_DisplayValuesAsync(Lot, flag);
        }
        
        public System.Data.DataSet surplus_cash_rpt(int BranchID) {
            return base.Channel.surplus_cash_rpt(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> surplus_cash_rptAsync(int BranchID) {
            return base.Channel.surplus_cash_rptAsync(BranchID);
        }
        
        public System.Data.DataSet surplus_cus_cpy(int BranchID) {
            return base.Channel.surplus_cus_cpy(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> surplus_cus_cpyAsync(int BranchID) {
            return base.Channel.surplus_cus_cpyAsync(BranchID);
        }
        
        public System.Data.DataSet surplus_cus_cpy1(int slno) {
            return base.Channel.surplus_cus_cpy1(slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> surplus_cus_cpy1Async(int slno) {
            return base.Channel.surplus_cus_cpy1Async(slno);
        }
        
        public System.Data.DataSet voucher(int Branch, int TransId) {
            return base.Channel.voucher(Branch, TransId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> voucherAsync(int Branch, int TransId) {
            return base.Channel.voucherAsync(Branch, TransId);
        }
        
        public System.Data.DataSet voucher1(int Branch, int TransId) {
            return base.Channel.voucher1(Branch, TransId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> voucher1Async(int Branch, int TransId) {
            return base.Channel.voucher1Async(Branch, TransId);
        }
        
        public System.Data.DataSet LotLoad(int flag) {
            return base.Channel.LotLoad(flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LotLoadAsync(int flag) {
            return base.Channel.LotLoadAsync(flag);
        }
        
        public System.Data.DataSet BidCViewer(int LotId) {
            return base.Channel.BidCViewer(LotId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BidCViewerAsync(int LotId) {
            return base.Channel.BidCViewerAsync(LotId);
        }
        
        public System.Data.DataSet DocClassification_cmbPledge(int BranchId, int flag) {
            return base.Channel.DocClassification_cmbPledge(BranchId, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DocClassification_cmbPledgeAsync(int BranchId, int flag) {
            return base.Channel.DocClassification_cmbPledgeAsync(BranchId, flag);
        }
        
        public int check_letter_upload_count(string gendt, string plno, int lett_tp) {
            return base.Channel.check_letter_upload_count(gendt, plno, lett_tp);
        }
        
        public System.Threading.Tasks.Task<int> check_letter_upload_countAsync(string gendt, string plno, int lett_tp) {
            return base.Channel.check_letter_upload_countAsync(gendt, plno, lett_tp);
        }
        
        public int check_auc_letter_count(string plno, int lett_tp) {
            return base.Channel.check_auc_letter_count(plno, lett_tp);
        }
        
        public System.Threading.Tasks.Task<int> check_auc_letter_countAsync(string plno, int lett_tp) {
            return base.Channel.check_auc_letter_countAsync(plno, lett_tp);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.Upload_auc_letterResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.Upload_auc_letter(NewAuctionLetter.GL_AUCTION.Upload_auc_letterRequest request) {
            return base.Channel.Upload_auc_letter(request);
        }
        
        public string Upload_auc_letter(string plno, string gener_dt, byte[] Doc, int UserId, int lett_tp, int sts, string resn, string flno, string bxno, string extn) {
            NewAuctionLetter.GL_AUCTION.Upload_auc_letterRequest inValue = new NewAuctionLetter.GL_AUCTION.Upload_auc_letterRequest();
            inValue.plno = plno;
            inValue.gener_dt = gener_dt;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            inValue.lett_tp = lett_tp;
            inValue.sts = sts;
            inValue.resn = resn;
            inValue.flno = flno;
            inValue.bxno = bxno;
            inValue.extn = extn;
            NewAuctionLetter.GL_AUCTION.Upload_auc_letterResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).Upload_auc_letter(inValue);
            return retVal.Upload_auc_letterResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Upload_auc_letterResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.Upload_auc_letterAsync(NewAuctionLetter.GL_AUCTION.Upload_auc_letterRequest request) {
            return base.Channel.Upload_auc_letterAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Upload_auc_letterResponse> Upload_auc_letterAsync(string plno, string gener_dt, byte[] Doc, int UserId, int lett_tp, int sts, string resn, string flno, string bxno, string extn) {
            NewAuctionLetter.GL_AUCTION.Upload_auc_letterRequest inValue = new NewAuctionLetter.GL_AUCTION.Upload_auc_letterRequest();
            inValue.plno = plno;
            inValue.gener_dt = gener_dt;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            inValue.lett_tp = lett_tp;
            inValue.sts = sts;
            inValue.resn = resn;
            inValue.flno = flno;
            inValue.bxno = bxno;
            inValue.extn = extn;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).Upload_auc_letterAsync(inValue);
        }
        
        public System.Data.DataSet get_letter_gen_date(string plno, int lt_tp) {
            return base.Channel.get_letter_gen_date(plno, lt_tp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_letter_gen_dateAsync(string plno, int lt_tp) {
            return base.Channel.get_letter_gen_dateAsync(plno, lt_tp);
        }
        
        public System.Data.DataSet get_letstatus_rlno(string plno, string gendt) {
            return base.Channel.get_letstatus_rlno(plno, gendt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_letstatus_rlnoAsync(string plno, string gendt) {
            return base.Channel.get_letstatus_rlnoAsync(plno, gendt);
        }
        
        public System.Data.DataSet get_let_ad_image(string plno, string gendt) {
            return base.Channel.get_let_ad_image(plno, gendt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_let_ad_imageAsync(string plno, string gendt) {
            return base.Channel.get_let_ad_imageAsync(plno, gendt);
        }
        
        public System.Data.DataSet get_slno(string plno, string gendt) {
            return base.Channel.get_slno(plno, gendt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_slnoAsync(string plno, string gendt) {
            return base.Channel.get_slnoAsync(plno, gendt);
        }
        
        public System.Data.DataSet get_old_letter_senddt(string plno, int lt_tp) {
            return base.Channel.get_old_letter_senddt(plno, lt_tp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_old_letter_senddtAsync(string plno, int lt_tp) {
            return base.Channel.get_old_letter_senddtAsync(plno, lt_tp);
        }
        
        public System.Data.DataSet get_old_letstatus_rlno(string plno, string senddt) {
            return base.Channel.get_old_letstatus_rlno(plno, senddt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_old_letstatus_rlnoAsync(string plno, string senddt) {
            return base.Channel.get_old_letstatus_rlnoAsync(plno, senddt);
        }
        
        public System.Data.DataSet get_bulk_lett_status(string plno) {
            return base.Channel.get_bulk_lett_status(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_bulk_lett_statusAsync(string plno) {
            return base.Channel.get_bulk_lett_statusAsync(plno);
        }
        
        public System.Data.DataSet get_bulk_image(string plno) {
            return base.Channel.get_bulk_image(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_bulk_imageAsync(string plno) {
            return base.Channel.get_bulk_imageAsync(plno);
        }
        
        public System.Data.DataSet get_pledge_data(string plno) {
            return base.Channel.get_pledge_data(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_pledge_dataAsync(string plno) {
            return base.Channel.get_pledge_dataAsync(plno);
        }
        
        public System.Data.DataSet Letter_generated_data(string language, int lt_type, string plno, string gendt, int flag) {
            return base.Channel.Letter_generated_data(language, lt_type, plno, gendt, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Letter_generated_dataAsync(string language, int lt_type, string plno, string gendt, int flag) {
            return base.Channel.Letter_generated_dataAsync(language, lt_type, plno, gendt, flag);
        }
        
        public System.Data.DataSet get_post_letter_gen_dt_lang(string plno, int flg, string gendt) {
            return base.Channel.get_post_letter_gen_dt_lang(plno, flg, gendt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_post_letter_gen_dt_langAsync(string plno, int flg, string gendt) {
            return base.Channel.get_post_letter_gen_dt_langAsync(plno, flg, gendt);
        }
        
        public System.Data.DataSet get_sale_report(string fdt, string tdt, int mflag) {
            return base.Channel.get_sale_report(fdt, tdt, mflag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_sale_reportAsync(string fdt, string tdt, int mflag) {
            return base.Channel.get_sale_reportAsync(fdt, tdt, mflag);
        }
        
        public System.Data.DataSet get_sale_pledge_report(int LOTID) {
            return base.Channel.get_sale_pledge_report(LOTID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_sale_pledge_reportAsync(int LOTID) {
            return base.Channel.get_sale_pledge_reportAsync(LOTID);
        }
        
        public System.Data.DataSet get_spur_letter_rlno(string plno, string lett_tp) {
            return base.Channel.get_spur_letter_rlno(plno, lett_tp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_rlnoAsync(string plno, string lett_tp) {
            return base.Channel.get_spur_letter_rlnoAsync(plno, lett_tp);
        }
        
        public System.Data.DataSet get_spur_letter_pledge_data(string lang, string plno, string lt_tp) {
            return base.Channel.get_spur_letter_pledge_data(lang, plno, lt_tp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_pledge_dataAsync(string lang, string plno, string lt_tp) {
            return base.Channel.get_spur_letter_pledge_dataAsync(lang, plno, lt_tp);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.Upload_spurious_letterResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.Upload_spurious_letter(NewAuctionLetter.GL_AUCTION.Upload_spurious_letterRequest request) {
            return base.Channel.Upload_spurious_letter(request);
        }
        
        public string Upload_spurious_letter(string plno, string gener_dt, byte[] Doc, int UserId, string lett_tp, int sts) {
            NewAuctionLetter.GL_AUCTION.Upload_spurious_letterRequest inValue = new NewAuctionLetter.GL_AUCTION.Upload_spurious_letterRequest();
            inValue.plno = plno;
            inValue.gener_dt = gener_dt;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            inValue.lett_tp = lett_tp;
            inValue.sts = sts;
            NewAuctionLetter.GL_AUCTION.Upload_spurious_letterResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).Upload_spurious_letter(inValue);
            return retVal.Upload_spurious_letterResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Upload_spurious_letterResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.Upload_spurious_letterAsync(NewAuctionLetter.GL_AUCTION.Upload_spurious_letterRequest request) {
            return base.Channel.Upload_spurious_letterAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Upload_spurious_letterResponse> Upload_spurious_letterAsync(string plno, string gener_dt, byte[] Doc, int UserId, string lett_tp, int sts) {
            NewAuctionLetter.GL_AUCTION.Upload_spurious_letterRequest inValue = new NewAuctionLetter.GL_AUCTION.Upload_spurious_letterRequest();
            inValue.plno = plno;
            inValue.gener_dt = gener_dt;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            inValue.lett_tp = lett_tp;
            inValue.sts = sts;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).Upload_spurious_letterAsync(inValue);
        }
        
        public System.Data.DataSet get_spur_letter_type() {
            return base.Channel.get_spur_letter_type();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_typeAsync() {
            return base.Channel.get_spur_letter_typeAsync();
        }
        
        public System.Data.DataSet get_spur_letter_date(string plno, string lt_tp) {
            return base.Channel.get_spur_letter_date(plno, lt_tp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_dateAsync(string plno, string lt_tp) {
            return base.Channel.get_spur_letter_dateAsync(plno, lt_tp);
        }
        
        public System.Data.DataSet get_upload_cnt(string plno, string lt_tp, string gener_dt) {
            return base.Channel.get_upload_cnt(plno, lt_tp, gener_dt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_upload_cntAsync(string plno, string lt_tp, string gener_dt) {
            return base.Channel.get_upload_cntAsync(plno, lt_tp, gener_dt);
        }
        
        public System.Data.DataSet get_letter_images(string lng, string lt_tp) {
            return base.Channel.get_letter_images(lng, lt_tp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_letter_imagesAsync(string lng, string lt_tp) {
            return base.Channel.get_letter_imagesAsync(lng, lt_tp);
        }
        
        public string Confirm_spuriousLetter_print(string Letter_type, string language, string generate_dt) {
            return base.Channel.Confirm_spuriousLetter_print(Letter_type, language, generate_dt);
        }
        
        public System.Threading.Tasks.Task<string> Confirm_spuriousLetter_printAsync(string Letter_type, string language, string generate_dt) {
            return base.Channel.Confirm_spuriousLetter_printAsync(Letter_type, language, generate_dt);
        }
        
        public System.Data.DataSet get_spur_letter_languages(string generate_dt, string lt_tp) {
            return base.Channel.get_spur_letter_languages(generate_dt, lt_tp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_languagesAsync(string generate_dt, string lt_tp) {
            return base.Channel.get_spur_letter_languagesAsync(generate_dt, lt_tp);
        }
        
        public System.Data.DataSet get_spur_letter_count(string generate_dt, string lt_tp) {
            return base.Channel.get_spur_letter_count(generate_dt, lt_tp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_countAsync(string generate_dt, string lt_tp) {
            return base.Channel.get_spur_letter_countAsync(generate_dt, lt_tp);
        }
        
        public System.Data.DataSet get_spur_letter_status() {
            return base.Channel.get_spur_letter_status();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_statusAsync() {
            return base.Channel.get_spur_letter_statusAsync();
        }
        
        public System.Data.DataSet get_spur_letter_languages_rpt(string generate_dt, string lt_tp) {
            return base.Channel.get_spur_letter_languages_rpt(generate_dt, lt_tp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_languages_rptAsync(string generate_dt, string lt_tp) {
            return base.Channel.get_spur_letter_languages_rptAsync(generate_dt, lt_tp);
        }
        
        public System.Data.DataSet get_spur_letter_count_rpt(string lang, string generate_dt, string lt_tp) {
            return base.Channel.get_spur_letter_count_rpt(lang, generate_dt, lt_tp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_count_rptAsync(string lang, string generate_dt, string lt_tp) {
            return base.Channel.get_spur_letter_count_rptAsync(lang, generate_dt, lt_tp);
        }
        
        public System.Data.DataSet get_spur_letter_data(string lang, string generate_dt, string lt_tp) {
            return base.Channel.get_spur_letter_data(lang, generate_dt, lt_tp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_dataAsync(string lang, string generate_dt, string lt_tp) {
            return base.Channel.get_spur_letter_dataAsync(lang, generate_dt, lt_tp);
        }
        
        public System.Data.DataSet get_spur_letter_rpt(string lang, string generate_dt, string lt_tp) {
            return base.Channel.get_spur_letter_rpt(lang, generate_dt, lt_tp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_spur_letter_rptAsync(string lang, string generate_dt, string lt_tp) {
            return base.Channel.get_spur_letter_rptAsync(lang, generate_dt, lt_tp);
        }
        
        public System.Data.DataSet get_adcard_rpt(string lang, string gen_dt, string lett_tp, int from_num, int to_num) {
            return base.Channel.get_adcard_rpt(lang, gen_dt, lett_tp, from_num, to_num);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_adcard_rptAsync(string lang, string gen_dt, string lett_tp, int from_num, int to_num) {
            return base.Channel.get_adcard_rptAsync(lang, gen_dt, lett_tp, from_num, to_num);
        }
        
        public System.Data.DataSet get_default() {
            return base.Channel.get_default();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_defaultAsync() {
            return base.Channel.get_defaultAsync();
        }
        
        public string login_check_VAPT(int userid, string passwd, int brid) {
            return base.Channel.login_check_VAPT(userid, passwd, brid);
        }
        
        public System.Threading.Tasks.Task<string> login_check_VAPTAsync(int userid, string passwd, int brid) {
            return base.Channel.login_check_VAPTAsync(userid, passwd, brid);
        }
        
        public int InsertionToDb(string Plno, string let_status, string file_no, int emp_id, string box_no, string pldt, string extn) {
            return base.Channel.InsertionToDb(Plno, let_status, file_no, emp_id, box_no, pldt, extn);
        }
        
        public System.Threading.Tasks.Task<int> InsertionToDbAsync(string Plno, string let_status, string file_no, int emp_id, string box_no, string pldt, string extn) {
            return base.Channel.InsertionToDbAsync(Plno, let_status, file_no, emp_id, box_no, pldt, extn);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.UpdateletterResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.Updateletter(NewAuctionLetter.GL_AUCTION.UpdateletterRequest request) {
            return base.Channel.Updateletter(request);
        }
        
        public string Updateletter(string plnoC, byte[] file, string pldt) {
            NewAuctionLetter.GL_AUCTION.UpdateletterRequest inValue = new NewAuctionLetter.GL_AUCTION.UpdateletterRequest();
            inValue.plnoC = plnoC;
            inValue.file = file;
            inValue.pldt = pldt;
            NewAuctionLetter.GL_AUCTION.UpdateletterResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).Updateletter(inValue);
            return retVal.UpdateletterResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UpdateletterResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.UpdateletterAsync(NewAuctionLetter.GL_AUCTION.UpdateletterRequest request) {
            return base.Channel.UpdateletterAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UpdateletterResponse> UpdateletterAsync(string plnoC, byte[] file, string pldt) {
            NewAuctionLetter.GL_AUCTION.UpdateletterRequest inValue = new NewAuctionLetter.GL_AUCTION.UpdateletterRequest();
            inValue.plnoC = plnoC;
            inValue.file = file;
            inValue.pldt = pldt;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).UpdateletterAsync(inValue);
        }
        
        public string insert_aucadv_image(string paperid, string paper_dt, string edtn) {
            return base.Channel.insert_aucadv_image(paperid, paper_dt, edtn);
        }
        
        public System.Threading.Tasks.Task<string> insert_aucadv_imageAsync(string paperid, string paper_dt, string edtn) {
            return base.Channel.insert_aucadv_imageAsync(paperid, paper_dt, edtn);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.update_aucadv_imageResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.update_aucadv_image(NewAuctionLetter.GL_AUCTION.update_aucadv_imageRequest request) {
            return base.Channel.update_aucadv_image(request);
        }
        
        public string update_aucadv_image(string paperid, string paper_dt, string edtn, byte[] file) {
            NewAuctionLetter.GL_AUCTION.update_aucadv_imageRequest inValue = new NewAuctionLetter.GL_AUCTION.update_aucadv_imageRequest();
            inValue.paperid = paperid;
            inValue.paper_dt = paper_dt;
            inValue.edtn = edtn;
            inValue.file = file;
            NewAuctionLetter.GL_AUCTION.update_aucadv_imageResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).update_aucadv_image(inValue);
            return retVal.update_aucadv_imageResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.update_aucadv_imageResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.update_aucadv_imageAsync(NewAuctionLetter.GL_AUCTION.update_aucadv_imageRequest request) {
            return base.Channel.update_aucadv_imageAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.update_aucadv_imageResponse> update_aucadv_imageAsync(string paperid, string paper_dt, string edtn, byte[] file) {
            NewAuctionLetter.GL_AUCTION.update_aucadv_imageRequest inValue = new NewAuctionLetter.GL_AUCTION.update_aucadv_imageRequest();
            inValue.paperid = paperid;
            inValue.paper_dt = paper_dt;
            inValue.edtn = edtn;
            inValue.file = file;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).update_aucadv_imageAsync(inValue);
        }
        
        public int Post_InsertionToDb(string cust_id, string let_status, string file_no, int emp_id, string box_no, string pldt, string extn) {
            return base.Channel.Post_InsertionToDb(cust_id, let_status, file_no, emp_id, box_no, pldt, extn);
        }
        
        public System.Threading.Tasks.Task<int> Post_InsertionToDbAsync(string cust_id, string let_status, string file_no, int emp_id, string box_no, string pldt, string extn) {
            return base.Channel.Post_InsertionToDbAsync(cust_id, let_status, file_no, emp_id, box_no, pldt, extn);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.Updateletter_postAuction(NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionRequest request) {
            return base.Channel.Updateletter_postAuction(request);
        }
        
        public string Updateletter_postAuction(string cust_id, byte[] file) {
            NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionRequest inValue = new NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionRequest();
            inValue.cust_id = cust_id;
            inValue.file = file;
            NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).Updateletter_postAuction(inValue);
            return retVal.Updateletter_postAuctionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.Updateletter_postAuctionAsync(NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionRequest request) {
            return base.Channel.Updateletter_postAuctionAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionResponse> Updateletter_postAuctionAsync(string cust_id, byte[] file) {
            NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionRequest inValue = new NewAuctionLetter.GL_AUCTION.Updateletter_postAuctionRequest();
            inValue.cust_id = cust_id;
            inValue.file = file;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).Updateletter_postAuctionAsync(inValue);
        }
        
        public int check_vendor_bal(string pledgedtls, int RowCount) {
            return base.Channel.check_vendor_bal(pledgedtls, RowCount);
        }
        
        public System.Threading.Tasks.Task<int> check_vendor_balAsync(string pledgedtls, int RowCount) {
            return base.Channel.check_vendor_balAsync(pledgedtls, RowCount);
        }
        
        public string get_branch_name(int branch_id) {
            return base.Channel.get_branch_name(branch_id);
        }
        
        public System.Threading.Tasks.Task<string> get_branch_nameAsync(int branch_id) {
            return base.Channel.get_branch_nameAsync(branch_id);
        }
        
        public string get_bidder_name(int bidder_id) {
            return base.Channel.get_bidder_name(bidder_id);
        }
        
        public System.Threading.Tasks.Task<string> get_bidder_nameAsync(int bidder_id) {
            return base.Channel.get_bidder_nameAsync(bidder_id);
        }
        
        public int Vendor_bal_check_confirm(int Branch_id, string Dtls, int BidID, double BidAmt, double Vendor_bal, string Auc_date, int rowcnt) {
            return base.Channel.Vendor_bal_check_confirm(Branch_id, Dtls, BidID, BidAmt, Vendor_bal, Auc_date, rowcnt);
        }
        
        public System.Threading.Tasks.Task<int> Vendor_bal_check_confirmAsync(int Branch_id, string Dtls, int BidID, double BidAmt, double Vendor_bal, string Auc_date, int rowcnt) {
            return base.Channel.Vendor_bal_check_confirmAsync(Branch_id, Dtls, BidID, BidAmt, Vendor_bal, Auc_date, rowcnt);
        }
        
        public System.Data.DataSet get_adv_publish_data(string plno) {
            return base.Channel.get_adv_publish_data(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_adv_publish_dataAsync(string plno) {
            return base.Channel.get_adv_publish_dataAsync(plno);
        }
        
        public System.Data.DataSet get_adv_publish_edition(string plno, string publishdt) {
            return base.Channel.get_adv_publish_edition(plno, publishdt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_adv_publish_editionAsync(string plno, string publishdt) {
            return base.Channel.get_adv_publish_editionAsync(plno, publishdt);
        }
        
        public System.Data.DataSet get_hotlist_dt(int Branchid) {
            return base.Channel.get_hotlist_dt(Branchid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_hotlist_dtAsync(int Branchid) {
            return base.Channel.get_hotlist_dtAsync(Branchid);
        }
        
        public System.Data.DataSet get_ToBranches(int Branchid) {
            return base.Channel.get_ToBranches(Branchid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_ToBranchesAsync(int Branchid) {
            return base.Channel.get_ToBranchesAsync(Branchid);
        }
        
        public int get_check_count(int Branchid) {
            return base.Channel.get_check_count(Branchid);
        }
        
        public System.Threading.Tasks.Task<int> get_check_countAsync(int Branchid) {
            return base.Channel.get_check_countAsync(Branchid);
        }
        
        public System.Data.DataSet get_pledggedtls(int Branchid, string aucdate) {
            return base.Channel.get_pledggedtls(Branchid, aucdate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_pledggedtlsAsync(int Branchid, string aucdate) {
            return base.Channel.get_pledggedtlsAsync(Branchid, aucdate);
        }
        
        public string Auc_stock_Transfer(string Aucdate, int branchid, int tobranch, int rmo, int rha, string Data) {
            return base.Channel.Auc_stock_Transfer(Aucdate, branchid, tobranch, rmo, rha, Data);
        }
        
        public System.Threading.Tasks.Task<string> Auc_stock_TransferAsync(string Aucdate, int branchid, int tobranch, int rmo, int rha, string Data) {
            return base.Channel.Auc_stock_TransferAsync(Aucdate, branchid, tobranch, rmo, rha, Data);
        }
        
        public System.Data.DataSet menupage1(int brid, int flg) {
            return base.Channel.menupage1(brid, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> menupage1Async(int brid, int flg) {
            return base.Channel.menupage1Async(brid, flg);
        }
        
        public System.Data.DataSet menupage2(string UserID, int BranchID) {
            return base.Channel.menupage2(UserID, BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> menupage2Async(string UserID, int BranchID) {
            return base.Channel.menupage2Async(UserID, BranchID);
        }
        
        public System.Data.DataSet verify_document1(int BranchID, int flg) {
            return base.Channel.verify_document1(BranchID, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> verify_document1Async(int BranchID, int flg) {
            return base.Channel.verify_document1Async(BranchID, flg);
        }
        
        public System.Data.DataSet verify_document2(string pledge_no, int flg) {
            return base.Channel.verify_document2(pledge_no, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> verify_document2Async(string pledge_no, int flg) {
            return base.Channel.verify_document2Async(pledge_no, flg);
        }
        
        public System.Data.DataSet updatetareweight1(string Barcode) {
            return base.Channel.updatetareweight1(Barcode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> updatetareweight1Async(string Barcode) {
            return base.Channel.updatetareweight1Async(Barcode);
        }
        
        public System.Data.DataSet updatetareweight2(string pledgeno, int ibgtn) {
            return base.Channel.updatetareweight2(pledgeno, ibgtn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> updatetareweight2Async(string pledgeno, int ibgtn) {
            return base.Channel.updatetareweight2Async(pledgeno, ibgtn);
        }
        
        public System.Data.DataSet classifypledge1(int BranchID) {
            return base.Channel.classifypledge1(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> classifypledge1Async(int BranchID) {
            return base.Channel.classifypledge1Async(BranchID);
        }
        
        public System.Data.DataSet classifypledge2() {
            return base.Channel.classifypledge2();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> classifypledge2Async() {
            return base.Channel.classifypledge2Async();
        }
        
        public System.Data.DataSet classifypledge3(int BranchID) {
            return base.Channel.classifypledge3(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> classifypledge3Async(int BranchID) {
            return base.Channel.classifypledge3Async(BranchID);
        }
        
        public System.Data.DataSet normalization01(int BranchID) {
            return base.Channel.normalization01(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> normalization01Async(int BranchID) {
            return base.Channel.normalization01Async(BranchID);
        }
        
        public System.Data.DataSet normalization15() {
            return base.Channel.normalization15();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> normalization15Async() {
            return base.Channel.normalization15Async();
        }
        
        public System.Data.DataSet Receive5(int IBGTN) {
            return base.Channel.Receive5(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Receive5Async(int IBGTN) {
            return base.Channel.Receive5Async(IBGTN);
        }
        
        public System.Data.DataSet Receive6(int IBGTN) {
            return base.Channel.Receive6(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Receive6Async(int IBGTN) {
            return base.Channel.Receive6Async(IBGTN);
        }
        
        public System.Data.DataSet ibgtnPrint(string IBGTN) {
            return base.Channel.ibgtnPrint(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ibgtnPrintAsync(string IBGTN) {
            return base.Channel.ibgtnPrintAsync(IBGTN);
        }
        
        public System.Data.DataSet pledgeclassification(string plno) {
            return base.Channel.pledgeclassification(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> pledgeclassificationAsync(string plno) {
            return base.Channel.pledgeclassificationAsync(plno);
        }
        
        public System.Data.DataSet Receivalform1() {
            return base.Channel.Receivalform1();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Receivalform1Async() {
            return base.Channel.Receivalform1Async();
        }
        
        public System.Data.DataSet Receivalform2(string PledgeNo) {
            return base.Channel.Receivalform2(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Receivalform2Async(string PledgeNo) {
            return base.Channel.Receivalform2Async(PledgeNo);
        }
        
        public System.Data.DataSet Receivalform3(string PledgeNo) {
            return base.Channel.Receivalform3(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Receivalform3Async(string PledgeNo) {
            return base.Channel.Receivalform3Async(PledgeNo);
        }
        
        public System.Data.DataSet cancelgrossweight1(int AuctionCntr) {
            return base.Channel.cancelgrossweight1(AuctionCntr);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> cancelgrossweight1Async(int AuctionCntr) {
            return base.Channel.cancelgrossweight1Async(AuctionCntr);
        }
        
        public System.Data.DataSet cancelnormalization1(string PledgeNo) {
            return base.Channel.cancelnormalization1(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> cancelnormalization1Async(string PledgeNo) {
            return base.Channel.cancelnormalization1Async(PledgeNo);
        }
        
        public System.Data.DataSet cancelnormalization2(string PledgeNo) {
            return base.Channel.cancelnormalization2(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> cancelnormalization2Async(string PledgeNo) {
            return base.Channel.cancelnormalization2Async(PledgeNo);
        }
        
        public System.Data.DataSet addvendor(int flg) {
            return base.Channel.addvendor(flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> addvendorAsync(int flg) {
            return base.Channel.addvendorAsync(flg);
        }
        
        public System.Data.DataSet state(int Id, int flg) {
            return base.Channel.state(Id, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> stateAsync(int Id, int flg) {
            return base.Channel.stateAsync(Id, flg);
        }
        
        public System.Data.DataSet cancelnormalizationnew1(string PledgeNo) {
            return base.Channel.cancelnormalizationnew1(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> cancelnormalizationnew1Async(string PledgeNo) {
            return base.Channel.cancelnormalizationnew1Async(PledgeNo);
        }
        
        public System.Data.DataSet cancelnormalizationnew2(string PledgeNo) {
            return base.Channel.cancelnormalizationnew2(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> cancelnormalizationnew2Async(string PledgeNo) {
            return base.Channel.cancelnormalizationnew2Async(PledgeNo);
        }
        
        public System.Data.DataSet collection_auctionamt(int flg) {
            return base.Channel.collection_auctionamt(flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> collection_auctionamtAsync(int flg) {
            return base.Channel.collection_auctionamtAsync(flg);
        }
        
        public System.Data.DataSet collection_auction_cmbVendor(int VendorId) {
            return base.Channel.collection_auction_cmbVendor(VendorId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> collection_auction_cmbVendorAsync(int VendorId) {
            return base.Channel.collection_auction_cmbVendorAsync(VendorId);
        }
        
        public System.Data.DataSet collection_auction_cmbPayMode(int PayMode, int VendorId) {
            return base.Channel.collection_auction_cmbPayMode(PayMode, VendorId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> collection_auction_cmbPayModeAsync(int PayMode, int VendorId) {
            return base.Channel.collection_auction_cmbPayModeAsync(PayMode, VendorId);
        }
        
        public System.Data.DataSet AucdateselectionRpt() {
            return base.Channel.AucdateselectionRpt();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucdateselectionRptAsync() {
            return base.Channel.AucdateselectionRptAsync();
        }
        
        public System.Data.DataSet dailymeasuredlist() {
            return base.Channel.dailymeasuredlist();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> dailymeasuredlistAsync() {
            return base.Channel.dailymeasuredlistAsync();
        }
        
        public System.Data.DataSet pledgecurrentstatus1(string PledgeNo) {
            return base.Channel.pledgecurrentstatus1(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> pledgecurrentstatus1Async(string PledgeNo) {
            return base.Channel.pledgecurrentstatus1Async(PledgeNo);
        }
        
        public System.Data.DataSet pledgecurrentstatus2(string PledgeNo) {
            return base.Channel.pledgecurrentstatus2(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> pledgecurrentstatus2Async(string PledgeNo) {
            return base.Channel.pledgecurrentstatus2Async(PledgeNo);
        }
        
        public System.Data.DataSet UpdateIrregular3(int sl_no) {
            return base.Channel.UpdateIrregular3(sl_no);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> UpdateIrregular3Async(int sl_no) {
            return base.Channel.UpdateIrregular3Async(sl_no);
        }
        
        public System.Data.DataSet UpdateIrregular4(string PledgeNo) {
            return base.Channel.UpdateIrregular4(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> UpdateIrregular4Async(string PledgeNo) {
            return base.Channel.UpdateIrregular4Async(PledgeNo);
        }
        
        public System.Data.DataSet ApproveIrregularity2() {
            return base.Channel.ApproveIrregularity2();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ApproveIrregularity2Async() {
            return base.Channel.ApproveIrregularity2Async();
        }
        
        public System.Data.DataSet ApproveIrregularity3(string irr_code) {
            return base.Channel.ApproveIrregularity3(irr_code);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ApproveIrregularity3Async(string irr_code) {
            return base.Channel.ApproveIrregularity3Async(irr_code);
        }
        
        public System.Data.DataSet Check_negligeble(string irr_code) {
            return base.Channel.Check_negligeble(irr_code);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Check_negligebleAsync(string irr_code) {
            return base.Channel.Check_negligebleAsync(irr_code);
        }
        
        public System.Data.DataSet Normalization1(int BranchID) {
            return base.Channel.Normalization1(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Normalization1Async(int BranchID) {
            return base.Channel.Normalization1Async(BranchID);
        }
        
        public System.Data.DataSet Normalization2() {
            return base.Channel.Normalization2();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Normalization2Async() {
            return base.Channel.Normalization2Async();
        }
        
        public System.Data.DataSet Normalization3() {
            return base.Channel.Normalization3();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Normalization3Async() {
            return base.Channel.Normalization3Async();
        }
        
        public System.Data.DataSet Normalization4(int brid) {
            return base.Channel.Normalization4(brid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Normalization4Async(int brid) {
            return base.Channel.Normalization4Async(brid);
        }
        
        public System.Data.DataSet Normalization5(string PledgeNo) {
            return base.Channel.Normalization5(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Normalization5Async(string PledgeNo) {
            return base.Channel.Normalization5Async(PledgeNo);
        }
        
        public System.Data.DataSet Normalization6(string PledgeNo) {
            return base.Channel.Normalization6(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Normalization6Async(string PledgeNo) {
            return base.Channel.Normalization6Async(PledgeNo);
        }
        
        public System.Data.DataSet Normalization7() {
            return base.Channel.Normalization7();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Normalization7Async() {
            return base.Channel.Normalization7Async();
        }
        
        public System.Data.DataSet Normalization8(int TypeID) {
            return base.Channel.Normalization8(TypeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Normalization8Async(int TypeID) {
            return base.Channel.Normalization8Async(TypeID);
        }
        
        public System.Data.DataSet SplitNormalization1() {
            return base.Channel.SplitNormalization1();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SplitNormalization1Async() {
            return base.Channel.SplitNormalization1Async();
        }
        
        public System.Data.DataSet VerifyPacket1(string Barcode) {
            return base.Channel.VerifyPacket1(Barcode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> VerifyPacket1Async(string Barcode) {
            return base.Channel.VerifyPacket1Async(Barcode);
        }
        
        public System.Data.DataSet ReprintIBGTN1(int IBGTN) {
            return base.Channel.ReprintIBGTN1(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReprintIBGTN1Async(int IBGTN) {
            return base.Channel.ReprintIBGTN1Async(IBGTN);
        }
        
        public System.Data.DataSet ReprintIBGTN2(int IBGTN) {
            return base.Channel.ReprintIBGTN2(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReprintIBGTN2Async(int IBGTN) {
            return base.Channel.ReprintIBGTN2Async(IBGTN);
        }
        
        public System.Data.DataSet ReprintIBGTN3(int IBGTN) {
            return base.Channel.ReprintIBGTN3(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReprintIBGTN3Async(int IBGTN) {
            return base.Channel.ReprintIBGTN3Async(IBGTN);
        }
        
        public System.Data.DataSet ReprintIBGTN4(int BranchID) {
            return base.Channel.ReprintIBGTN4(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReprintIBGTN4Async(int BranchID) {
            return base.Channel.ReprintIBGTN4Async(BranchID);
        }
        
        public System.Data.DataSet PurityUpdation1() {
            return base.Channel.PurityUpdation1();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> PurityUpdation1Async() {
            return base.Channel.PurityUpdation1Async();
        }
        
        public System.Data.DataSet PurityUpdation2(int AuctionCentre) {
            return base.Channel.PurityUpdation2(AuctionCentre);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> PurityUpdation2Async(int AuctionCentre) {
            return base.Channel.PurityUpdation2Async(AuctionCentre);
        }
        
        public System.Data.DataSet PurityUpdation3(string PledgeNo) {
            return base.Channel.PurityUpdation3(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> PurityUpdation3Async(string PledgeNo) {
            return base.Channel.PurityUpdation3Async(PledgeNo);
        }
        
        public System.Data.DataSet PuritySanction1(int usr) {
            return base.Channel.PuritySanction1(usr);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> PuritySanction1Async(int usr) {
            return base.Channel.PuritySanction1Async(usr);
        }
        
        public System.Data.DataSet PuritySanction2(string PledgeNo) {
            return base.Channel.PuritySanction2(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> PuritySanction2Async(string PledgeNo) {
            return base.Channel.PuritySanction2Async(PledgeNo);
        }
        
        public System.Data.DataSet PuritySanction3(string PledgeNo) {
            return base.Channel.PuritySanction3(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> PuritySanction3Async(string PledgeNo) {
            return base.Channel.PuritySanction3Async(PledgeNo);
        }
        
        public System.Data.DataSet PuritySanction4(int DocumentId) {
            return base.Channel.PuritySanction4(DocumentId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> PuritySanction4Async(int DocumentId) {
            return base.Channel.PuritySanction4Async(DocumentId);
        }
        
        public System.Data.DataSet AucTransferRequest1(int BranchId) {
            return base.Channel.AucTransferRequest1(BranchId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucTransferRequest1Async(int BranchId) {
            return base.Channel.AucTransferRequest1Async(BranchId);
        }
        
        public System.Data.DataSet AucTransferRequest2(int BranchId, string PledgeNo) {
            return base.Channel.AucTransferRequest2(BranchId, PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucTransferRequest2Async(int BranchId, string PledgeNo) {
            return base.Channel.AucTransferRequest2Async(BranchId, PledgeNo);
        }
        
        public System.Data.DataSet AucTransferRequest3(int BranchId, string PledgeNo) {
            return base.Channel.AucTransferRequest3(BranchId, PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucTransferRequest3Async(int BranchId, string PledgeNo) {
            return base.Channel.AucTransferRequest3Async(BranchId, PledgeNo);
        }
        
        public System.Data.DataSet AucTransferRequest4(string PledgeNo) {
            return base.Channel.AucTransferRequest4(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucTransferRequest4Async(string PledgeNo) {
            return base.Channel.AucTransferRequest4Async(PledgeNo);
        }
        
        public System.Data.DataSet AucTransferRequest5(int BranchId, string PledgeNo) {
            return base.Channel.AucTransferRequest5(BranchId, PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucTransferRequest5Async(int BranchId, string PledgeNo) {
            return base.Channel.AucTransferRequest5Async(BranchId, PledgeNo);
        }
        
        public System.Data.DataSet AucTransferRequest6(int Userid, int Branchid) {
            return base.Channel.AucTransferRequest6(Userid, Branchid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucTransferRequest6Async(int Userid, int Branchid) {
            return base.Channel.AucTransferRequest6Async(Userid, Branchid);
        }
        
        public System.Data.DataSet AucTransferReceive1(int Branchid) {
            return base.Channel.AucTransferReceive1(Branchid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucTransferReceive1Async(int Branchid) {
            return base.Channel.AucTransferReceive1Async(Branchid);
        }
        
        public System.Data.DataSet AucTransferReceive2(int Branchid, string PledgeNo) {
            return base.Channel.AucTransferReceive2(Branchid, PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucTransferReceive2Async(int Branchid, string PledgeNo) {
            return base.Channel.AucTransferReceive2Async(Branchid, PledgeNo);
        }
        
        public System.Data.DataSet AucTransferReceive3(int Branchid, string PledgeNo) {
            return base.Channel.AucTransferReceive3(Branchid, PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AucTransferReceive3Async(int Branchid, string PledgeNo) {
            return base.Channel.AucTransferReceive3Async(Branchid, PledgeNo);
        }
        
        public System.Data.DataSet GetQueryups(string plno, int slno) {
            return base.Channel.GetQueryups(plno, slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetQueryupsAsync(string plno, int slno) {
            return base.Channel.GetQueryupsAsync(plno, slno);
        }
        
        public System.Data.DataSet GetBranchAuc1(string PledgeNo, string UserId) {
            return base.Channel.GetBranchAuc1(PledgeNo, UserId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc1Async(string PledgeNo, string UserId) {
            return base.Channel.GetBranchAuc1Async(PledgeNo, UserId);
        }
        
        public System.Data.DataSet GetBranchAuc2(string plno) {
            return base.Channel.GetBranchAuc2(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc2Async(string plno) {
            return base.Channel.GetBranchAuc2Async(plno);
        }
        
        public System.Data.DataSet GetBranchAuc3(string AucDate, int BranchID) {
            return base.Channel.GetBranchAuc3(AucDate, BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc3Async(string AucDate, int BranchID) {
            return base.Channel.GetBranchAuc3Async(AucDate, BranchID);
        }
        
        public System.Data.DataSet GetBranchAuc4(int BranchID) {
            return base.Channel.GetBranchAuc4(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc4Async(int BranchID) {
            return base.Channel.GetBranchAuc4Async(BranchID);
        }
        
        public System.Data.DataSet GetBranchAuc5(int BranchID) {
            return base.Channel.GetBranchAuc5(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc5Async(int BranchID) {
            return base.Channel.GetBranchAuc5Async(BranchID);
        }
        
        public System.Data.DataSet GetBranchAuc6(int BranchID) {
            return base.Channel.GetBranchAuc6(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc6Async(int BranchID) {
            return base.Channel.GetBranchAuc6Async(BranchID);
        }
        
        public System.Data.DataSet GetBranchAuc7(int sch) {
            return base.Channel.GetBranchAuc7(sch);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc7Async(int sch) {
            return base.Channel.GetBranchAuc7Async(sch);
        }
        
        public System.Data.DataSet GetBranchAuc8(int sch) {
            return base.Channel.GetBranchAuc8(sch);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc8Async(int sch) {
            return base.Channel.GetBranchAuc8Async(sch);
        }
        
        public System.Data.DataSet GetBranchAuc9(int BranchID, string AucDate, string PledgeList) {
            return base.Channel.GetBranchAuc9(BranchID, AucDate, PledgeList);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc9Async(int BranchID, string AucDate, string PledgeList) {
            return base.Channel.GetBranchAuc9Async(BranchID, AucDate, PledgeList);
        }
        
        public System.Data.DataSet GetBranchAuc10(string plno) {
            return base.Channel.GetBranchAuc10(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc10Async(string plno) {
            return base.Channel.GetBranchAuc10Async(plno);
        }
        
        public System.Data.DataSet GetBranchAuc11(string IBGTN) {
            return base.Channel.GetBranchAuc11(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc11Async(string IBGTN) {
            return base.Channel.GetBranchAuc11Async(IBGTN);
        }
        
        public System.Data.DataSet GetBranchAuc12(int BranchID) {
            return base.Channel.GetBranchAuc12(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc12Async(int BranchID) {
            return base.Channel.GetBranchAuc12Async(BranchID);
        }
        
        public System.Data.DataSet GetBranchAuc13(int BranchID) {
            return base.Channel.GetBranchAuc13(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc13Async(int BranchID) {
            return base.Channel.GetBranchAuc13Async(BranchID);
        }
        
        public System.Data.DataSet GetBranchAuc14(int IBGTN) {
            return base.Channel.GetBranchAuc14(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc14Async(int IBGTN) {
            return base.Channel.GetBranchAuc14Async(IBGTN);
        }
        
        public System.Data.DataSet GetBranchAuc15(int IBGTN) {
            return base.Channel.GetBranchAuc15(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc15Async(int IBGTN) {
            return base.Channel.GetBranchAuc15Async(IBGTN);
        }
        
        public System.Data.DataSet GetBranchAuc16(int slno) {
            return base.Channel.GetBranchAuc16(slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc16Async(int slno) {
            return base.Channel.GetBranchAuc16Async(slno);
        }
        
        public System.Data.DataSet GetBranchAuc17() {
            return base.Channel.GetBranchAuc17();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc17Async() {
            return base.Channel.GetBranchAuc17Async();
        }
        
        public System.Data.DataSet GetBranchAuc18(int BranchID) {
            return base.Channel.GetBranchAuc18(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc18Async(int BranchID) {
            return base.Channel.GetBranchAuc18Async(BranchID);
        }
        
        public System.Data.DataSet GetBranchAuc19() {
            return base.Channel.GetBranchAuc19();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc19Async() {
            return base.Channel.GetBranchAuc19Async();
        }
        
        public System.Data.DataSet GetBranchAuc20(int BranchID, int LotGoldType, int AuctionCenter, int Docstatus, string LettStatus, int slno) {
            return base.Channel.GetBranchAuc20(BranchID, LotGoldType, AuctionCenter, Docstatus, LettStatus, slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc20Async(int BranchID, int LotGoldType, int AuctionCenter, int Docstatus, string LettStatus, int slno) {
            return base.Channel.GetBranchAuc20Async(BranchID, LotGoldType, AuctionCenter, Docstatus, LettStatus, slno);
        }
        
        public System.Data.DataSet GetBranchAuc21(int slno) {
            return base.Channel.GetBranchAuc21(slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc21Async(int slno) {
            return base.Channel.GetBranchAuc21Async(slno);
        }
        
        public System.Data.DataSet GetBranchAuc22(int BranchID, int slno) {
            return base.Channel.GetBranchAuc22(BranchID, slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc22Async(int BranchID, int slno) {
            return base.Channel.GetBranchAuc22Async(BranchID, slno);
        }
        
        public System.Data.DataSet GetBranchAuc23(int LotID, int slno) {
            return base.Channel.GetBranchAuc23(LotID, slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc23Async(int LotID, int slno) {
            return base.Channel.GetBranchAuc23Async(LotID, slno);
        }
        
        public System.Data.DataSet GetBranchAuc24(int Stateid, int Venid, int slno) {
            return base.Channel.GetBranchAuc24(Stateid, Venid, slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc24Async(int Stateid, int Venid, int slno) {
            return base.Channel.GetBranchAuc24Async(Stateid, Venid, slno);
        }
        
        public System.Data.DataSet GetBranchAuc25(int emp, int slno) {
            return base.Channel.GetBranchAuc25(emp, slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchAuc25Async(int emp, int slno) {
            return base.Channel.GetBranchAuc25Async(emp, slno);
        }
        
        public string GetBranchAuc26(int LotID, int slno) {
            return base.Channel.GetBranchAuc26(LotID, slno);
        }
        
        public System.Threading.Tasks.Task<string> GetBranchAuc26Async(int LotID, int slno) {
            return base.Channel.GetBranchAuc26Async(LotID, slno);
        }
        
        public string GetBranchAuc27(int ClassID, string PledgeNo, int UserID, int slno) {
            return base.Channel.GetBranchAuc27(ClassID, PledgeNo, UserID, slno);
        }
        
        public System.Threading.Tasks.Task<string> GetBranchAuc27Async(int ClassID, string PledgeNo, int UserID, int slno) {
            return base.Channel.GetBranchAuc27Async(ClassID, PledgeNo, UserID, slno);
        }
        
        public string CollectionConfirm1(int BranchId, string CollectionData, int BankAccount, int UserId) {
            return base.Channel.CollectionConfirm1(BranchId, CollectionData, BankAccount, UserId);
        }
        
        public System.Threading.Tasks.Task<string> CollectionConfirm1Async(int BranchId, string CollectionData, int BankAccount, int UserId) {
            return base.Channel.CollectionConfirm1Async(BranchId, CollectionData, BankAccount, UserId);
        }
        
        public string CollectionDisplay1(int VendorId, int PayMode, int LotId) {
            return base.Channel.CollectionDisplay1(VendorId, PayMode, LotId);
        }
        
        public System.Threading.Tasks.Task<string> CollectionDisplay1Async(int VendorId, int PayMode, int LotId) {
            return base.Channel.CollectionDisplay1Async(VendorId, PayMode, LotId);
        }
        
        public System.Data.DataSet access_form(int f_id, int emp_id) {
            return base.Channel.access_form(f_id, emp_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> access_formAsync(int f_id, int emp_id) {
            return base.Channel.access_formAsync(f_id, emp_id);
        }
        
        public System.Data.DataSet Check_brauction_branch(int v_ibgtn) {
            return base.Channel.Check_brauction_branch(v_ibgtn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Check_brauction_branchAsync(int v_ibgtn) {
            return base.Channel.Check_brauction_branchAsync(v_ibgtn);
        }
        
        public System.Data.DataSet display_months() {
            return base.Channel.display_months();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> display_monthsAsync() {
            return base.Channel.display_monthsAsync();
        }
        
        public System.Data.DataSet check_real_perc_exist(int mon_val) {
            return base.Channel.check_real_perc_exist(mon_val);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> check_real_perc_existAsync(int mon_val) {
            return base.Channel.check_real_perc_existAsync(mon_val);
        }
        
        public string confirm_realization_perc(int mon_val, double real_per, int Branchid, int usrid) {
            return base.Channel.confirm_realization_perc(mon_val, real_per, Branchid, usrid);
        }
        
        public System.Threading.Tasks.Task<string> confirm_realization_percAsync(int mon_val, double real_per, int Branchid, int usrid) {
            return base.Channel.confirm_realization_percAsync(mon_val, real_per, Branchid, usrid);
        }
        
        public System.Data.DataSet check_real_perc_update(string pledgeno) {
            return base.Channel.check_real_perc_update(pledgeno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> check_real_perc_updateAsync(string pledgeno) {
            return base.Channel.check_real_perc_updateAsync(pledgeno);
        }
        
        public System.Data.DataSet Letter_type() {
            return base.Channel.Letter_type();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Letter_typeAsync() {
            return base.Channel.Letter_typeAsync();
        }
        
        public System.Data.DataSet ADcard_Letter_type() {
            return base.Channel.ADcard_Letter_type();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ADcard_Letter_typeAsync() {
            return base.Channel.ADcard_Letter_typeAsync();
        }
        
        public System.Data.DataSet Letter_language(int let_type, string gen_dt) {
            return base.Channel.Letter_language(let_type, gen_dt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Letter_languageAsync(int let_type, string gen_dt) {
            return base.Channel.Letter_languageAsync(let_type, gen_dt);
        }
        
        public System.Data.DataSet Letter_Print_data(string language, int lt_type, int min_val, int max_val, string gendt) {
            return base.Channel.Letter_Print_data(language, lt_type, min_val, max_val, gendt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Letter_Print_dataAsync(string language, int lt_type, int min_val, int max_val, string gendt) {
            return base.Channel.Letter_Print_dataAsync(language, lt_type, min_val, max_val, gendt);
        }
        
        public System.Data.DataSet Letter_count(int tp, int lt_val, string language, string gen_dt) {
            return base.Channel.Letter_count(tp, lt_val, language, gen_dt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Letter_countAsync(int tp, int lt_val, string language, string gen_dt) {
            return base.Channel.Letter_countAsync(tp, lt_val, language, gen_dt);
        }
        
        public long Change_Letter_count(int tp, int lt_val, string language, int frm, int to_tp, string gen_dt) {
            return base.Channel.Change_Letter_count(tp, lt_val, language, frm, to_tp, gen_dt);
        }
        
        public System.Threading.Tasks.Task<long> Change_Letter_countAsync(int tp, int lt_val, string language, int frm, int to_tp, string gen_dt) {
            return base.Channel.Change_Letter_countAsync(tp, lt_val, language, frm, to_tp, gen_dt);
        }
        
        public System.Data.DataSet Letter_Summary_data(string fromdt, string todt, int lt_type) {
            return base.Channel.Letter_Summary_data(fromdt, todt, lt_type);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Letter_Summary_dataAsync(string fromdt, string todt, int lt_type) {
            return base.Channel.Letter_Summary_dataAsync(fromdt, todt, lt_type);
        }
        
        public System.Data.DataSet Letter_returned_data(string fromdt, string todt, int lt_type) {
            return base.Channel.Letter_returned_data(fromdt, todt, lt_type);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Letter_returned_dataAsync(string fromdt, string todt, int lt_type) {
            return base.Channel.Letter_returned_dataAsync(fromdt, todt, lt_type);
        }
        
        public System.Data.DataSet Spl_letter_report(string frdt, string todt) {
            return base.Channel.Spl_letter_report(frdt, todt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Spl_letter_reportAsync(string frdt, string todt) {
            return base.Channel.Spl_letter_reportAsync(frdt, todt);
        }
        
        public string AD_card_insert(int fid, int toid, int opt, int st) {
            return base.Channel.AD_card_insert(fid, toid, opt, st);
        }
        
        public System.Threading.Tasks.Task<string> AD_card_insertAsync(int fid, int toid, int opt, int st) {
            return base.Channel.AD_card_insertAsync(fid, toid, opt, st);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.UploadLetterResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.UploadLetter(NewAuctionLetter.GL_AUCTION.UploadLetterRequest request) {
            return base.Channel.UploadLetter(request);
        }
        
        public string UploadLetter(string gendt, int From, int Toslno, byte[] Doc, int UserId) {
            NewAuctionLetter.GL_AUCTION.UploadLetterRequest inValue = new NewAuctionLetter.GL_AUCTION.UploadLetterRequest();
            inValue.gendt = gendt;
            inValue.From = From;
            inValue.Toslno = Toslno;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            NewAuctionLetter.GL_AUCTION.UploadLetterResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).UploadLetter(inValue);
            return retVal.UploadLetterResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadLetterResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.UploadLetterAsync(NewAuctionLetter.GL_AUCTION.UploadLetterRequest request) {
            return base.Channel.UploadLetterAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadLetterResponse> UploadLetterAsync(string gendt, int From, int Toslno, byte[] Doc, int UserId) {
            NewAuctionLetter.GL_AUCTION.UploadLetterRequest inValue = new NewAuctionLetter.GL_AUCTION.UploadLetterRequest();
            inValue.gendt = gendt;
            inValue.From = From;
            inValue.Toslno = Toslno;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).UploadLetterAsync(inValue);
        }
        
        public string getLetteroutput(string gendt, int typ, int slno) {
            return base.Channel.getLetteroutput(gendt, typ, slno);
        }
        
        public System.Threading.Tasks.Task<string> getLetteroutputAsync(string gendt, int typ, int slno) {
            return base.Channel.getLetteroutputAsync(gendt, typ, slno);
        }
        
        public int check_upload_count(string gendt, int fr_slno, int t_slno) {
            return base.Channel.check_upload_count(gendt, fr_slno, t_slno);
        }
        
        public System.Threading.Tasks.Task<int> check_upload_countAsync(string gendt, int fr_slno, int t_slno) {
            return base.Channel.check_upload_countAsync(gendt, fr_slno, t_slno);
        }
        
        public string UpdateReturnReason(string gendt, string barcode, string rsn, int UserId) {
            return base.Channel.UpdateReturnReason(gendt, barcode, rsn, UserId);
        }
        
        public System.Threading.Tasks.Task<string> UpdateReturnReasonAsync(string gendt, string barcode, string rsn, int UserId) {
            return base.Channel.UpdateReturnReasonAsync(gendt, barcode, rsn, UserId);
        }
        
        public string BidConfirmation(int LotId, string AuctioneerID, int VendorID, int TeamHead, int Auditor, double Amount, int stateid) {
            return base.Channel.BidConfirmation(LotId, AuctioneerID, VendorID, TeamHead, Auditor, Amount, stateid);
        }
        
        public System.Threading.Tasks.Task<string> BidConfirmationAsync(int LotId, string AuctioneerID, int VendorID, int TeamHead, int Auditor, double Amount, int stateid) {
            return base.Channel.BidConfirmationAsync(LotId, AuctioneerID, VendorID, TeamHead, Auditor, Amount, stateid);
        }
        
        public string Lot_Groswt(int Lotid1, double Agrwt) {
            return base.Channel.Lot_Groswt(Lotid1, Agrwt);
        }
        
        public System.Threading.Tasks.Task<string> Lot_GroswtAsync(int Lotid1, double Agrwt) {
            return base.Channel.Lot_GroswtAsync(Lotid1, Agrwt);
        }
        
        public System.Data.DataSet Auc_QuerySelect(string Flag1, int bracnchID, string pledgeNo, System.DateTime frmdate, System.DateTime todate) {
            return base.Channel.Auc_QuerySelect(Flag1, bracnchID, pledgeNo, frmdate, todate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Auc_QuerySelectAsync(string Flag1, int bracnchID, string pledgeNo, System.DateTime frmdate, System.DateTime todate) {
            return base.Channel.Auc_QuerySelectAsync(Flag1, bracnchID, pledgeNo, frmdate, todate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.ReUploadDocumentResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.ReUploadDocument(NewAuctionLetter.GL_AUCTION.ReUploadDocumentRequest request) {
            return base.Channel.ReUploadDocument(request);
        }
        
        public string ReUploadDocument(string PledgeNo, int Id, byte[] Doc, int UserId) {
            NewAuctionLetter.GL_AUCTION.ReUploadDocumentRequest inValue = new NewAuctionLetter.GL_AUCTION.ReUploadDocumentRequest();
            inValue.PledgeNo = PledgeNo;
            inValue.Id = Id;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            NewAuctionLetter.GL_AUCTION.ReUploadDocumentResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).ReUploadDocument(inValue);
            return retVal.ReUploadDocumentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.ReUploadDocumentResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.ReUploadDocumentAsync(NewAuctionLetter.GL_AUCTION.ReUploadDocumentRequest request) {
            return base.Channel.ReUploadDocumentAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.ReUploadDocumentResponse> ReUploadDocumentAsync(string PledgeNo, int Id, byte[] Doc, int UserId) {
            NewAuctionLetter.GL_AUCTION.ReUploadDocumentRequest inValue = new NewAuctionLetter.GL_AUCTION.ReUploadDocumentRequest();
            inValue.PledgeNo = PledgeNo;
            inValue.Id = Id;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).ReUploadDocumentAsync(inValue);
        }
        
        public string PostPoneTransfer(int TransferId, System.DateTime PostPoneDt, int UserId) {
            return base.Channel.PostPoneTransfer(TransferId, PostPoneDt, UserId);
        }
        
        public System.Threading.Tasks.Task<string> PostPoneTransferAsync(int TransferId, System.DateTime PostPoneDt, int UserId) {
            return base.Channel.PostPoneTransferAsync(TransferId, PostPoneDt, UserId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.PurityUpdationResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.PurityUpdation(NewAuctionLetter.GL_AUCTION.PurityUpdationRequest request) {
            return base.Channel.PurityUpdation(request);
        }
        
        public string PurityUpdation(string TransferData, byte[] Doc, int BranchId, int UserId) {
            NewAuctionLetter.GL_AUCTION.PurityUpdationRequest inValue = new NewAuctionLetter.GL_AUCTION.PurityUpdationRequest();
            inValue.TransferData = TransferData;
            inValue.Doc = Doc;
            inValue.BranchId = BranchId;
            inValue.UserId = UserId;
            NewAuctionLetter.GL_AUCTION.PurityUpdationResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).PurityUpdation(inValue);
            return retVal.PurityUpdationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.PurityUpdationResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.PurityUpdationAsync(NewAuctionLetter.GL_AUCTION.PurityUpdationRequest request) {
            return base.Channel.PurityUpdationAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.PurityUpdationResponse> PurityUpdationAsync(string TransferData, byte[] Doc, int BranchId, int UserId) {
            NewAuctionLetter.GL_AUCTION.PurityUpdationRequest inValue = new NewAuctionLetter.GL_AUCTION.PurityUpdationRequest();
            inValue.TransferData = TransferData;
            inValue.Doc = Doc;
            inValue.BranchId = BranchId;
            inValue.UserId = UserId;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).PurityUpdationAsync(inValue);
        }
        
        public string ApprovePurityUpdation(string PledgeNo, int Status, int UserId) {
            return base.Channel.ApprovePurityUpdation(PledgeNo, Status, UserId);
        }
        
        public System.Threading.Tasks.Task<string> ApprovePurityUpdationAsync(string PledgeNo, int Status, int UserId) {
            return base.Channel.ApprovePurityUpdationAsync(PledgeNo, Status, UserId);
        }
        
        public string TransferCancelRequest(int Ibgtn, int UserId) {
            return base.Channel.TransferCancelRequest(Ibgtn, UserId);
        }
        
        public System.Threading.Tasks.Task<string> TransferCancelRequestAsync(int Ibgtn, int UserId) {
            return base.Channel.TransferCancelRequestAsync(Ibgtn, UserId);
        }
        
        public string TransferCancelApprove(int RequestId, int Ibgtn, int UserId, int ConfStatus) {
            return base.Channel.TransferCancelApprove(RequestId, Ibgtn, UserId, ConfStatus);
        }
        
        public System.Threading.Tasks.Task<string> TransferCancelApproveAsync(int RequestId, int Ibgtn, int UserId, int ConfStatus) {
            return base.Channel.TransferCancelApproveAsync(RequestId, Ibgtn, UserId, ConfStatus);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.UploadDefferDocumentResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.UploadDefferDocument(NewAuctionLetter.GL_AUCTION.UploadDefferDocumentRequest request) {
            return base.Channel.UploadDefferDocument(request);
        }
        
        public int UploadDefferDocument(string complid, byte[] Dat) {
            NewAuctionLetter.GL_AUCTION.UploadDefferDocumentRequest inValue = new NewAuctionLetter.GL_AUCTION.UploadDefferDocumentRequest();
            inValue.complid = complid;
            inValue.Dat = Dat;
            NewAuctionLetter.GL_AUCTION.UploadDefferDocumentResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).UploadDefferDocument(inValue);
            return retVal.UploadDefferDocumentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadDefferDocumentResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.UploadDefferDocumentAsync(NewAuctionLetter.GL_AUCTION.UploadDefferDocumentRequest request) {
            return base.Channel.UploadDefferDocumentAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadDefferDocumentResponse> UploadDefferDocumentAsync(string complid, byte[] Dat) {
            NewAuctionLetter.GL_AUCTION.UploadDefferDocumentRequest inValue = new NewAuctionLetter.GL_AUCTION.UploadDefferDocumentRequest();
            inValue.complid = complid;
            inValue.Dat = Dat;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).UploadDefferDocumentAsync(inValue);
        }
        
        public string CancelNormalization(string PledgeNo, int UserId) {
            return base.Channel.CancelNormalization(PledgeNo, UserId);
        }
        
        public System.Threading.Tasks.Task<string> CancelNormalizationAsync(string PledgeNo, int UserId) {
            return base.Channel.CancelNormalizationAsync(PledgeNo, UserId);
        }
        
        public string PledgeReturnToBranch(int AucBranch, int BranchId, string TfrPledge, int Carrier, int HandOver) {
            return base.Channel.PledgeReturnToBranch(AucBranch, BranchId, TfrPledge, Carrier, HandOver);
        }
        
        public System.Threading.Tasks.Task<string> PledgeReturnToBranchAsync(int AucBranch, int BranchId, string TfrPledge, int Carrier, int HandOver) {
            return base.Channel.PledgeReturnToBranchAsync(AucBranch, BranchId, TfrPledge, Carrier, HandOver);
        }
        
        public string ReceiveReturnedPledge(int ReturnId, string PledgeNo, int UserId) {
            return base.Channel.ReceiveReturnedPledge(ReturnId, PledgeNo, UserId);
        }
        
        public System.Threading.Tasks.Task<string> ReceiveReturnedPledgeAsync(int ReturnId, string PledgeNo, int UserId) {
            return base.Channel.ReceiveReturnedPledgeAsync(ReturnId, PledgeNo, UserId);
        }
        
        public string CancelSchedule(int AucCentre, int BranchId, int ScheduleId, int UserId) {
            return base.Channel.CancelSchedule(AucCentre, BranchId, ScheduleId, UserId);
        }
        
        public System.Threading.Tasks.Task<string> CancelScheduleAsync(int AucCentre, int BranchId, int ScheduleId, int UserId) {
            return base.Channel.CancelScheduleAsync(AucCentre, BranchId, ScheduleId, UserId);
        }
        
        public string CancelAdjGrossWt(int LotID, int UserId) {
            return base.Channel.CancelAdjGrossWt(LotID, UserId);
        }
        
        public System.Threading.Tasks.Task<string> CancelAdjGrossWtAsync(int LotID, int UserId) {
            return base.Channel.CancelAdjGrossWtAsync(LotID, UserId);
        }
        
        public string DeferRequest_live(string PledgeNo, int ReasonId, System.DateTime DeferDate, int BranchId, int UserId, string phno, int mode, string Email, string Other, string Reason) {
            return base.Channel.DeferRequest_live(PledgeNo, ReasonId, DeferDate, BranchId, UserId, phno, mode, Email, Other, Reason);
        }
        
        public System.Threading.Tasks.Task<string> DeferRequest_liveAsync(string PledgeNo, int ReasonId, System.DateTime DeferDate, int BranchId, int UserId, string phno, int mode, string Email, string Other, string Reason) {
            return base.Channel.DeferRequest_liveAsync(PledgeNo, ReasonId, DeferDate, BranchId, UserId, phno, mode, Email, Other, Reason);
        }
        
        public string Individual_normalize_cancel(string PledgeNo, int UserId, string reason) {
            return base.Channel.Individual_normalize_cancel(PledgeNo, UserId, reason);
        }
        
        public System.Threading.Tasks.Task<string> Individual_normalize_cancelAsync(string PledgeNo, int UserId, string reason) {
            return base.Channel.Individual_normalize_cancelAsync(PledgeNo, UserId, reason);
        }
        
        public string SettleConfirm(int BranchId, string PledgeData, int UserId) {
            return base.Channel.SettleConfirm(BranchId, PledgeData, UserId);
        }
        
        public System.Threading.Tasks.Task<string> SettleConfirmAsync(int BranchId, string PledgeData, int UserId) {
            return base.Channel.SettleConfirmAsync(BranchId, PledgeData, UserId);
        }
        
        public string New_Normalize_Purity(string PledgeNo, string Data, string UserID) {
            return base.Channel.New_Normalize_Purity(PledgeNo, Data, UserID);
        }
        
        public System.Threading.Tasks.Task<string> New_Normalize_PurityAsync(string PledgeNo, string Data, string UserID) {
            return base.Channel.New_Normalize_PurityAsync(PledgeNo, Data, UserID);
        }
        
        public string get_gstnumber(int br_id) {
            return base.Channel.get_gstnumber(br_id);
        }
        
        public System.Threading.Tasks.Task<string> get_gstnumberAsync(int br_id) {
            return base.Channel.get_gstnumberAsync(br_id);
        }
        
        public System.Data.DataSet Check_Rm_empcode(int emp_id) {
            return base.Channel.Check_Rm_empcode(emp_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Check_Rm_empcodeAsync(int emp_id) {
            return base.Channel.Check_Rm_empcodeAsync(emp_id);
        }
        
        public string AucLiveRequest(string plno, int BranchId, int amount, int UserId, int CarryUser, int flg) {
            return base.Channel.AucLiveRequest(plno, BranchId, amount, UserId, CarryUser, flg);
        }
        
        public System.Threading.Tasks.Task<string> AucLiveRequestAsync(string plno, int BranchId, int amount, int UserId, int CarryUser, int flg) {
            return base.Channel.AucLiveRequestAsync(plno, BranchId, amount, UserId, CarryUser, flg);
        }
        
        public int login_check_live(int userid, string passwd, int brid) {
            return base.Channel.login_check_live(userid, passwd, brid);
        }
        
        public System.Threading.Tasks.Task<int> login_check_liveAsync(int userid, string passwd, int brid) {
            return base.Channel.login_check_liveAsync(userid, passwd, brid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.photo_uploadResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.photo_upload(NewAuctionLetter.GL_AUCTION.photo_uploadRequest request) {
            return base.Channel.photo_upload(request);
        }
        
        public int photo_upload(string custid, byte[] Jewphoto) {
            NewAuctionLetter.GL_AUCTION.photo_uploadRequest inValue = new NewAuctionLetter.GL_AUCTION.photo_uploadRequest();
            inValue.custid = custid;
            inValue.Jewphoto = Jewphoto;
            NewAuctionLetter.GL_AUCTION.photo_uploadResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).photo_upload(inValue);
            return retVal.photo_uploadResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.photo_uploadResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.photo_uploadAsync(NewAuctionLetter.GL_AUCTION.photo_uploadRequest request) {
            return base.Channel.photo_uploadAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.photo_uploadResponse> photo_uploadAsync(string custid, byte[] Jewphoto) {
            NewAuctionLetter.GL_AUCTION.photo_uploadRequest inValue = new NewAuctionLetter.GL_AUCTION.photo_uploadRequest();
            inValue.custid = custid;
            inValue.Jewphoto = Jewphoto;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).photo_uploadAsync(inValue);
        }
        
        public string SurplusRequest(int BranchId, int slno, string custid, int UserId, int amount, int payid, int flag) {
            return base.Channel.SurplusRequest(BranchId, slno, custid, UserId, amount, payid, flag);
        }
        
        public System.Threading.Tasks.Task<string> SurplusRequestAsync(int BranchId, int slno, string custid, int UserId, int amount, int payid, int flag) {
            return base.Channel.SurplusRequestAsync(BranchId, slno, custid, UserId, amount, payid, flag);
        }
        
        public System.Data.DataSet GetSurplus_15days_Report(int Branchid, int UserID) {
            return base.Channel.GetSurplus_15days_Report(Branchid, UserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSurplus_15days_ReportAsync(int Branchid, int UserID) {
            return base.Channel.GetSurplus_15days_ReportAsync(Branchid, UserID);
        }
        
        public System.Data.DataSet GetSurplusPayment(int Branchid, string PledgeNo, int UserID, int slno) {
            return base.Channel.GetSurplusPayment(Branchid, PledgeNo, UserID, slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSurplusPaymentAsync(int Branchid, string PledgeNo, int UserID, int slno) {
            return base.Channel.GetSurplusPaymentAsync(Branchid, PledgeNo, UserID, slno);
        }
        
        public System.Data.DataSet get_empname(int usr_id) {
            return base.Channel.get_empname(usr_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_empnameAsync(int usr_id) {
            return base.Channel.get_empnameAsync(usr_id);
        }
        
        public System.Data.DataSet emp_branch_dtls(int emp_id, int branch_id) {
            return base.Channel.emp_branch_dtls(emp_id, branch_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> emp_branch_dtlsAsync(int emp_id, int branch_id) {
            return base.Channel.emp_branch_dtlsAsync(emp_id, branch_id);
        }
        
        public System.Data.DataSet Check_user_dept(int emp_id) {
            return base.Channel.Check_user_dept(emp_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Check_user_deptAsync(int emp_id) {
            return base.Channel.Check_user_deptAsync(emp_id);
        }
        
        public System.Data.DataSet get_post(int emp_id) {
            return base.Channel.get_post(emp_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_postAsync(int emp_id) {
            return base.Channel.get_postAsync(emp_id);
        }
        
        public System.Data.DataSet get_newnormalize_branch_check(int BranchID) {
            return base.Channel.get_newnormalize_branch_check(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_newnormalize_branch_checkAsync(int BranchID) {
            return base.Channel.get_newnormalize_branch_checkAsync(BranchID);
        }
        
        public System.Data.DataSet get_schedule_auccenter() {
            return base.Channel.get_schedule_auccenter();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_auccenterAsync() {
            return base.Channel.get_schedule_auccenterAsync();
        }
        
        public System.Data.DataSet br_auctionpledge_dates() {
            return base.Channel.br_auctionpledge_dates();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> br_auctionpledge_datesAsync() {
            return base.Channel.br_auctionpledge_datesAsync();
        }
        
        public System.Data.DataSet get_schedule_branches(int BranchID) {
            return base.Channel.get_schedule_branches(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_branchesAsync(int BranchID) {
            return base.Channel.get_schedule_branchesAsync(BranchID);
        }
        
        public System.Data.DataSet get_br_auction_dates(int BranchID) {
            return base.Channel.get_br_auction_dates(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_br_auction_datesAsync(int BranchID) {
            return base.Channel.get_br_auction_datesAsync(BranchID);
        }
        
        public string Branch_FixScheduleDate(string TfrData, int UserId) {
            return base.Channel.Branch_FixScheduleDate(TfrData, UserId);
        }
        
        public System.Threading.Tasks.Task<string> Branch_FixScheduleDateAsync(string TfrData, int UserId) {
            return base.Channel.Branch_FixScheduleDateAsync(TfrData, UserId);
        }
        
        public System.Data.DataSet schedule_approve_display() {
            return base.Channel.schedule_approve_display();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> schedule_approve_displayAsync() {
            return base.Channel.schedule_approve_displayAsync();
        }
        
        public System.Data.DataSet schedule_approve_disp_details(int BranchID) {
            return base.Channel.schedule_approve_disp_details(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> schedule_approve_disp_detailsAsync(int BranchID) {
            return base.Channel.schedule_approve_disp_detailsAsync(BranchID);
        }
        
        public System.Data.DataSet get_schedule_tfr_dtls(int BranchID, string auc_dt) {
            return base.Channel.get_schedule_tfr_dtls(BranchID, auc_dt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_tfr_dtlsAsync(int BranchID, string auc_dt) {
            return base.Channel.get_schedule_tfr_dtlsAsync(BranchID, auc_dt);
        }
        
        public System.Data.DataSet get_area_id(int BranchID) {
            return base.Channel.get_area_id(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_area_idAsync(int BranchID) {
            return base.Channel.get_area_idAsync(BranchID);
        }
        
        public System.Data.DataSet get_schedule_dtls(int BranchID) {
            return base.Channel.get_schedule_dtls(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_dtlsAsync(int BranchID) {
            return base.Channel.get_schedule_dtlsAsync(BranchID);
        }
        
        public System.Data.DataSet get_schedule_data(int TransferId) {
            return base.Channel.get_schedule_data(TransferId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_dataAsync(int TransferId) {
            return base.Channel.get_schedule_dataAsync(TransferId);
        }
        
        public System.Data.DataSet get_schedule_dates(int TransferId) {
            return base.Channel.get_schedule_dates(TransferId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_datesAsync(int TransferId) {
            return base.Channel.get_schedule_datesAsync(TransferId);
        }
        
        public System.Data.DataSet schedule_details_rpt() {
            return base.Channel.schedule_details_rpt();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> schedule_details_rptAsync() {
            return base.Channel.schedule_details_rptAsync();
        }
        
        public System.Data.DataSet check_schedule_exist(int LogBranchId, int flag) {
            return base.Channel.check_schedule_exist(LogBranchId, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> check_schedule_existAsync(int LogBranchId, int flag) {
            return base.Channel.check_schedule_existAsync(LogBranchId, flag);
        }
        
        public System.Data.DataSet get_schedule_values(int LogBranchId, int auccenter, int flag) {
            return base.Channel.get_schedule_values(LogBranchId, auccenter, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_valuesAsync(int LogBranchId, int auccenter, int flag) {
            return base.Channel.get_schedule_valuesAsync(LogBranchId, auccenter, flag);
        }
        
        public System.Data.DataSet get_schedule_report_values(int LogBranchId, int auccenter, string tfr_date, int flag) {
            return base.Channel.get_schedule_report_values(LogBranchId, auccenter, tfr_date, flag);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_schedule_report_valuesAsync(int LogBranchId, int auccenter, string tfr_date, int flag) {
            return base.Channel.get_schedule_report_valuesAsync(LogBranchId, auccenter, tfr_date, flag);
        }
        
        public string Branch_ApproveSchedule(int AuctionCenter, int UserId, string Schedule_data) {
            return base.Channel.Branch_ApproveSchedule(AuctionCenter, UserId, Schedule_data);
        }
        
        public System.Threading.Tasks.Task<string> Branch_ApproveScheduleAsync(int AuctionCenter, int UserId, string Schedule_data) {
            return base.Channel.Branch_ApproveScheduleAsync(AuctionCenter, UserId, Schedule_data);
        }
        
        public System.Data.DataSet get_account_number(int BranchID) {
            return base.Channel.get_account_number(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_account_numberAsync(int BranchID) {
            return base.Channel.get_account_numberAsync(BranchID);
        }
        
        public System.Data.DataSet get_tot_amt(int BranchID, int AccountNO, string FromDt) {
            return base.Channel.get_tot_amt(BranchID, AccountNO, FromDt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_tot_amtAsync(int BranchID, int AccountNO, string FromDt) {
            return base.Channel.get_tot_amtAsync(BranchID, AccountNO, FromDt);
        }
        
        public System.Data.DataSet get_stmt_details(int BranchID, int AccountNO, string FromDt, string ToDt) {
            return base.Channel.get_stmt_details(BranchID, AccountNO, FromDt, ToDt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_stmt_detailsAsync(int BranchID, int AccountNO, string FromDt, string ToDt) {
            return base.Channel.get_stmt_detailsAsync(BranchID, AccountNO, FromDt, ToDt);
        }
        
        public System.Data.DataSet get_auction_center(int BranchID) {
            return base.Channel.get_auction_center(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_auction_centerAsync(int BranchID) {
            return base.Channel.get_auction_centerAsync(BranchID);
        }
        
        public System.Data.DataSet get_daily_receival(int BranchID) {
            return base.Channel.get_daily_receival(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_daily_receivalAsync(int BranchID) {
            return base.Channel.get_daily_receivalAsync(BranchID);
        }
        
        public string get_auction_pledge_sts(string PledgeNo) {
            return base.Channel.get_auction_pledge_sts(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<string> get_auction_pledge_stsAsync(string PledgeNo) {
            return base.Channel.get_auction_pledge_stsAsync(PledgeNo);
        }
        
        public string Branch_TransferConfirm(int TransferId, int BranchId, string DataStr, int UserId, int TransferBranchId) {
            return base.Channel.Branch_TransferConfirm(TransferId, BranchId, DataStr, UserId, TransferBranchId);
        }
        
        public System.Threading.Tasks.Task<string> Branch_TransferConfirmAsync(int TransferId, int BranchId, string DataStr, int UserId, int TransferBranchId) {
            return base.Channel.Branch_TransferConfirmAsync(TransferId, BranchId, DataStr, UserId, TransferBranchId);
        }
        
        public System.Data.DataSet get_Schedule_sts_report(int BranchID, int AuctionCenter, int status, string TransferDate) {
            return base.Channel.get_Schedule_sts_report(BranchID, AuctionCenter, status, TransferDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_Schedule_sts_reportAsync(int BranchID, int AuctionCenter, int status, string TransferDate) {
            return base.Channel.get_Schedule_sts_reportAsync(BranchID, AuctionCenter, status, TransferDate);
        }
        
        public System.Data.DataSet get_ibgtno_reprint(int BranchID) {
            return base.Channel.get_ibgtno_reprint(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_ibgtno_reprintAsync(int BranchID) {
            return base.Channel.get_ibgtno_reprintAsync(BranchID);
        }
        
        public System.Data.DataSet get_tfr_details(int IBGTN) {
            return base.Channel.get_tfr_details(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_tfr_detailsAsync(int IBGTN) {
            return base.Channel.get_tfr_detailsAsync(IBGTN);
        }
        
        public System.Data.DataSet get_auction_live_details(string Pledge, int flg) {
            return base.Channel.get_auction_live_details(Pledge, flg);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_auction_live_detailsAsync(string Pledge, int flg) {
            return base.Channel.get_auction_live_detailsAsync(Pledge, flg);
        }
        
        public System.Data.DataSet get_payment_type(int slno) {
            return base.Channel.get_payment_type(slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_payment_typeAsync(int slno) {
            return base.Channel.get_payment_typeAsync(slno);
        }
        
        public System.Data.DataSet get_realize_auction_center(int BranchID, int slno) {
            return base.Channel.get_realize_auction_center(BranchID, slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_realize_auction_centerAsync(int BranchID, int slno) {
            return base.Channel.get_realize_auction_centerAsync(BranchID, slno);
        }
        
        public System.Data.DataSet get_lot_state(int LotID, int slno) {
            return base.Channel.get_lot_state(LotID, slno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_lot_stateAsync(int LotID, int slno) {
            return base.Channel.get_lot_stateAsync(LotID, slno);
        }
        
        public System.Data.DataSet get_gold_rate(int auc_center, string AuctionDate) {
            return base.Channel.get_gold_rate(auc_center, AuctionDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_gold_rateAsync(int auc_center, string AuctionDate) {
            return base.Channel.get_gold_rateAsync(auc_center, AuctionDate);
        }
        
        public System.Data.DataSet get_auctioneer(int LotID, int BranchID, string AuctionDate) {
            return base.Channel.get_auctioneer(LotID, BranchID, AuctionDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_auctioneerAsync(int LotID, int BranchID, string AuctionDate) {
            return base.Channel.get_auctioneerAsync(LotID, BranchID, AuctionDate);
        }
        
        public System.Data.DataSet get_param_value(int pmtr_id, int fm_id, int mod_id) {
            return base.Channel.get_param_value(pmtr_id, fm_id, mod_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_param_valueAsync(int pmtr_id, int fm_id, int mod_id) {
            return base.Channel.get_param_valueAsync(pmtr_id, fm_id, mod_id);
        }
        
        public int ReceiveIBGTN1(int IBGTN, int BranchID) {
            return base.Channel.ReceiveIBGTN1(IBGTN, BranchID);
        }
        
        public System.Threading.Tasks.Task<int> ReceiveIBGTN1Async(int IBGTN, int BranchID) {
            return base.Channel.ReceiveIBGTN1Async(IBGTN, BranchID);
        }
        
        public System.Data.DataSet ReceiveIBGTN2(int IBGTN) {
            return base.Channel.ReceiveIBGTN2(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN2Async(int IBGTN) {
            return base.Channel.ReceiveIBGTN2Async(IBGTN);
        }
        
        public System.Data.DataSet ReceiveIBGTN3(int IBGTN) {
            return base.Channel.ReceiveIBGTN3(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN3Async(int IBGTN) {
            return base.Channel.ReceiveIBGTN3Async(IBGTN);
        }
        
        public System.Data.DataSet ReceiveIBGTN4() {
            return base.Channel.ReceiveIBGTN4();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN4Async() {
            return base.Channel.ReceiveIBGTN4Async();
        }
        
        public System.Data.DataSet ReceiveIBGTN5(int IBGTN) {
            return base.Channel.ReceiveIBGTN5(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN5Async(int IBGTN) {
            return base.Channel.ReceiveIBGTN5Async(IBGTN);
        }
        
        public System.Data.DataSet ReceiveIBGTN6(int IBGTN) {
            return base.Channel.ReceiveIBGTN6(IBGTN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN6Async(int IBGTN) {
            return base.Channel.ReceiveIBGTN6Async(IBGTN);
        }
        
        public System.Data.DataSet ReceiveIBGTN7(int Empcode) {
            return base.Channel.ReceiveIBGTN7(Empcode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN7Async(int Empcode) {
            return base.Channel.ReceiveIBGTN7Async(Empcode);
        }
        
        public System.Data.DataSet ReceiveIBGTN8(int Empcode) {
            return base.Channel.ReceiveIBGTN8(Empcode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReceiveIBGTN8Async(int Empcode) {
            return base.Channel.ReceiveIBGTN8Async(Empcode);
        }
        
        public System.Data.DataSet Check_ah(int Empcode, int branchid) {
            return base.Channel.Check_ah(Empcode, branchid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Check_ahAsync(int Empcode, int branchid) {
            return base.Channel.Check_ahAsync(Empcode, branchid);
        }
        
        public System.Data.DataSet Combo_DocStatus() {
            return base.Channel.Combo_DocStatus();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Combo_DocStatusAsync() {
            return base.Channel.Combo_DocStatusAsync();
        }
        
        public System.Data.DataSet Combo_FillBranch(int BranchID) {
            return base.Channel.Combo_FillBranch(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Combo_FillBranchAsync(int BranchID) {
            return base.Channel.Combo_FillBranchAsync(BranchID);
        }
        
        public System.Data.DataSet Combo_fillIBGTN(int BranchID) {
            return base.Channel.Combo_fillIBGTN(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Combo_fillIBGTNAsync(int BranchID) {
            return base.Channel.Combo_fillIBGTNAsync(BranchID);
        }
        
        public System.Data.DataSet Select_RlNo(string PledgeNo) {
            return base.Channel.Select_RlNo(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Select_RlNoAsync(string PledgeNo) {
            return base.Channel.Select_RlNoAsync(PledgeNo);
        }
        
        public System.Data.DataSet Confirm_document_upload(string PledgeNo) {
            return base.Channel.Confirm_document_upload(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Confirm_document_uploadAsync(string PledgeNo) {
            return base.Channel.Confirm_document_uploadAsync(PledgeNo);
        }
        
        public System.Data.DataSet Combo_PledgeNo(string ibgtn) {
            return base.Channel.Combo_PledgeNo(ibgtn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Combo_PledgeNoAsync(string ibgtn) {
            return base.Channel.Combo_PledgeNoAsync(ibgtn);
        }
        
        public System.Data.DataSet get_attached_document(string PledgeNo) {
            return base.Channel.get_attached_document(PledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_attached_documentAsync(string PledgeNo) {
            return base.Channel.get_attached_documentAsync(PledgeNo);
        }
        
        public System.Data.DataSet get_uploaded_documents(string PledgeNo, int docstatus) {
            return base.Channel.get_uploaded_documents(PledgeNo, docstatus);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_uploaded_documentsAsync(string PledgeNo, int docstatus) {
            return base.Channel.get_uploaded_documentsAsync(PledgeNo, docstatus);
        }
        
        public System.Data.DataSet UpdateIrregular(int BranchID) {
            return base.Channel.UpdateIrregular(BranchID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> UpdateIrregularAsync(int BranchID) {
            return base.Channel.UpdateIrregularAsync(BranchID);
        }
        
        public void get_logout(int usr) {
            base.Channel.get_logout(usr);
        }
        
        public System.Threading.Tasks.Task get_logoutAsync(int usr) {
            return base.Channel.get_logoutAsync(usr);
        }
        
        public int login_check(int userid, string passwd, int brid) {
            return base.Channel.login_check(userid, passwd, brid);
        }
        
        public System.Threading.Tasks.Task<int> login_checkAsync(int userid, string passwd, int brid) {
            return base.Channel.login_checkAsync(userid, passwd, brid);
        }
        
        public string VerifyDocument(string PledgeNo, int DocumentStatus, int UserID) {
            return base.Channel.VerifyDocument(PledgeNo, DocumentStatus, UserID);
        }
        
        public System.Threading.Tasks.Task<string> VerifyDocumentAsync(string PledgeNo, int DocumentStatus, int UserID) {
            return base.Channel.VerifyDocumentAsync(PledgeNo, DocumentStatus, UserID);
        }
        
        public string VerifyPacket(string PledgeNo, int PacketStatus, int UserID) {
            return base.Channel.VerifyPacket(PledgeNo, PacketStatus, UserID);
        }
        
        public System.Threading.Tasks.Task<string> VerifyPacketAsync(string PledgeNo, int PacketStatus, int UserID) {
            return base.Channel.VerifyPacketAsync(PledgeNo, PacketStatus, UserID);
        }
        
        public string UpdateTareWeight(string PledgeNo, double RcvdTareWeight, double DifferenceWt, int UserID) {
            return base.Channel.UpdateTareWeight(PledgeNo, RcvdTareWeight, DifferenceWt, UserID);
        }
        
        public System.Threading.Tasks.Task<string> UpdateTareWeightAsync(string PledgeNo, double RcvdTareWeight, double DifferenceWt, int UserID) {
            return base.Channel.UpdateTareWeightAsync(PledgeNo, RcvdTareWeight, DifferenceWt, UserID);
        }
        
        public string ClassifyPledge(string PledgeNo, int Classification, int BranchID, int UserID) {
            return base.Channel.ClassifyPledge(PledgeNo, Classification, BranchID, UserID);
        }
        
        public System.Threading.Tasks.Task<string> ClassifyPledgeAsync(string PledgeNo, int Classification, int BranchID, int UserID) {
            return base.Channel.ClassifyPledgeAsync(PledgeNo, Classification, BranchID, UserID);
        }
        
        public string Normalization(string PledgeNo, string Data, double GrossWt, double WtDiff, double StandardWeight, int UserID) {
            return base.Channel.Normalization(PledgeNo, Data, GrossWt, WtDiff, StandardWeight, UserID);
        }
        
        public System.Threading.Tasks.Task<string> NormalizationAsync(string PledgeNo, string Data, double GrossWt, double WtDiff, double StandardWeight, int UserID) {
            return base.Channel.NormalizationAsync(PledgeNo, Data, GrossWt, WtDiff, StandardWeight, UserID);
        }
        
        public string Normalize(string PledgeNo, int Brid, string Data, double GrossWt, double WtDiff, double StandardWeight, int UserID, double RcvdTareWeight, int PacketStatus) {
            return base.Channel.Normalize(PledgeNo, Brid, Data, GrossWt, WtDiff, StandardWeight, UserID, RcvdTareWeight, PacketStatus);
        }
        
        public System.Threading.Tasks.Task<string> NormalizeAsync(string PledgeNo, int Brid, string Data, double GrossWt, double WtDiff, double StandardWeight, int UserID, double RcvdTareWeight, int PacketStatus) {
            return base.Channel.NormalizeAsync(PledgeNo, Brid, Data, GrossWt, WtDiff, StandardWeight, UserID, RcvdTareWeight, PacketStatus);
        }
        
        public string ReceiveIBGTN(int IBGTN_NO, int AuditedBy, int BranchID, int UserID) {
            return base.Channel.ReceiveIBGTN(IBGTN_NO, AuditedBy, BranchID, UserID);
        }
        
        public System.Threading.Tasks.Task<string> ReceiveIBGTNAsync(int IBGTN_NO, int AuditedBy, int BranchID, int UserID) {
            return base.Channel.ReceiveIBGTNAsync(IBGTN_NO, AuditedBy, BranchID, UserID);
        }
        
        public string CreateLot(int AuctionCentre, string Data, int UserID, double Agrosswt, int Type) {
            return base.Channel.CreateLot(AuctionCentre, Data, UserID, Agrosswt, Type);
        }
        
        public System.Threading.Tasks.Task<string> CreateLotAsync(int AuctionCentre, string Data, int UserID, double Agrosswt, int Type) {
            return base.Channel.CreateLotAsync(AuctionCentre, Data, UserID, Agrosswt, Type);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.UploadMeltingApproval(NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalRequest request) {
            return base.Channel.UploadMeltingApproval(request);
        }
        
        public string UploadMeltingApproval(int LotId, double TfrWeight, byte[] KycDoc, int UserId, int smith_code, int AuctionCentre) {
            NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalRequest inValue = new NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalRequest();
            inValue.LotId = LotId;
            inValue.TfrWeight = TfrWeight;
            inValue.KycDoc = KycDoc;
            inValue.UserId = UserId;
            inValue.smith_code = smith_code;
            inValue.AuctionCentre = AuctionCentre;
            NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).UploadMeltingApproval(inValue);
            return retVal.UploadMeltingApprovalResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.UploadMeltingApprovalAsync(NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalRequest request) {
            return base.Channel.UploadMeltingApprovalAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalResponse> UploadMeltingApprovalAsync(int LotId, double TfrWeight, byte[] KycDoc, int UserId, int smith_code, int AuctionCentre) {
            NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalRequest inValue = new NewAuctionLetter.GL_AUCTION.UploadMeltingApprovalRequest();
            inValue.LotId = LotId;
            inValue.TfrWeight = TfrWeight;
            inValue.KycDoc = KycDoc;
            inValue.UserId = UserId;
            inValue.smith_code = smith_code;
            inValue.AuctionCentre = AuctionCentre;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).UploadMeltingApprovalAsync(inValue);
        }
        
        public string ReceiveMeltedLot(int LotID, double ReceivedWeight, double MeltedPurity, double MeltedPureWt, int UserID) {
            return base.Channel.ReceiveMeltedLot(LotID, ReceivedWeight, MeltedPurity, MeltedPureWt, UserID);
        }
        
        public System.Threading.Tasks.Task<string> ReceiveMeltedLotAsync(int LotID, double ReceivedWeight, double MeltedPurity, double MeltedPureWt, int UserID) {
            return base.Channel.ReceiveMeltedLotAsync(LotID, ReceivedWeight, MeltedPurity, MeltedPureWt, UserID);
        }
        
        public string Realization(int BranchID, int LotID, double MarketRate, double MeltMarketRate, double NormalMargin, double BankMargin, double SalesRate, double IndValue, double RealValue, System.DateTime AuctionDate, int PayMode, int VendorID, int UserID, string Aucid) {
            return base.Channel.Realization(BranchID, LotID, MarketRate, MeltMarketRate, NormalMargin, BankMargin, SalesRate, IndValue, RealValue, AuctionDate, PayMode, VendorID, UserID, Aucid);
        }
        
        public System.Threading.Tasks.Task<string> RealizationAsync(int BranchID, int LotID, double MarketRate, double MeltMarketRate, double NormalMargin, double BankMargin, double SalesRate, double IndValue, double RealValue, System.DateTime AuctionDate, int PayMode, int VendorID, int UserID, string Aucid) {
            return base.Channel.RealizationAsync(BranchID, LotID, MarketRate, MeltMarketRate, NormalMargin, BankMargin, SalesRate, IndValue, RealValue, AuctionDate, PayMode, VendorID, UserID, Aucid);
        }
        
        public string ReleaseGold(int LotID, int UserID) {
            return base.Channel.ReleaseGold(LotID, UserID);
        }
        
        public System.Threading.Tasks.Task<string> ReleaseGoldAsync(int LotID, int UserID) {
            return base.Channel.ReleaseGoldAsync(LotID, UserID);
        }
        
        public System.Data.DataTable get_invoice_dtls(int LotID, int from_loc_id, int to_loc_id) {
            return base.Channel.get_invoice_dtls(LotID, from_loc_id, to_loc_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> get_invoice_dtlsAsync(int LotID, int from_loc_id, int to_loc_id) {
            return base.Channel.get_invoice_dtlsAsync(LotID, from_loc_id, to_loc_id);
        }
        
        public string ConfirmInvoice(int LotID, int BranchID, int UserID) {
            return base.Channel.ConfirmInvoice(LotID, BranchID, UserID);
        }
        
        public System.Threading.Tasks.Task<string> ConfirmInvoiceAsync(int LotID, int BranchID, int UserID) {
            return base.Channel.ConfirmInvoiceAsync(LotID, BranchID, UserID);
        }
        
        public System.Data.DataSet GetMarketValue() {
            return base.Channel.GetMarketValue();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMarketValueAsync() {
            return base.Channel.GetMarketValueAsync();
        }
        
        public string FixScheduleDate(string TfrData, int UserId) {
            return base.Channel.FixScheduleDate(TfrData, UserId);
        }
        
        public System.Threading.Tasks.Task<string> FixScheduleDateAsync(string TfrData, int UserId) {
            return base.Channel.FixScheduleDateAsync(TfrData, UserId);
        }
        
        public string AddSchedule(string TfrData, int UserId) {
            return base.Channel.AddSchedule(TfrData, UserId);
        }
        
        public System.Threading.Tasks.Task<string> AddScheduleAsync(string TfrData, int UserId) {
            return base.Channel.AddScheduleAsync(TfrData, UserId);
        }
        
        public string ApproveSchedule(int AuctionCenter, int UserId) {
            return base.Channel.ApproveSchedule(AuctionCenter, UserId);
        }
        
        public System.Threading.Tasks.Task<string> ApproveScheduleAsync(int AuctionCenter, int UserId) {
            return base.Channel.ApproveScheduleAsync(AuctionCenter, UserId);
        }
        
        public string ConfirmSchedule(int TransferId, int CarryEmp, int UserId) {
            return base.Channel.ConfirmSchedule(TransferId, CarryEmp, UserId);
        }
        
        public System.Threading.Tasks.Task<string> ConfirmScheduleAsync(int TransferId, int CarryEmp, int UserId) {
            return base.Channel.ConfirmScheduleAsync(TransferId, CarryEmp, UserId);
        }
        
        public string AddNewVendor(string VName, string HouseName, string Locality, int StateId, int DistrictId, int PinSl, string LandPhone, string MobileNo, string PanNo, string TinNo, string CstNo, int TypeID, int KycID, string KycNo, int UserId) {
            return base.Channel.AddNewVendor(VName, HouseName, Locality, StateId, DistrictId, PinSl, LandPhone, MobileNo, PanNo, TinNo, CstNo, TypeID, KycID, KycNo, UserId);
        }
        
        public System.Threading.Tasks.Task<string> AddNewVendorAsync(string VName, string HouseName, string Locality, int StateId, int DistrictId, int PinSl, string LandPhone, string MobileNo, string PanNo, string TinNo, string CstNo, int TypeID, int KycID, string KycNo, int UserId) {
            return base.Channel.AddNewVendorAsync(VName, HouseName, Locality, StateId, DistrictId, PinSl, LandPhone, MobileNo, PanNo, TinNo, CstNo, TypeID, KycID, KycNo, UserId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.UploadKYCResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.UploadKYC(NewAuctionLetter.GL_AUCTION.UploadKYCRequest request) {
            return base.Channel.UploadKYC(request);
        }
        
        public int UploadKYC(int VendorId, byte[] KycDoc) {
            NewAuctionLetter.GL_AUCTION.UploadKYCRequest inValue = new NewAuctionLetter.GL_AUCTION.UploadKYCRequest();
            inValue.VendorId = VendorId;
            inValue.KycDoc = KycDoc;
            NewAuctionLetter.GL_AUCTION.UploadKYCResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).UploadKYC(inValue);
            return retVal.UploadKYCResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadKYCResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.UploadKYCAsync(NewAuctionLetter.GL_AUCTION.UploadKYCRequest request) {
            return base.Channel.UploadKYCAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadKYCResponse> UploadKYCAsync(int VendorId, byte[] KycDoc) {
            NewAuctionLetter.GL_AUCTION.UploadKYCRequest inValue = new NewAuctionLetter.GL_AUCTION.UploadKYCRequest();
            inValue.VendorId = VendorId;
            inValue.KycDoc = KycDoc;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).UploadKYCAsync(inValue);
        }
        
        public string RequestMarketRate(int AuctionCenter, double Carat22, double Carat24, System.DateTime EffectiveDt, int UserId) {
            return base.Channel.RequestMarketRate(AuctionCenter, Carat22, Carat24, EffectiveDt, UserId);
        }
        
        public System.Threading.Tasks.Task<string> RequestMarketRateAsync(int AuctionCenter, double Carat22, double Carat24, System.DateTime EffectiveDt, int UserId) {
            return base.Channel.RequestMarketRateAsync(AuctionCenter, Carat22, Carat24, EffectiveDt, UserId);
        }
        
        public string ApproveMarketRate(int AuctionCenter, int AppStatus, int UserId) {
            return base.Channel.ApproveMarketRate(AuctionCenter, AppStatus, UserId);
        }
        
        public System.Threading.Tasks.Task<string> ApproveMarketRateAsync(int AuctionCenter, int AppStatus, int UserId) {
            return base.Channel.ApproveMarketRateAsync(AuctionCenter, AppStatus, UserId);
        }
        
        public string CollectionDisplay(int VendorId, int PayMode, int LotId) {
            return base.Channel.CollectionDisplay(VendorId, PayMode, LotId);
        }
        
        public System.Threading.Tasks.Task<string> CollectionDisplayAsync(int VendorId, int PayMode, int LotId) {
            return base.Channel.CollectionDisplayAsync(VendorId, PayMode, LotId);
        }
        
        public string CollectionConfirm(int BranchId, string CollectionData, int BankAccount, int UserId) {
            return base.Channel.CollectionConfirm(BranchId, CollectionData, BankAccount, UserId);
        }
        
        public System.Threading.Tasks.Task<string> CollectionConfirmAsync(int BranchId, string CollectionData, int BankAccount, int UserId) {
            return base.Channel.CollectionConfirmAsync(BranchId, CollectionData, BankAccount, UserId);
        }
        
        public string UploadDocument(string PledgeNo, int UserId) {
            return base.Channel.UploadDocument(PledgeNo, UserId);
        }
        
        public System.Threading.Tasks.Task<string> UploadDocumentAsync(string PledgeNo, int UserId) {
            return base.Channel.UploadDocumentAsync(PledgeNo, UserId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.TempUploadDocumentResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.TempUploadDocument(NewAuctionLetter.GL_AUCTION.TempUploadDocumentRequest request) {
            return base.Channel.TempUploadDocument(request);
        }
        
        public string TempUploadDocument(string PledgeNo, byte[] Doc, int UserId) {
            NewAuctionLetter.GL_AUCTION.TempUploadDocumentRequest inValue = new NewAuctionLetter.GL_AUCTION.TempUploadDocumentRequest();
            inValue.PledgeNo = PledgeNo;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            NewAuctionLetter.GL_AUCTION.TempUploadDocumentResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).TempUploadDocument(inValue);
            return retVal.TempUploadDocumentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.TempUploadDocumentResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.TempUploadDocumentAsync(NewAuctionLetter.GL_AUCTION.TempUploadDocumentRequest request) {
            return base.Channel.TempUploadDocumentAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.TempUploadDocumentResponse> TempUploadDocumentAsync(string PledgeNo, byte[] Doc, int UserId) {
            NewAuctionLetter.GL_AUCTION.TempUploadDocumentRequest inValue = new NewAuctionLetter.GL_AUCTION.TempUploadDocumentRequest();
            inValue.PledgeNo = PledgeNo;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).TempUploadDocumentAsync(inValue);
        }
        
        public string CancelUploadDocument(string PledgeNo, int UserId) {
            return base.Channel.CancelUploadDocument(PledgeNo, UserId);
        }
        
        public System.Threading.Tasks.Task<string> CancelUploadDocumentAsync(string PledgeNo, int UserId) {
            return base.Channel.CancelUploadDocumentAsync(PledgeNo, UserId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.UploadDocumentNewResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.UploadDocumentNew(NewAuctionLetter.GL_AUCTION.UploadDocumentNewRequest request) {
            return base.Channel.UploadDocumentNew(request);
        }
        
        public string UploadDocumentNew(string PledgeNo, int DocId, byte[] Doc, int UserId) {
            NewAuctionLetter.GL_AUCTION.UploadDocumentNewRequest inValue = new NewAuctionLetter.GL_AUCTION.UploadDocumentNewRequest();
            inValue.PledgeNo = PledgeNo;
            inValue.DocId = DocId;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            NewAuctionLetter.GL_AUCTION.UploadDocumentNewResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).UploadDocumentNew(inValue);
            return retVal.UploadDocumentNewResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadDocumentNewResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.UploadDocumentNewAsync(NewAuctionLetter.GL_AUCTION.UploadDocumentNewRequest request) {
            return base.Channel.UploadDocumentNewAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.UploadDocumentNewResponse> UploadDocumentNewAsync(string PledgeNo, int DocId, byte[] Doc, int UserId) {
            NewAuctionLetter.GL_AUCTION.UploadDocumentNewRequest inValue = new NewAuctionLetter.GL_AUCTION.UploadDocumentNewRequest();
            inValue.PledgeNo = PledgeNo;
            inValue.DocId = DocId;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).UploadDocumentNewAsync(inValue);
        }
        
        public string Schedule_dtl(int Brid, int userid) {
            return base.Channel.Schedule_dtl(Brid, userid);
        }
        
        public System.Threading.Tasks.Task<string> Schedule_dtlAsync(int Brid, int userid) {
            return base.Channel.Schedule_dtlAsync(Brid, userid);
        }
        
        public string Tare_Weight_Confirm(int branch_id, string inst_arr, int userid) {
            return base.Channel.Tare_Weight_Confirm(branch_id, inst_arr, userid);
        }
        
        public System.Threading.Tasks.Task<string> Tare_Weight_ConfirmAsync(int branch_id, string inst_arr, int userid) {
            return base.Channel.Tare_Weight_ConfirmAsync(branch_id, inst_arr, userid);
        }
        
        public System.Data.DataSet hot_list(int brid, string pledge_no, string hiden) {
            return base.Channel.hot_list(brid, pledge_no, hiden);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> hot_listAsync(int brid, string pledge_no, string hiden) {
            return base.Channel.hot_listAsync(brid, pledge_no, hiden);
        }
        
        public System.Data.DataSet pledge_classification() {
            return base.Channel.pledge_classification();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> pledge_classificationAsync() {
            return base.Channel.pledge_classificationAsync();
        }
        
        public System.Data.DataSet sticker_info(string stick) {
            return base.Channel.sticker_info(stick);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> sticker_infoAsync(string stick) {
            return base.Channel.sticker_infoAsync(stick);
        }
        
        public string auc_receive(string dtl) {
            return base.Channel.auc_receive(dtl);
        }
        
        public System.Threading.Tasks.Task<string> auc_receiveAsync(string dtl) {
            return base.Channel.auc_receiveAsync(dtl);
        }
        
        public System.Data.DataSet photo(string pledgeno) {
            return base.Channel.photo(pledgeno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> photoAsync(string pledgeno) {
            return base.Channel.photoAsync(pledgeno);
        }
        
        public System.Data.DataSet ver_reason() {
            return base.Channel.ver_reason();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ver_reasonAsync() {
            return base.Channel.ver_reasonAsync();
        }
        
        public System.Data.DataSet Pledge_dtls(string plno) {
            return base.Channel.Pledge_dtls(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Pledge_dtlsAsync(string plno) {
            return base.Channel.Pledge_dtlsAsync(plno);
        }
        
        public System.Data.DataSet Pledge_info(string plno) {
            return base.Channel.Pledge_info(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Pledge_infoAsync(string plno) {
            return base.Channel.Pledge_infoAsync(plno);
        }
        
        public System.Data.DataSet item_display(string plno) {
            return base.Channel.item_display(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> item_displayAsync(string plno) {
            return base.Channel.item_displayAsync(plno);
        }
        
        public System.Data.DataSet item_dtls(string plno, short item) {
            return base.Channel.item_dtls(plno, item);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> item_dtlsAsync(string plno, short item) {
            return base.Channel.item_dtlsAsync(plno, item);
        }
        
        public System.Data.DataSet GoldType() {
            return base.Channel.GoldType();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GoldTypeAsync() {
            return base.Channel.GoldTypeAsync();
        }
        
        public System.Data.DataSet purity_display(int type) {
            return base.Channel.purity_display(type);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> purity_displayAsync(int type) {
            return base.Channel.purity_displayAsync(type);
        }
        
        public System.Data.DataSet purity_val(int id) {
            return base.Channel.purity_val(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> purity_valAsync(int id) {
            return base.Channel.purity_valAsync(id);
        }
        
        public string auc_purity(string dtl, string useid, string Brid1) {
            return base.Channel.auc_purity(dtl, useid, Brid1);
        }
        
        public System.Threading.Tasks.Task<string> auc_purityAsync(string dtl, string useid, string Brid1) {
            return base.Channel.auc_purityAsync(dtl, useid, Brid1);
        }
        
        public System.Data.DataSet packet_var() {
            return base.Channel.packet_var();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> packet_varAsync() {
            return base.Channel.packet_varAsync();
        }
        
        public System.Data.DataSet TareWtVer(string plno) {
            return base.Channel.TareWtVer(plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TareWtVerAsync(string plno) {
            return base.Channel.TareWtVerAsync(plno);
        }
        
        public string intbr_request(string cus) {
            return base.Channel.intbr_request(cus);
        }
        
        public System.Threading.Tasks.Task<string> intbr_requestAsync(string cus) {
            return base.Channel.intbr_requestAsync(cus);
        }
        
        public System.Data.DataSet aucbr_fill_par(short brid) {
            return base.Channel.aucbr_fill_par(brid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> aucbr_fill_parAsync(short brid) {
            return base.Channel.aucbr_fill_parAsync(brid);
        }
        
        public System.Data.DataSet inerreq_fill(short bid) {
            return base.Channel.inerreq_fill(bid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> inerreq_fillAsync(short bid) {
            return base.Channel.inerreq_fillAsync(bid);
        }
        
        public System.Data.DataSet inerreq_fill_tar(short bid) {
            return base.Channel.inerreq_fill_tar(bid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> inerreq_fill_tarAsync(short bid) {
            return base.Channel.inerreq_fill_tarAsync(bid);
        }
        
        public System.Data.DataSet aucbr_fill() {
            return base.Channel.aucbr_fill();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> aucbr_fillAsync() {
            return base.Channel.aucbr_fillAsync();
        }
        
        public System.Data.DataSet br_fill() {
            return base.Channel.br_fill();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> br_fillAsync() {
            return base.Channel.br_fillAsync();
        }
        
        public System.Data.DataSet reconf(short bid) {
            return base.Channel.reconf(bid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> reconfAsync(short bid) {
            return base.Channel.reconfAsync(bid);
        }
        
        public int CheckUser(int UserId, string PassWd) {
            return base.Channel.CheckUser(UserId, PassWd);
        }
        
        public System.Threading.Tasks.Task<int> CheckUserAsync(int UserId, string PassWd) {
            return base.Channel.CheckUserAsync(UserId, PassWd);
        }
        
        public string TransferConfirm(int TransferId, int BranchId, string DataStr, int UserId, int CarryUser, int TransferBranchId) {
            return base.Channel.TransferConfirm(TransferId, BranchId, DataStr, UserId, CarryUser, TransferBranchId);
        }
        
        public System.Threading.Tasks.Task<string> TransferConfirmAsync(int TransferId, int BranchId, string DataStr, int UserId, int CarryUser, int TransferBranchId) {
            return base.Channel.TransferConfirmAsync(TransferId, BranchId, DataStr, UserId, CarryUser, TransferBranchId);
        }
        
        public System.Data.DataSet TransferSticker(string stick, short brid) {
            return base.Channel.TransferSticker(stick, brid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TransferStickerAsync(string stick, short brid) {
            return base.Channel.TransferStickerAsync(stick, brid);
        }
        
        public System.Data.DataSet Pledge_Class(string stick) {
            return base.Channel.Pledge_Class(stick);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Pledge_ClassAsync(string stick) {
            return base.Channel.Pledge_ClassAsync(stick);
        }
        
        public System.Data.DataSet type() {
            return base.Channel.type();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> typeAsync() {
            return base.Channel.typeAsync();
        }
        
        public System.Data.DataSet ReciveGold(string StickNum) {
            return base.Channel.ReciveGold(StickNum);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ReciveGoldAsync(string StickNum) {
            return base.Channel.ReciveGoldAsync(StickNum);
        }
        
        public System.Data.DataSet ItemDetails(string StickNum, short bid, string plno) {
            return base.Channel.ItemDetails(StickNum, bid, plno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ItemDetailsAsync(string StickNum, short bid, string plno) {
            return base.Channel.ItemDetailsAsync(StickNum, bid, plno);
        }
        
        public string AuctionGold_Rcvd(int Bid, string Pno, string usid) {
            return base.Channel.AuctionGold_Rcvd(Bid, Pno, usid);
        }
        
        public System.Threading.Tasks.Task<string> AuctionGold_RcvdAsync(int Bid, string Pno, string usid) {
            return base.Channel.AuctionGold_RcvdAsync(Bid, Pno, usid);
        }
        
        public System.Data.DataSet auctionpledge_dates() {
            return base.Channel.auctionpledge_dates();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> auctionpledge_datesAsync() {
            return base.Channel.auctionpledge_datesAsync();
        }
        
        public System.Data.DataSet TareWt_Ver(string stick) {
            return base.Channel.TareWt_Ver(stick);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TareWt_VerAsync(string stick) {
            return base.Channel.TareWt_VerAsync(stick);
        }
        
        public System.Data.DataSet Packet_Ver(string stick) {
            return base.Channel.Packet_Ver(stick);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Packet_VerAsync(string stick) {
            return base.Channel.Packet_VerAsync(stick);
        }
        
        public System.Data.DataSet GetWeighingBalance() {
            return base.Channel.GetWeighingBalance();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWeighingBalanceAsync() {
            return base.Channel.GetWeighingBalanceAsync();
        }
        
        public System.Data.DataSet GetWeighingBalanceWeight() {
            return base.Channel.GetWeighingBalanceWeight();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWeighingBalanceWeightAsync() {
            return base.Channel.GetWeighingBalanceWeightAsync();
        }
        
        public int Wbalance_status_Upd(int brid, int Stat) {
            return base.Channel.Wbalance_status_Upd(brid, Stat);
        }
        
        public System.Threading.Tasks.Task<int> Wbalance_status_UpdAsync(int brid, int Stat) {
            return base.Channel.Wbalance_status_UpdAsync(brid, Stat);
        }
        
        public string DeferRequest(string PledgeNo, int ReasonId, System.DateTime DeferDate, int BranchId, int UserId, string phno, int mode, string Email, string Other) {
            return base.Channel.DeferRequest(PledgeNo, ReasonId, DeferDate, BranchId, UserId, phno, mode, Email, Other);
        }
        
        public System.Threading.Tasks.Task<string> DeferRequestAsync(string PledgeNo, int ReasonId, System.DateTime DeferDate, int BranchId, int UserId, string phno, int mode, string Email, string Other) {
            return base.Channel.DeferRequestAsync(PledgeNo, ReasonId, DeferDate, BranchId, UserId, phno, mode, Email, Other);
        }
        
        public string DeferApprove(string RequestId, string pledgeno, string deferdate, int UserId, int ConfStatus, string remarks) {
            return base.Channel.DeferApprove(RequestId, pledgeno, deferdate, UserId, ConfStatus, remarks);
        }
        
        public System.Threading.Tasks.Task<string> DeferApproveAsync(string RequestId, string pledgeno, string deferdate, int UserId, int ConfStatus, string remarks) {
            return base.Channel.DeferApproveAsync(RequestId, pledgeno, deferdate, UserId, ConfStatus, remarks);
        }
        
        public string DeferAuctionApprove(int RequestId, int UserId, int ConfStatus) {
            return base.Channel.DeferAuctionApprove(RequestId, UserId, ConfStatus);
        }
        
        public System.Threading.Tasks.Task<string> DeferAuctionApproveAsync(int RequestId, int UserId, int ConfStatus) {
            return base.Channel.DeferAuctionApproveAsync(RequestId, UserId, ConfStatus);
        }
        
        public int GetState(int br) {
            return base.Channel.GetState(br);
        }
        
        public System.Threading.Tasks.Task<int> GetStateAsync(int br) {
            return base.Channel.GetStateAsync(br);
        }
        
        public System.Data.DataSet FillStatus() {
            return base.Channel.FillStatus();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FillStatusAsync() {
            return base.Channel.FillStatusAsync();
        }
        
        public System.Data.DataSet FillItems(string pledgeNo) {
            return base.Channel.FillItems(pledgeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FillItemsAsync(string pledgeNo) {
            return base.Channel.FillItemsAsync(pledgeNo);
        }
        
        public string Irregularity_Updation(int BranchId, string PledgeNo, string UserId, int IrregId, int Flag, string Rems, string DataStr) {
            return base.Channel.Irregularity_Updation(BranchId, PledgeNo, UserId, IrregId, Flag, Rems, DataStr);
        }
        
        public System.Threading.Tasks.Task<string> Irregularity_UpdationAsync(int BranchId, string PledgeNo, string UserId, int IrregId, int Flag, string Rems, string DataStr) {
            return base.Channel.Irregularity_UpdationAsync(BranchId, PledgeNo, UserId, IrregId, Flag, Rems, DataStr);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.PathUpdateResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.PathUpdate(NewAuctionLetter.GL_AUCTION.PathUpdateRequest request) {
            return base.Channel.PathUpdate(request);
        }
        
        public int PathUpdate(string IrregId, string FirNo, byte[] Dat) {
            NewAuctionLetter.GL_AUCTION.PathUpdateRequest inValue = new NewAuctionLetter.GL_AUCTION.PathUpdateRequest();
            inValue.IrregId = IrregId;
            inValue.FirNo = FirNo;
            inValue.Dat = Dat;
            NewAuctionLetter.GL_AUCTION.PathUpdateResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).PathUpdate(inValue);
            return retVal.PathUpdateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.PathUpdateResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.PathUpdateAsync(NewAuctionLetter.GL_AUCTION.PathUpdateRequest request) {
            return base.Channel.PathUpdateAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.PathUpdateResponse> PathUpdateAsync(string IrregId, string FirNo, byte[] Dat) {
            NewAuctionLetter.GL_AUCTION.PathUpdateRequest inValue = new NewAuctionLetter.GL_AUCTION.PathUpdateRequest();
            inValue.IrregId = IrregId;
            inValue.FirNo = FirNo;
            inValue.Dat = Dat;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).PathUpdateAsync(inValue);
        }
        
        public System.Data.DataSet GetItems(string IrregId) {
            return base.Channel.GetItems(IrregId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetItemsAsync(string IrregId) {
            return base.Channel.GetItemsAsync(IrregId);
        }
        
        public string Approve_Irregularity(string datastr, int Choice) {
            return base.Channel.Approve_Irregularity(datastr, Choice);
        }
        
        public System.Threading.Tasks.Task<string> Approve_IrregularityAsync(string datastr, int Choice) {
            return base.Channel.Approve_IrregularityAsync(datastr, Choice);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.Bidder_PunchingResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.Bidder_Punching(NewAuctionLetter.GL_AUCTION.Bidder_PunchingRequest request) {
            return base.Channel.Bidder_Punching(request);
        }
        
        public string Bidder_Punching(int aid, byte[] Doc, int UserId, int Branchid) {
            NewAuctionLetter.GL_AUCTION.Bidder_PunchingRequest inValue = new NewAuctionLetter.GL_AUCTION.Bidder_PunchingRequest();
            inValue.aid = aid;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            inValue.Branchid = Branchid;
            NewAuctionLetter.GL_AUCTION.Bidder_PunchingResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).Bidder_Punching(inValue);
            return retVal.Bidder_PunchingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Bidder_PunchingResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.Bidder_PunchingAsync(NewAuctionLetter.GL_AUCTION.Bidder_PunchingRequest request) {
            return base.Channel.Bidder_PunchingAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.Bidder_PunchingResponse> Bidder_PunchingAsync(int aid, byte[] Doc, int UserId, int Branchid) {
            NewAuctionLetter.GL_AUCTION.Bidder_PunchingRequest inValue = new NewAuctionLetter.GL_AUCTION.Bidder_PunchingRequest();
            inValue.aid = aid;
            inValue.Doc = Doc;
            inValue.UserId = UserId;
            inValue.Branchid = Branchid;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).Bidder_PunchingAsync(inValue);
        }
        
        public string vend_auth_add(int bid, string nm, string pno, int uid, string add) {
            return base.Channel.vend_auth_add(bid, nm, pno, uid, add);
        }
        
        public System.Threading.Tasks.Task<string> vend_auth_addAsync(int bid, string nm, string pno, int uid, string add) {
            return base.Channel.vend_auth_addAsync(bid, nm, pno, uid, add);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NewAuctionLetter.GL_AUCTION.bid_auth_punchingResponse NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.bid_auth_punching(NewAuctionLetter.GL_AUCTION.bid_auth_punchingRequest request) {
            return base.Channel.bid_auth_punching(request);
        }
        
        public string bid_auth_punching(int bdid, int auid, byte[] Doc, int uid, int brid) {
            NewAuctionLetter.GL_AUCTION.bid_auth_punchingRequest inValue = new NewAuctionLetter.GL_AUCTION.bid_auth_punchingRequest();
            inValue.bdid = bdid;
            inValue.auid = auid;
            inValue.Doc = Doc;
            inValue.uid = uid;
            inValue.brid = brid;
            NewAuctionLetter.GL_AUCTION.bid_auth_punchingResponse retVal = ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).bid_auth_punching(inValue);
            return retVal.bid_auth_punchingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.bid_auth_punchingResponse> NewAuctionLetter.GL_AUCTION.Auction_serviceSoap.bid_auth_punchingAsync(NewAuctionLetter.GL_AUCTION.bid_auth_punchingRequest request) {
            return base.Channel.bid_auth_punchingAsync(request);
        }
        
        public System.Threading.Tasks.Task<NewAuctionLetter.GL_AUCTION.bid_auth_punchingResponse> bid_auth_punchingAsync(int bdid, int auid, byte[] Doc, int uid, int brid) {
            NewAuctionLetter.GL_AUCTION.bid_auth_punchingRequest inValue = new NewAuctionLetter.GL_AUCTION.bid_auth_punchingRequest();
            inValue.bdid = bdid;
            inValue.auid = auid;
            inValue.Doc = Doc;
            inValue.uid = uid;
            inValue.brid = brid;
            return ((NewAuctionLetter.GL_AUCTION.Auction_serviceSoap)(this)).bid_auth_punchingAsync(inValue);
        }
        
        public string FixScheduleDatenew(string dtls, int UserId) {
            return base.Channel.FixScheduleDatenew(dtls, UserId);
        }
        
        public System.Threading.Tasks.Task<string> FixScheduleDatenewAsync(string dtls, int UserId) {
            return base.Channel.FixScheduleDatenewAsync(dtls, UserId);
        }
    }
}
